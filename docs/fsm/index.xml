<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FSM - Hierarchical Finite State Machine on tangly Components</title>
    <link>https://blog.tangly.net/docs/fsm/</link>
    <description>Recent content in FSM - Hierarchical Finite State Machine on tangly Components</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 01 May 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.tangly.net/docs/fsm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Readme</title>
      <link>https://blog.tangly.net/docs/fsm/readme/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/docs/fsm/readme/</guid>
      <description>&lt;div id=&#34;preamble&#34;&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg&#34; alt=&#34;Apache License 2.0&#34;/&gt;&lt;/span&gt;&#xA;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/net.tangly/fsm&#34; alt=&#34;Maven Central&#34;/&gt;&lt;/span&gt;&#xA;&lt;a href=&#34;https://javadoc.io/doc/net.tangly/fsm&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/net.tangly/fsm/javadoc.svg&#34; alt=&#34;javadoc&#34;/&gt;&lt;/span&gt;&lt;/a&gt;&#xA;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://github.com/tangly-team/tangly-os/actions/workflows/workflows.yml/badge.svg&#34; alt=&#34;build&#34;/&gt;&lt;/span&gt;&#xA;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/tangly-team/tangly-os&#34; alt=&#34;issues&#34;/&gt;&lt;/span&gt;&#xA;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/tangly-team/tangly-os&#34; alt=&#34;discussions&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_purpose&#34;&gt;Purpose&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The &lt;strong&gt;tangly fsm&lt;/strong&gt; is a finite state machine library.&#xA;You can use it in productive projects and academic assignments.&#xA;The component is using records and requires &lt;strong&gt;Java 21 LTS or higher&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The library provides&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;ulist&#34;&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Definition of hierarchical state machine descriptions.&#xA;The machine states and transitions are generic classes.&#xA;You provide an enumeration for the set of states, and an enumeration for the set of events triggering the machine.&#xA;The builder pattern is used to create complex state machine definition declaratively,&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Builder approach to construct finite state machine declaration being either classical state machines or hierarchical state machines&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Lambda expressions based on standard API functional interfaces are used for guards and actions&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Guard are bi-predicate lambda expressions with the context and event as parameters&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Actions are bi-function lambda expressions with the context and event as parameters&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A runtime engine processing events on a finite state machine description.&#xA;Multiple instances of the same description can be instantiated.&#xA;The class owning the state machine is passed as context to all guards and actions,&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Support classes to implement listeners and logging are provided.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Documentation helper can generate a graphical representation of a state machine using the graph dot language.&#xA;Various output formats are supported&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Table representation&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Dot graph representation&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;PlantUML UML finite hierarchical state machine representation&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Release Notes</title>
      <link>https://blog.tangly.net/docs/fsm/releasesnotes/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/docs/fsm/releasesnotes/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_fsm_library_change_logs&#34;&gt;FSM Library Change Logs&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;This document provides a high-level view of the changes introduced in the FSM library by release.&#xA;For a detailed view of what has changed, refer to the &lt;a href=&#34;https://bitbucket.org/tangly-team/tangly-os&#34;&gt;repository&lt;/a&gt; git commits.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;sect2&#34;&gt;&#xA;&lt;h3 id=&#34;_0_2_8_2024_09_30&#34;&gt;0.2.8 (2024-09-30)&lt;/h3&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;sect2&#34;&gt;&#xA;&lt;h3 id=&#34;_0_2_7_2024_05_31&#34;&gt;0.2.7 (2024-05-31)&lt;/h3&gt;&#xA;&lt;div class=&#34;ulist&#34;&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Update of library dependencies, update to JDK-21, and modern Gradle approach to build solutions.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Added statechart diagram support for &lt;em&gt;smcat&lt;/em&gt; and &lt;em&gt;mermaid&lt;/em&gt; formats.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Actor library now uses the standard API FLow implementation and virtual thread executor.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>User Guide Finite State Machine</title>
      <link>https://blog.tangly.net/docs/fsm/userguidefsm/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/docs/fsm/userguidefsm/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_features&#34;&gt;Features&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;https://en.wikipedia.org/wiki/Finite-state_machine&#34;&gt;FSM&lt;/a&gt; library aims to provide the following features:&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;ulist&#34;&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Easy to use flat state machine for simple use cases.&#xA;This type of FSM is taught in bachelor engineering courses.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Hierarchical state machine structure to ease complex state configuration.&#xA;The hierarchical type of FSM is part of the UML notation.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Usage of events, transitions, guards and actions.&#xA;Transition actions, state entry actions, and state exit actions are supported.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Builder pattern for easy creation of a complete state machine declaration using a fluent approach,&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Recipes for usual use cases,&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;State machine event listeners,&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Diagrams generators for &lt;a href=&#34;https://graphviz.org/&#34;&gt;Graphviz&lt;/a&gt;, &lt;a href=&#34;https://plantuml.com/&#34;&gt;plantUML&lt;/a&gt; and &lt;a href=&#34;https://mermaid.js.org&#34;&gt;Mermaid&lt;/a&gt; diagrams are living documentation.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>User Guide Actors</title>
      <link>https://blog.tangly.net/docs/fsm/userguideactor/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/docs/fsm/userguideactor/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_user_guide_actors&#34;&gt;User Guide Actors&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;sect2&#34;&gt;&#xA;&lt;h3 id=&#34;_get_starting&#34;&gt;Get Starting&lt;/h3&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;A finite state machine actor class is provided to easily create an active class whose behavior is defined through a finite state machine&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;listingblock&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;FsmActor&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;O&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;FsmActor&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;O&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;S&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;E&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;gt;,&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;S&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Enum&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;S&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;gt;,&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;E&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Enum&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;E&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Actor&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;Event&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;?&amp;gt;,&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Void&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;&#xA;    &lt;span style=&#34;color: #cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Logger&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;logger&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;LoggerFactory&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;getLogger&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;();&lt;/span&gt;&#xA;    &lt;span style=&#34;color: #cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;StateMachine&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;O&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;S&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;E&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;fsm&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;;&lt;/span&gt;&#xA;&#xA;    &lt;span style=&#34;color: #cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;FsmActor&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;@Nonnull&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;FsmBuilder&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;O&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;S&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;E&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;builder&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;throws&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;SuspendExecution&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;&#xA;         &lt;span style=&#34;color: #cf222e&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;MailboxConfig&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;());&lt;/span&gt;&#xA;         &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;fsm&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;builder&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;machine&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;O&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;);&lt;/span&gt;&#xA;         &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;spawn&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;();&lt;/span&gt;&#xA;         &lt;span style=&#34;color: #cf222e&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;&#xA;             &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;register&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;);&lt;/span&gt;&#xA;         &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;SuspendExecution&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;&#xA;             &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;logger&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;error&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;Could not register actor {} in name registry due {}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;);&lt;/span&gt;&#xA;         &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;&#xA;   &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;&#xA;&#xA;    &lt;span style=&#34;color: #cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;process&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;@Nonnull&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Event&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;E&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;throws&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;SuspendExecution&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;&#xA;        &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;send&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;);&lt;/span&gt;&#xA;    &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;&#xA;&#xA;    &lt;span style=&#34;color: #cf222e&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Void&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;doRun&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;throws&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;InterruptedException&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;SuspendExecution&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;&#xA;        &lt;span style=&#34;color: #cf222e&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;(;&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;&#xA;            &lt;span style=&#34;color: #953800&#34;&gt;Event&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;?&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;event&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;receive&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;();&lt;/span&gt;&#xA;            &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;fsm&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;fire&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;Event&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;E&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;gt;)&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;);&lt;/span&gt;&#xA;            &lt;span style=&#34;color: #cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;fsm&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;isFinal&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;&#xA;                &lt;span style=&#34;color: #cf222e&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;;&lt;/span&gt;&#xA;            &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;&#xA;        &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;&#xA;    &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;&#xA;&lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Design Considerations</title>
      <link>https://blog.tangly.net/docs/fsm/design/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/docs/fsm/design/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_design_finite_state_machine&#34;&gt;Design Finite State Machine&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;sect2&#34;&gt;&#xA;&lt;h3 id=&#34;_definitions&#34;&gt;Definitions&lt;/h3&gt;&#xA;&lt;div class=&#34;quoteblock&#34;&gt;&#xA;&lt;blockquote&gt;&#xA;A person who never made a mistake never tried anything new.&#xA;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;attribution&#34;&gt;&#xA;— Albert Einstein&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;What is a finite state machine?&#xA;&lt;em&gt;A Finite State Machine&lt;/em&gt; or &lt;em&gt;FSM&lt;/em&gt; is an abstract model of deterministic computation, which can be in only one finite state at a specific moment.&#xA;Finite State Machines are used to model problems in different domains such as AI, games, or application flows.&#xA;It describes how a program should behave by specifying states and routes between them.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
