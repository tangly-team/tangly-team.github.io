<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tangly Components – Documentation</title>
    <link>https://blog.tangly.net/docs/</link>
    <description>Recent content in Documentation on tangly Components</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 01 Jan 2022 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://blog.tangly.net/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: ERPUI-001: AsciiDoc for Text Fields</title>
      <link>https://blog.tangly.net/docs/domains/architecture/adr/erpui-001-asciidoc-for-all-texts/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/architecture/adr/erpui-001-asciidoc-for-all-texts/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_erpui_001_asciidoc_for_text_fields&#34;&gt;ERPUI-001 Asciidoc for Text Fields&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2021-06-01&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; is a well-established approach to write rich text documentation or comments.
The casual user can learn and use the notation without excessive effort.
The legibility and professional appearance of asciidoc texts are striking higher than plain text.
Asciidoc is an open standard and used in various environments and tools
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All texts and comments in the ERP components shall use &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; notation to improve legibility.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Alternatives would be proprietary formats such as Microsoft Word or similar notations such as &lt;a href=&#34;https://www.markdownguide.org/&#34;&gt;Markdown&lt;/a&gt;.
Our open-source approach to product development rejects any proprietary formats.
Asciidoc is a very powerful and successful format
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_2&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_2&#34; title=&#34;View footnote.&#34;&gt;2&lt;/a&gt;]&lt;/sup&gt;.
The associated complexity for the users is probably an overkill for casual users of our product.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Text and comments in our system should have a limited length complexity.
Activity description can be lengthy and use more complex syntax.
Asciidoc is an optimal balance between expression power and ease of use.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Asciidoc is backward compatible with text fields.
No migration of existing records is needed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The user interface components shall be extended to support a &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; visualization and editing component.
Vaadin currently does not provide native support for &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; or &lt;a href=&#34;https://www.markdownguide.org/&#34;&gt;Markdown&lt;/a&gt;.
The tangly-os components will be extended to provide such a component until Vaadin supports in the future such an approach.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. The alternative would be to use &lt;a href=&#34;https://www.markdownguide.org/&#34;&gt;Markdown&lt;/a&gt; notation. The expression power of &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; is higher and better standardized.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_2&#34;&gt;
&lt;a href=&#34;#_footnoteref_2&#34;&gt;2&lt;/a&gt;. The team acknowledged we have a preference for &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt;. We use the notation for all our architecture documents based on the &lt;a href=&#34;https://arc42.org/&#34;&gt;arc42&lt;/a&gt; template.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: ERPUI-001: AsciiDoc for Text Fields</title>
      <link>https://blog.tangly.net/docs/domains/shared/_design/adr/erpui-001-asciidoc-for-all-texts/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/shared/_design/adr/erpui-001-asciidoc-for-all-texts/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_erpui_001_asciidoc_for_text_fields&#34;&gt;ERPUI-001 Asciidoc for Text Fields&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2021-06-01&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; is a well-established approach to write rich text documentation or comments.
The casual user can learn and use the notation without excessive effort.
The legibility and professional appearance of asciidoc texts are striking higher than plain text.
Asciidoc is an open standard and used in various environments and tools
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All texts and comments in the ERP components shall use &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; notation to improve legibility.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Alternatives would be proprietary formats such as Microsoft Word or similar notations such as &lt;a href=&#34;https://www.markdownguide.org/&#34;&gt;Markdown&lt;/a&gt;.
Our open-source approach to product development rejects any proprietary formats.
Asciidoc is a very powerful and successful format
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_2&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_2&#34; title=&#34;View footnote.&#34;&gt;2&lt;/a&gt;]&lt;/sup&gt;.
The associated complexity for the users is probably an overkill for casual users of our product.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Text and comments in our system should have a limited length complexity.
Activity description can be lengthy and use more complex syntax.
Asciidoc is an optimal balance between expression power and ease of use.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Asciidoc is backward compatible with text fields.
No migration of existing records is needed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The user interface components shall be extended to support a &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; visualization and editing component.
Vaadin currently does not provide native support for &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; or &lt;a href=&#34;https://www.markdownguide.org/&#34;&gt;Markdown&lt;/a&gt;.
The tangly-os components will be extended to provide such a component until Vaadin supports in the future such an approach.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. The alternative would be to use &lt;a href=&#34;https://www.markdownguide.org/&#34;&gt;Markdown&lt;/a&gt; notation. The expression power of &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; is higher and better standardized.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_2&#34;&gt;
&lt;a href=&#34;#_footnoteref_2&#34;&gt;2&lt;/a&gt;. The team acknowledged we have a preference for &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt;. We use the notation for all our architecture documents based on the &lt;a href=&#34;https://arc42.org/&#34;&gt;arc42&lt;/a&gt; template.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: FSM 001: Move Abstractions to JDK Classes</title>
      <link>https://blog.tangly.net/docs/domains/architecture/adr/fsm-001-move-abstractions-to-jdk-classes/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/architecture/adr/fsm-001-move-abstractions-to-jdk-classes/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_fsm_001_replace_guard_and_action_classes_with_jdk_bipredicate_and_bifunction_classes&#34;&gt;FSM-001 Replace Guard and Action classes with JDK BiPredicate and BiFunction Classes&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2017-06-01&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We need a legible data model for finite state machine definitions.
New users should easily understand the finite state machine abstractions and map them to their domain.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We use standard classes of the JDK to minimize contextual complexity when learning and using the FSM library.
We will evaluate if the loss of domain names for classes has a negative impact on the legibility of the library.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We have a cleaner and simpler interface and have increased dependency on regular JDK classes.
The generic names of the guard predicate and functional action should not diminish the legibility of the source code.
The role of the type is defined through the name of the parameter in the method signature.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Care was taken to use explicit parameter names and document them accordingly in JavaDoc.
Modern IDEs such as IntelliJ IDEA display formatted JavaDoc as hints to the developer.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: FSM 001: Move Abstractions to JDK Classes</title>
      <link>https://blog.tangly.net/docs/domains/shared/_design/adr/fsm-001-move-abstractions-to-jdk-classes/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/shared/_design/adr/fsm-001-move-abstractions-to-jdk-classes/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_fsm_001_replace_guard_and_action_classes_with_jdk_bipredicate_and_bifunction_classes&#34;&gt;FSM-001 Replace Guard and Action classes with JDK BiPredicate and BiFunction Classes&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2017-06-01&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We need a legible data model for finite state machine definitions.
New users should easily understand the finite state machine abstractions and map them to their domain.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We use standard classes of the JDK to minimize contextual complexity when learning and using the FSM library.
We will evaluate if the loss of domain names for classes has a negative impact on the legibility of the library.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We have a cleaner and simpler interface and have increased dependency on regular JDK classes.
The generic names of the guard predicate and functional action should not diminish the legibility of the source code.
The role of the type is defined through the name of the parameter in the method signature.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Care was taken to use explicit parameter names and document them accordingly in JavaDoc.
Modern IDEs such as IntelliJ IDEA display formatted JavaDoc as hints to the developer.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 001: System Guava Removal</title>
      <link>https://blog.tangly.net/docs/domains/architecture/adr/os-001-system-guava-removal/</link>
      <pubDate>Tue, 20 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/architecture/adr/os-001-system-guava-removal/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_001_remove_usage_of_google_guava_library&#34;&gt;OS-001 Remove usage of Google Guava Library&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2018-02-20&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-001-head.jpg&#34; alt=&#34;OS 001 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Guava is an historical effort to provide much-needed functionalities to the Java community.
The Java ecosystem evolves quite slowly at the beginning of the millennium.
Later stewardship clearly improved with a six-month release schedule approach.
Preview and incubator initiatives allowed timely evaluation of new features and idioms in the Java language and ecosystem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;JDK versions from release 8 often provide better replacement methods for a lot of Guava functions.
New JDKs are released every six months and provide regular improvements to the API.
These improvements make Guava functions more and more obsolete.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/google/guava&#34;&gt;Guava&lt;/a&gt; is an external library of high quality but still an additional dependency in the application.
We always follow the rule to use language and standard library constructs over using external libraries.
Guava tries to support older JDKs and, therefore, does not use more modern approaches defined in new API versions.
We consider Guava has a legacy library.
We are dedicated to writing modern Java using the latest official releases of the language and runtime environment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The advantage is better integration, always synchronized with a new release of the JDK and no incompatibilities.
The drawback is sometimes a slightly more cumbersome syntax or solution.
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All Guava usages shall be replaced by JDK standard functions.
The main advantages are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Current JDK versions provide their own implementation, e.g., in the Objects class.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Guava dependency is removed from our source code and compiled artifacts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Guava is not optimized for idioms used in current JDK such as streams and extensive use of lambdas.
Guava needs years to support new concepts such as algebraic data types.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock caution&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-caution&#34; title=&#34;Caution&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This decision is against good practices documented in the first decade of this millennium.
The Guava library did not evolve as rapidly as the new Java versions released in the second and third decades.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We strongly advocate timely evolution.
Try to avoid becoming laggards in your technology stack.
As a rule, use the current Java release, or as a minimal version, the latest long-term supported version of Java.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Some operations are more complicated to implement because a solution is already provided in Guava.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We have the huge advantage of being able to use the current approaches provided in JDK and associated standard API.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Code uses the current constructs provided through last released JDK.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. If a specific function is only available in Guava and your project strongly relies on it, feel free to continue using Guava
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 001: System Guava Removal</title>
      <link>https://blog.tangly.net/docs/domains/shared/_design/adr/os-001-system-guava-removal/</link>
      <pubDate>Tue, 20 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/shared/_design/adr/os-001-system-guava-removal/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_001_remove_usage_of_google_guava_library&#34;&gt;OS-001 Remove usage of Google Guava Library&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2018-02-20&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-001-head.jpg&#34; alt=&#34;OS 001 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Guava is an historical effort to provide much-needed functionalities to the Java community.
The Java ecosystem evolves quite slowly at the beginning of the millennium.
Later stewardship clearly improved with a six-month release schedule approach.
Preview and incubator initiatives allowed timely evaluation of new features and idioms in the Java language and ecosystem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;JDK versions from release 8 often provide better replacement methods for a lot of Guava functions.
New JDKs are released every six months and provide regular improvements to the API.
These improvements make Guava functions more and more obsolete.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/google/guava&#34;&gt;Guava&lt;/a&gt; is an external library of high quality but still an additional dependency in the application.
We always follow the rule to use language and standard library constructs over using external libraries.
Guava tries to support older JDKs and, therefore, does not use more modern approaches defined in new API versions.
We consider Guava has a legacy library.
We are dedicated to writing modern Java using the latest official releases of the language and runtime environment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The advantage is better integration, always synchronized with a new release of the JDK and no incompatibilities.
The drawback is sometimes a slightly more cumbersome syntax or solution.
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All Guava usages shall be replaced by JDK standard functions.
The main advantages are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Current JDK versions provide their own implementation, e.g., in the Objects class.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Guava dependency is removed from our source code and compiled artifacts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Guava is not optimized for idioms used in current JDK such as streams and extensive use of lambdas.
Guava needs years to support new concepts such as algebraic data types.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock caution&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-caution&#34; title=&#34;Caution&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This decision is against good practices documented in the first decade of this millennium.
The Guava library did not evolve as rapidly as the new Java versions released in the second and third decades.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We strongly advocate timely evolution.
Try to avoid becoming laggards in your technology stack.
As a rule, use the current Java release, or as a minimal version, the latest long-term supported version of Java.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Some operations are more complicated to implement because a solution is already provided in Guava.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We have the huge advantage of being able to use the current approaches provided in JDK and associated standard API.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Code uses the current constructs provided through last released JDK.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. If a specific function is only available in Guava and your project strongly relies on it, feel free to continue using Guava
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: LED 001</title>
      <link>https://blog.tangly.net/docs/domains/ledger/adr/led-001-ledger-tag-for-vat-costs/</link>
      <pubDate>Fri, 01 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/ledger/adr/led-001-ledger-tag-for-vat-costs/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_led_001_use_tag_for_vat_costs_computation&#34;&gt;LED-001 Use Tag for VAT costs computation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2017-12-01&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We need to record the VAT components of transactions in our ledger system.
The VAT value can be different for each position in a transaction therefore the VAT information shall be defined on each part of a transaction.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The value of the VAT is computed based on the VAT percentage.
The percentage can change over time due to regulatory changes.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We will support tags at the transaction entry.
The tags are a triplet &lt;strong&gt;[namespace:]name[=value]&lt;/strong&gt; format.
We recommend the namespace &amp;#34;fin&amp;#34;, the name &amp;#34;vat&amp;#34;, and a text identifier has value.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The current values are:
1. F1 for VAT invoiced at 8% and paid to the state at 7.1%
1. F2 for VAT invoiced at 7.7% and paid to the state at 6.9%&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ontology based on tags are not validated through a type system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Checks have to be implemented to guaranty adequate level of tracking.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 002: Unit Test Conventions</title>
      <link>https://blog.tangly.net/docs/domains/architecture/adr/os-002-unit-test-conventions/</link>
      <pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/architecture/adr/os-002-unit-test-conventions/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_002_define_unit_test_conventions&#34;&gt;OS-002 Define Unit Test Conventions&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2020-06-15&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-002-head.jpg&#34; alt=&#34;OS 002 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Some libraries need to create files on a file system.
For example, you want to generate human-readable paper invoices.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We recommend the following conventions when writing unit tests which need to create files.
Use Google Java in memory file system &lt;a href=&#34;https://github.com/google/jimfs&#34;&gt;Jimfs&lt;/a&gt;.
Additional file systems can only be used in Java if all operations are performed through Path objects.
Path objects have a reference to the file system; File objects always referenced the default file system.
When you are writing to the default file system use the root directory &lt;code&gt;/tmp/&lt;/code&gt; available in all Unix like operating systems.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock caution&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-caution&#34; title=&#34;Caution&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Avoid writing files to a local file system.
This approach is slow, cumbersome and error-prone.
Use in-memory file systems.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We have a dependency on an open source product currently managed by Google.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use of &lt;a href=&#34;https://github.com/google/jimfs&#34;&gt;Jimfs&lt;/a&gt; requires use of Path instances.
We shall remove all references to File instances.
File instances do not support alternative file systems.
Therefore, we shall use libraries providing a workaround File instances either by using Path instances or reader and writer to access files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Operations on the physical file system have the risk that rights problems could rise in some continuous integration environment.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 002: Unit Test Conventions</title>
      <link>https://blog.tangly.net/docs/domains/shared/_design/adr/os-002-unit-test-conventions/</link>
      <pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/shared/_design/adr/os-002-unit-test-conventions/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_002_define_unit_test_conventions&#34;&gt;OS-002 Define Unit Test Conventions&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2020-06-15&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-002-head.jpg&#34; alt=&#34;OS 002 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Some libraries need to create files on a file system.
For example, you want to generate human-readable paper invoices.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We recommend the following conventions when writing unit tests which need to create files.
Use Google Java in memory file system &lt;a href=&#34;https://github.com/google/jimfs&#34;&gt;Jimfs&lt;/a&gt;.
Additional file systems can only be used in Java if all operations are performed through Path objects.
Path objects have a reference to the file system; File objects always referenced the default file system.
When you are writing to the default file system use the root directory &lt;code&gt;/tmp/&lt;/code&gt; available in all Unix like operating systems.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock caution&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-caution&#34; title=&#34;Caution&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Avoid writing files to a local file system.
This approach is slow, cumbersome and error-prone.
Use in-memory file systems.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We have a dependency on an open source product currently managed by Google.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use of &lt;a href=&#34;https://github.com/google/jimfs&#34;&gt;Jimfs&lt;/a&gt; requires use of Path instances.
We shall remove all references to File instances.
File instances do not support alternative file systems.
Therefore, we shall use libraries providing a workaround File instances either by using Path instances or reader and writer to access files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Operations on the physical file system have the risk that rights problems could rise in some continuous integration environment.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: FSM-002: Publish Maven Central Artifacts</title>
      <link>https://blog.tangly.net/docs/domains/architecture/adr/fsm-002-publish-maven-central-artifact/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/architecture/adr/fsm-002-publish-maven-central-artifact/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_fsm_002_publish_artifacts_on_public_java_components_repository&#34;&gt;FSM-002 Publish Artifacts on Public Java Components Repository&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2020-01-01&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Retired&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Superseded by: &lt;a href=&#34;../os-005-publish-maven-central-artifact/&#34;&gt;OS-0005&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library is mature enough to be used in commercial and academic projects.
The library was used in internal projects and refined to fulfill these requirements.
More customers will validate the usefulness of the library and identify extensions for further releases.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library shall be published on maven central and be accessible to a wide range of developers and organizations.
A website shall be set up to provide adequate documentation for users.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;https://blog.tangly.net/docs/fsm/&#34;&gt;FSM website&lt;/a&gt; will use a static web approach to minimize costs and provide good legibility.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library will be published on Maven Central to maximize potential usage.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The ADR FSM-001 supports this evolution.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We have to establish a publishing process at the company level to deploy signed artifacts to maven central repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We have to establish a public website to host the documentation of public published libraries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We have to support semantic versioning of all future published releases.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: FSM-002: Publish Maven Central Artifacts</title>
      <link>https://blog.tangly.net/docs/domains/shared/_design/adr/fsm-002-publish-maven-central-artifact/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/shared/_design/adr/fsm-002-publish-maven-central-artifact/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_fsm_002_publish_artifacts_on_public_java_components_repository&#34;&gt;FSM-002 Publish Artifacts on Public Java Components Repository&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2020-01-01&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Retired&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Superseded by: &lt;a href=&#34;../os-005-publish-maven-central-artifact/&#34;&gt;OS-0005&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library is mature enough to be used in commercial and academic projects.
The library was used in internal projects and refined to fulfill these requirements.
More customers will validate the usefulness of the library and identify extensions for further releases.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library shall be published on maven central and be accessible to a wide range of developers and organizations.
A website shall be set up to provide adequate documentation for users.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;https://blog.tangly.net/docs/fsm/&#34;&gt;FSM website&lt;/a&gt; will use a static web approach to minimize costs and provide good legibility.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library will be published on Maven Central to maximize potential usage.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The ADR FSM-001 supports this evolution.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We have to establish a publishing process at the company level to deploy signed artifacts to maven central repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We have to establish a public website to host the documentation of public published libraries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We have to support semantic versioning of all future published releases.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: PRJ 001</title>
      <link>https://blog.tangly.net/docs/domains/products/adr/prj-001-project-tag-for-project-costs/</link>
      <pubDate>Fri, 01 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/products/adr/prj-001-project-tag-for-project-costs/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_prj_001_use_tag_for_product_costs_computation&#34;&gt;PRJ-001 Use Tag for product costs computation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2017-12-01&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We would like to compute earnings and costs on per product base.
Each transaction entry should support tags to identify the associated projects or departments.
The tag approach supports multiple consolidation of an orthogonal cost structure.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We will support tags at the transaction entry.
The tags are a triplet &lt;strong&gt;[namespace:]name[=value]&lt;/strong&gt; format.
We recommend the namespace &amp;#34;fin&amp;#34;, the name &amp;#34;segment&amp;#34;, and a text identifier has value.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ontology based on tags are not hard defined through a type system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Checks have to be implemented to guaranty adequate level of tracking.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 003: Use Modern Java Constructs</title>
      <link>https://blog.tangly.net/docs/domains/architecture/adr/os-003-use-modern-java-constructs/</link>
      <pubDate>Tue, 20 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/architecture/adr/os-003-use-modern-java-constructs/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_003_remove_usage_of_google_guava_library&#34;&gt;OS-003 Remove usage of Google Guava Library&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2020-01-01&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-003-head.jpg&#34; alt=&#34;OS 003 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;JDK is released every six months to all Java developers.
The latest approach is to release a long-term supported version every two years.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Better approaches support clean code, less verbose source code and reduce programming  &lt;a href=&#34;#modern-java-development&#34;&gt;[5]&lt;/a&gt; &lt;a href=&#34;#immutability-in-java&#34;&gt;[2]&lt;/a&gt;.
These constructs shall be used in our modules as soon as they are released to the developers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The advantage is better integration, always synchronized with the current release of the JDK and no incompatibilities.
The drawback is that our clients have to use the current JDK released version.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The major advantage is that you are using the latest version you do not need to pay license fees for each server you have running.
Older Oracle versions always require a support contract and associated fees.
The other approach is to use an alternate distribution such as &lt;a href=&#34;https://openjdk.java.net/&#34;&gt;OpenJDK&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We use the current released JDK and all constructs provided in this JDK &lt;a href=&#34;#modernize-java-landscape&#34;&gt;[1]&lt;/a&gt;.
We use preview features and incubating functionality present in this JDK.
The main advantages are&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Current JDK versions provide efficient and elegant implementation &lt;a href=&#34;#jdk-17&#34;&gt;[3]&lt;/a&gt; &lt;a href=&#34;#jdk-16&#34;&gt;[4]&lt;/a&gt;.
See, for example, the record construct provided since JDK 14.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The source code is legible and has fewer errors.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Our developers are up-to-date with Java evolution and enjoy writing modern code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;JDK 18 and 19 give improvements in pattern matching and thread programming.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Clients are forced to use the current JDK version.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tooling is more brittle because a lot of tool maintainers are late to adapt the actual version of JDK.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_examples_of_new_features&#34;&gt;Examples of New Features&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;em&gt;instanceof&lt;/em&gt; operator supports in conditional statement deconstruction.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;em&gt;record&lt;/em&gt; construct simplifies data objects and encourages immutability.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;em&gt;UncheckedIOException&lt;/em&gt; encourages the use of non-checked exceptions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;modernize-java-landscape&#34;&gt;&lt;/a&gt;[1] &lt;a href=&#34;{ref-tangly-blog-url}/2022/modernize-your-java-landscape/&#34;&gt;Modernize your Java Landscape&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;immutability-in-java&#34;&gt;&lt;/a&gt;[2] &lt;a href=&#34;{ref-tangly-blog-url}/2022/immutability-in-java/&#34;&gt;Immutability in Java&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;jdk-17&#34;&gt;&lt;/a&gt;[3] &lt;a href=&#34;{ref-tangly-blog-url}/2021/jdk-17/&#34;&gt;JDK 17&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;jdk-16&#34;&gt;&lt;/a&gt;[4] &lt;a href=&#34;{ref-tangly-blog-url}/2021/jdk-16/&#34;&gt;JDK 16&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;modern-java-development&#34;&gt;&lt;/a&gt;[5] &lt;a href=&#34;{ref-tangly-blog-url}/2021/modern-java-development/&#34;&gt;Modern Java Development&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 003: Use Modern Java Constructs</title>
      <link>https://blog.tangly.net/docs/domains/shared/_design/adr/os-003-use-modern-java-constructs/</link>
      <pubDate>Tue, 20 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/shared/_design/adr/os-003-use-modern-java-constructs/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_003_remove_usage_of_google_guava_library&#34;&gt;OS-003 Remove usage of Google Guava Library&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2020-01-01&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-003-head.jpg&#34; alt=&#34;OS 003 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;JDK is released every six months to all Java developers.
The latest approach is to release a long-term supported version every two years.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Better approaches support clean code, less verbose source code and reduce programming  &lt;a href=&#34;#modern-java-development&#34;&gt;[5]&lt;/a&gt; &lt;a href=&#34;#immutability-in-java&#34;&gt;[2]&lt;/a&gt;.
These constructs shall be used in our modules as soon as they are released to the developers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The advantage is better integration, always synchronized with the current release of the JDK and no incompatibilities.
The drawback is that our clients have to use the current JDK released version.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The major advantage is that you are using the latest version you do not need to pay license fees for each server you have running.
Older Oracle versions always require a support contract and associated fees.
The other approach is to use an alternate distribution such as &lt;a href=&#34;https://openjdk.java.net/&#34;&gt;OpenJDK&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We use the current released JDK and all constructs provided in this JDK &lt;a href=&#34;#modernize-java-landscape&#34;&gt;[1]&lt;/a&gt;.
We use preview features and incubating functionality present in this JDK.
The main advantages are&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Current JDK versions provide efficient and elegant implementation &lt;a href=&#34;#jdk-17&#34;&gt;[3]&lt;/a&gt; &lt;a href=&#34;#jdk-16&#34;&gt;[4]&lt;/a&gt;.
See, for example, the record construct provided since JDK 14.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The source code is legible and has fewer errors.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Our developers are up-to-date with Java evolution and enjoy writing modern code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;JDK 18 and 19 give improvements in pattern matching and thread programming.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Clients are forced to use the current JDK version.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tooling is more brittle because a lot of tool maintainers are late to adapt the actual version of JDK.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_examples_of_new_features&#34;&gt;Examples of New Features&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;em&gt;instanceof&lt;/em&gt; operator supports in conditional statement deconstruction.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;em&gt;record&lt;/em&gt; construct simplifies data objects and encourages immutability.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;em&gt;UncheckedIOException&lt;/em&gt; encourages the use of non-checked exceptions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;modernize-java-landscape&#34;&gt;&lt;/a&gt;[1] &lt;a href=&#34;{ref-tangly-blog-url}/2022/modernize-your-java-landscape/&#34;&gt;Modernize your Java Landscape&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;immutability-in-java&#34;&gt;&lt;/a&gt;[2] &lt;a href=&#34;{ref-tangly-blog-url}/2022/immutability-in-java/&#34;&gt;Immutability in Java&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;jdk-17&#34;&gt;&lt;/a&gt;[3] &lt;a href=&#34;{ref-tangly-blog-url}/2021/jdk-17/&#34;&gt;JDK 17&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;jdk-16&#34;&gt;&lt;/a&gt;[4] &lt;a href=&#34;{ref-tangly-blog-url}/2021/jdk-16/&#34;&gt;JDK 16&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;modern-java-development&#34;&gt;&lt;/a&gt;[5] &lt;a href=&#34;{ref-tangly-blog-url}/2021/modern-java-development/&#34;&gt;Modern Java Development&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 004: Publish Technical Documentation Through Static Website</title>
      <link>https://blog.tangly.net/docs/domains/architecture/adr/os-004-publish-technical-documentation-through-static-website/</link>
      <pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/architecture/adr/os-004-publish-technical-documentation-through-static-website/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_004_publish_technical_documentation_through_static_website&#34;&gt;OS-004 Publish Technical Documentation Through Static Website&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2020-01-01&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-004-head.png&#34; alt=&#34;OS 004 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Legible, well-structured and up-to-date technical documentation of released open source components is a service to all our users.
Due to the small size of our team, we want a straight forward tool chain to generate the website.
In the future, we could move our product to another hosting platform.
The solution should be built on a standard to minimize porting overhead.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I am personally a fan of &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; and would promote a solution supporting this markup language.
I will strongly fight against proprietary solutions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;All our technical documentation and blogs will be written in &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The website is created using the &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; toolchain.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The theme of hugo will be &lt;a href=&#34;https://www.docsy.dev/&#34;&gt;Docsy&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Committers are forced to document in &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tooling is slightly more brittle because &lt;a href=&#34;https://asciidoctor.org/&#34;&gt;Asciidoctor&lt;/a&gt; integration in &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; is work in progress.
&lt;a href=&#34;https://asciidoctor.org/&#34;&gt;Asciidoctor&lt;/a&gt; is also undergoing changes such as the native support of rouge syntax highlighter.
The improvements in both tools were impressive the last year, but we have to regularly update our toolchain and update all &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; documents.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_learnings&#34;&gt;Learnings&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;(ref-hugo) themes styling for &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; is sketchy.
The visual quality is currently hindered due to faulty support of the standard or custom AsciiDoc stylesheet.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; supports native rouge code highlighting module.
All source code fragments are nicely displayed without special support from &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We documented our experience in various blogs &lt;a href=&#34;#creating-technical-website&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;#support-comments&#34;&gt;[2]&lt;/a&gt;&amp;gt;.
We use currently the Google sponsored theme &lt;a href=&#34;https://www.docsy.dev/&#34;&gt;Docsy&lt;/a&gt; for our static website.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;creating-technical-website&#34;&gt;&lt;/a&gt;[1] &lt;a href=&#34;{ref-tangly-blog-url}/2020/creating-a-technical-website-with-hugo-and-asciidoc/&#34;&gt;Creating a Technical Website with Hugo and AsciiDoc&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;support-comments&#34;&gt;&lt;/a&gt;[2] &lt;a href=&#34;{ref-tangly-blog-url}/2020/support-comments-for-static-hugo-website/&#34;&gt;Support Comments for Static Hugo Website&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 004: Publish Technical Documentation Through Static Website</title>
      <link>https://blog.tangly.net/docs/domains/shared/_design/adr/os-004-publish-technical-documentation-through-static-website/</link>
      <pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/shared/_design/adr/os-004-publish-technical-documentation-through-static-website/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_004_publish_technical_documentation_through_static_website&#34;&gt;OS-004 Publish Technical Documentation Through Static Website&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2020-01-01&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-004-head.png&#34; alt=&#34;OS 004 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Legible, well-structured and up-to-date technical documentation of released open source components is a service to all our users.
Due to the small size of our team, we want a straight forward tool chain to generate the website.
In the future, we could move our product to another hosting platform.
The solution should be built on a standard to minimize porting overhead.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I am personally a fan of &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; and would promote a solution supporting this markup language.
I will strongly fight against proprietary solutions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;All our technical documentation and blogs will be written in &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The website is created using the &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; toolchain.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The theme of hugo will be &lt;a href=&#34;https://www.docsy.dev/&#34;&gt;Docsy&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Committers are forced to document in &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tooling is slightly more brittle because &lt;a href=&#34;https://asciidoctor.org/&#34;&gt;Asciidoctor&lt;/a&gt; integration in &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; is work in progress.
&lt;a href=&#34;https://asciidoctor.org/&#34;&gt;Asciidoctor&lt;/a&gt; is also undergoing changes such as the native support of rouge syntax highlighter.
The improvements in both tools were impressive the last year, but we have to regularly update our toolchain and update all &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; documents.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_learnings&#34;&gt;Learnings&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;(ref-hugo) themes styling for &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; is sketchy.
The visual quality is currently hindered due to faulty support of the standard or custom AsciiDoc stylesheet.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; supports native rouge code highlighting module.
All source code fragments are nicely displayed without special support from &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We documented our experience in various blogs &lt;a href=&#34;#creating-technical-website&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;#support-comments&#34;&gt;[2]&lt;/a&gt;&amp;gt;.
We use currently the Google sponsored theme &lt;a href=&#34;https://www.docsy.dev/&#34;&gt;Docsy&lt;/a&gt; for our static website.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;creating-technical-website&#34;&gt;&lt;/a&gt;[1] &lt;a href=&#34;{ref-tangly-blog-url}/2020/creating-a-technical-website-with-hugo-and-asciidoc/&#34;&gt;Creating a Technical Website with Hugo and AsciiDoc&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;support-comments&#34;&gt;&lt;/a&gt;[2] &lt;a href=&#34;{ref-tangly-blog-url}/2020/support-comments-for-static-hugo-website/&#34;&gt;Support Comments for Static Hugo Website&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 005: Publish Maven Central Artifacts</title>
      <link>https://blog.tangly.net/docs/domains/architecture/adr/os-005-publish-maven-central-artifact/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/architecture/adr/os-005-publish-maven-central-artifact/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_005_publish_artifacts_on_public_java_components_repository&#34;&gt;OS-005 Publish Artifacts on Public Java Components Repository&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2019-05-01&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Supersede: &lt;a href=&#34;../fsm-002-publish-maven-central-artifact&#34;&gt;FSM-0002&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-005-head.png&#34; alt=&#34;OS 005 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;https://www.tangly.net/&#34;&gt;tangly&lt;/a&gt; open source libraries are mature enough to be used in public commercial and academic projects.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The libraries were used in internal projects and  refined to  fulfill these requirements.
More customers will validate the usefulness of the library and identify extensions for further releases.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We want to provide a standard and well-known approach for our customers.
They shall have access to our libraries through official and well-documented channels.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The libraries shall be published as artifacts on maven central and be accessible to a wide range of developers and organizations.
A website shall be set up to provide adequate documentation for users.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;https://blog.tangly.net&#34;&gt;Technical Documentation&lt;/a&gt; will use a static web approach to minimize costs and provide good legibility.
All open source components will be hosted on the same site.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The libraries will be published on Maven Central to maximize potential usage.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We have to establish a publishing process at the company level to deploy signed artifacts to maven central repository.
See &lt;a href=&#34;../../../../../ideas/components-publication&#34;&gt;release and publication process&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We have to establish a public website to host the documentation of public-published libraries.
The static website is &lt;a href=&#34;https://blog.tangly.net/&#34;&gt;Open Source Components&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We have to support semantic versioning for all future releases of public-published libraries.
See &lt;a href=&#34;../../../../../ideas/components-publication&#34;&gt;release and publication process&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 005: Publish Maven Central Artifacts</title>
      <link>https://blog.tangly.net/docs/domains/shared/_design/adr/os-005-publish-maven-central-artifact/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/shared/_design/adr/os-005-publish-maven-central-artifact/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_005_publish_artifacts_on_public_java_components_repository&#34;&gt;OS-005 Publish Artifacts on Public Java Components Repository&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2019-05-01&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Supersede: &lt;a href=&#34;../fsm-002-publish-maven-central-artifact&#34;&gt;FSM-0002&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-005-head.png&#34; alt=&#34;OS 005 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;https://www.tangly.net/&#34;&gt;tangly&lt;/a&gt; open source libraries are mature enough to be used in public commercial and academic projects.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The libraries were used in internal projects and  refined to  fulfill these requirements.
More customers will validate the usefulness of the library and identify extensions for further releases.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We want to provide a standard and well-known approach for our customers.
They shall have access to our libraries through official and well-documented channels.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The libraries shall be published as artifacts on maven central and be accessible to a wide range of developers and organizations.
A website shall be set up to provide adequate documentation for users.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;https://blog.tangly.net&#34;&gt;Technical Documentation&lt;/a&gt; will use a static web approach to minimize costs and provide good legibility.
All open source components will be hosted on the same site.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The libraries will be published on Maven Central to maximize potential usage.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We have to establish a publishing process at the company level to deploy signed artifacts to maven central repository.
See &lt;a href=&#34;../../../../../ideas/components-publication&#34;&gt;release and publication process&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We have to establish a public website to host the documentation of public-published libraries.
The static website is &lt;a href=&#34;https://blog.tangly.net/&#34;&gt;Open Source Components&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We have to support semantic versioning for all future releases of public-published libraries.
See &lt;a href=&#34;../../../../../ideas/components-publication&#34;&gt;release and publication process&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 006: Dependency Injection with Guice</title>
      <link>https://blog.tangly.net/docs/domains/architecture/adr/os-006-dependency-injection-guice/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/architecture/adr/os-006-dependency-injection-guice/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_006_dependency_injection_with_guice&#34;&gt;OS-006 Dependency Injection with Guice&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2018-02-20&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-006-head.png&#34; alt=&#34;OS 006 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The modules provided as &lt;a href=&#34;https://www.tangly.net/&#34;&gt;tangly&lt;/a&gt; open source components are used in more complex applications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These applications often use dependency injection frameworks to construct and initialize their instances.
&lt;a href=&#34;https://en.wikipedia.org/wiki/Dependency_injection&#34;&gt;Dependency injection&lt;/a&gt; is a technique in which an object receives other objects that it depends on, called dependencies.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Typically, the receiving object is called a client.
The passed-in &lt;em&gt;injected&lt;/em&gt; object is called a service.
The code that passes the service to the client is called the injector.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Instead of the client specifying that service it will use, the injector tells the client what service should be used.
The &lt;em&gt;injection&lt;/em&gt; refers to the passing of a dependency into the client that uses it.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Guice is selected as a dependency injection framework.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Guice is one of the industrial standards with Dagger and Sprint DI.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Guice supports JDK standard &lt;em&gt;@inject&lt;/em&gt; annotation used in other dependency frameworks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Guice supports the definition of modules to describe dependencies.
The modules are also used as a documentation mechanism.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Care will be taken to allow users to use a different dependency injection framework.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A dependency injection module shall be provided for each relevant module.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Honestly, we are not providing the module for our modules.
Our applications are quite simple and use a handful of services.
This simple solution of a static repository works fine.
This approach is much simpler to reason about, much faster to start, much easier to debug and to maintain.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Services&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;Services&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{}&lt;/span&gt;
    &lt;span style=&#34;color: #cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;LoginService&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;getLoginService&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{}&lt;/span&gt;
    &lt;span style=&#34;color: #cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;ThatService&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;getThatService&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_conventions&#34;&gt;Conventions&lt;/h3&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Constructor injection is the preferred mechanism.
In the long term, it should be the only approach.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Please avoid field injection as an injection approach.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 006: Dependency Injection with Guice</title>
      <link>https://blog.tangly.net/docs/domains/shared/_design/adr/os-006-dependency-injection-guice/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/shared/_design/adr/os-006-dependency-injection-guice/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_006_dependency_injection_with_guice&#34;&gt;OS-006 Dependency Injection with Guice&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2018-02-20&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-006-head.png&#34; alt=&#34;OS 006 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The modules provided as &lt;a href=&#34;https://www.tangly.net/&#34;&gt;tangly&lt;/a&gt; open source components are used in more complex applications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These applications often use dependency injection frameworks to construct and initialize their instances.
&lt;a href=&#34;https://en.wikipedia.org/wiki/Dependency_injection&#34;&gt;Dependency injection&lt;/a&gt; is a technique in which an object receives other objects that it depends on, called dependencies.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Typically, the receiving object is called a client.
The passed-in &lt;em&gt;injected&lt;/em&gt; object is called a service.
The code that passes the service to the client is called the injector.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Instead of the client specifying that service it will use, the injector tells the client what service should be used.
The &lt;em&gt;injection&lt;/em&gt; refers to the passing of a dependency into the client that uses it.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Guice is selected as a dependency injection framework.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Guice is one of the industrial standards with Dagger and Sprint DI.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Guice supports JDK standard &lt;em&gt;@inject&lt;/em&gt; annotation used in other dependency frameworks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Guice supports the definition of modules to describe dependencies.
The modules are also used as a documentation mechanism.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Care will be taken to allow users to use a different dependency injection framework.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A dependency injection module shall be provided for each relevant module.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Honestly, we are not providing the module for our modules.
Our applications are quite simple and use a handful of services.
This simple solution of a static repository works fine.
This approach is much simpler to reason about, much faster to start, much easier to debug and to maintain.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Services&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;Services&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{}&lt;/span&gt;
    &lt;span style=&#34;color: #cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;LoginService&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;getLoginService&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{}&lt;/span&gt;
    &lt;span style=&#34;color: #cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;ThatService&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;getThatService&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_conventions&#34;&gt;Conventions&lt;/h3&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Constructor injection is the preferred mechanism.
In the long term, it should be the only approach.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Please avoid field injection as an injection approach.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 007: Persistence with MicroStream</title>
      <link>https://blog.tangly.net/docs/domains/architecture/adr/os-007-persistence-microstream/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/architecture/adr/os-007-persistence-microstream/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_007_persistence_with_microstream&#34;&gt;OS-007: Persistence with MicroStream&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2020-11-13&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-007-head.jpg&#34; alt=&#34;OS 007 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The modules provided as &lt;a href=&#34;https://www.tangly.net/&#34;&gt;tangly&lt;/a&gt; open source components are used in more complex applications.
These applications require a reliable and performant persistence approach for their data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In Java, everything is an object.
In contrast, all databases come with their own specific data structure that is incompatible with Java objects.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is called &lt;a href=&#34;https://en.wikipedia.org/wiki/Object%E2%80%93relational_impedance_mismatch&#34;&gt;impedance mismatch&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As a consequence, a mapping is required, which means all data must be converted behind the scenes.
Conversions are inefficient, lead to enormous loss of performance and latencies, and are linked to further serious disadvantages.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://microstream.one/&#34;&gt;MicroStream&lt;/a&gt; was selected as persistence approach for the first versions of the ERP solution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Almost no impedance mismatch between the Java application and persistence store.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An elegant approach to providing one persistence container for each bounded domain the same application.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MicroStream has formally announced their software library will be published under an open source license.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The library supports current versions of the JDK and all constructs of the language, including preview constructs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The support of the company is good.
The answers are fast and professional.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Care will be taken to provide a fallback to another persistence solution if performance or licensing problems occur.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A huge advantage is the ease of migrating a java model from Microstream to JPA.
Experience shows that the effort is often less than five working days
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;title&#34;&gt;EclipseStore&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The decision to use MicroStream was a good approach.
The library was moved to the Eclipse umbrella in 2024 and is now part of the Eclipse Foundation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library is now called &lt;a href=&#34;https://eclipsestore.io/&#34;&gt;Eclipse Store&lt;/a&gt; and is actively maintained and developed.
Famous microservices frameworks like Quarkus and Helidon are using the library as one of their default persistence solutions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A companion library provides seamless serialization of Java object graphs.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Knowledge in MicroStream library &lt;a href=&#34;#microstream-4&#34;&gt;[1]&lt;/a&gt; must be build-up.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Software design must be slightly adapted to the MicroStream approach.&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A clear separation of data from functions is required.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lambdas cannot currently be persisted.
Therefore, all data containers with lambda variables must either be redesigned or declared as transient.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Work on a design enabling domain-driven design with MicroStream approach.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The MicroStream approach supports a very effective way to persist data.
The effort to define storage and map Java objects to a persistent representation are minimal.
This approach minimizes the costs for this functionality without impeding the quality or completeness of the solution.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_conventions&#34;&gt;Conventions&lt;/h3&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Realm shall have a private data class to store all data to be persisted.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The application must generate unique object identifiers.
MicroStream does not provide functions in this area.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use specialized features of the library to implement &lt;a href=&#34;../os-003-use-modern-java-constructs/&#34;&gt;Modern Java Constructs ADR&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;microstream-4&#34;&gt;&lt;/a&gt;[1] &lt;a href=&#34;{ref-tangly-blog-url}/2021/microstream-4.x/&#34;&gt;MicroStream 4.x&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. Under the assumption that enough unit and integration tests are available to validate the migrated solution.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 007: Persistence with MicroStream</title>
      <link>https://blog.tangly.net/docs/domains/shared/_design/adr/os-007-persistence-microstream/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/shared/_design/adr/os-007-persistence-microstream/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_007_persistence_with_microstream&#34;&gt;OS-007: Persistence with MicroStream&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2020-11-13&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-007-head.jpg&#34; alt=&#34;OS 007 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The modules provided as &lt;a href=&#34;https://www.tangly.net/&#34;&gt;tangly&lt;/a&gt; open source components are used in more complex applications.
These applications require a reliable and performant persistence approach for their data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In Java, everything is an object.
In contrast, all databases come with their own specific data structure that is incompatible with Java objects.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is called &lt;a href=&#34;https://en.wikipedia.org/wiki/Object%E2%80%93relational_impedance_mismatch&#34;&gt;impedance mismatch&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As a consequence, a mapping is required, which means all data must be converted behind the scenes.
Conversions are inefficient, lead to enormous loss of performance and latencies, and are linked to further serious disadvantages.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://microstream.one/&#34;&gt;MicroStream&lt;/a&gt; was selected as persistence approach for the first versions of the ERP solution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Almost no impedance mismatch between the Java application and persistence store.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An elegant approach to providing one persistence container for each bounded domain the same application.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MicroStream has formally announced their software library will be published under an open source license.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The library supports current versions of the JDK and all constructs of the language, including preview constructs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The support of the company is good.
The answers are fast and professional.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Care will be taken to provide a fallback to another persistence solution if performance or licensing problems occur.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A huge advantage is the ease of migrating a java model from Microstream to JPA.
Experience shows that the effort is often less than five working days
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;title&#34;&gt;EclipseStore&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The decision to use MicroStream was a good approach.
The library was moved to the Eclipse umbrella in 2024 and is now part of the Eclipse Foundation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library is now called &lt;a href=&#34;https://eclipsestore.io/&#34;&gt;Eclipse Store&lt;/a&gt; and is actively maintained and developed.
Famous microservices frameworks like Quarkus and Helidon are using the library as one of their default persistence solutions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A companion library provides seamless serialization of Java object graphs.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Knowledge in MicroStream library &lt;a href=&#34;#microstream-4&#34;&gt;[1]&lt;/a&gt; must be build-up.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Software design must be slightly adapted to the MicroStream approach.&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A clear separation of data from functions is required.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lambdas cannot currently be persisted.
Therefore, all data containers with lambda variables must either be redesigned or declared as transient.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Work on a design enabling domain-driven design with MicroStream approach.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The MicroStream approach supports a very effective way to persist data.
The effort to define storage and map Java objects to a persistent representation are minimal.
This approach minimizes the costs for this functionality without impeding the quality or completeness of the solution.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_conventions&#34;&gt;Conventions&lt;/h3&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Realm shall have a private data class to store all data to be persisted.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The application must generate unique object identifiers.
MicroStream does not provide functions in this area.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use specialized features of the library to implement &lt;a href=&#34;../os-003-use-modern-java-constructs/&#34;&gt;Modern Java Constructs ADR&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;microstream-4&#34;&gt;&lt;/a&gt;[1] &lt;a href=&#34;{ref-tangly-blog-url}/2021/microstream-4.x/&#34;&gt;MicroStream 4.x&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. Under the assumption that enough unit and integration tests are available to validate the migrated solution.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 008: Use log4j2 as default logging framework</title>
      <link>https://blog.tangly.net/docs/domains/architecture/adr/os-008-use-log4j2-as-default-logger/</link>
      <pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/architecture/adr/os-008-use-log4j2-as-default-logger/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_008_use_log4j2_as_default_logging_framework&#34;&gt;OS-008 Use log4j2 as default logging framework&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2021-06-15&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-008-head.png&#34; alt=&#34;OS 008 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The logging library &lt;a href=&#34;https://en.wikipedia.org/wiki/SLF4J&#34;&gt;slf4j&lt;/a&gt; seems to be a dead project for at least one year.
The last commit in the &lt;a href=&#34;https://github.com/qos-ch/slf4j&#34;&gt;GitHub slf4j repository&lt;/a&gt; was performed two years ago.
Version 2.0 of the library is an alpha release on &lt;a href=&#34;https://mvnrepository.com/artifact/org.slf4j/slf4j-api&#34;&gt;Maven Central&lt;/a&gt; dating back to October 2019.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The apache project log4j has made tremendous progress with the creation of the log4j2 library.
All features provided in slf4j are now available in log4j2.
In particular, the fluent interface, which is only available in the beta version of slf4j is also supported.
Additional features are also provided and performance is better than with other logging frameworks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The project is active and under the umbrella of the &lt;a href=&#34;https://www.apache.org&#34;&gt;Apache Foundation&lt;/a&gt;.
The library uses well-documented Java module names as any modern library shall provide.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This situation raises the question to move our application to the apache logging framework.
Both APIs are very similar in style and naming.
The effort to migrate is quite reasonable.
Usually, only the logger declaration needs a modification.
The creation of logging records uses exactly the same syntax and calling conventions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The advantage is better integration with an actively supported and developed library.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All components will be migrated to the log4j2 library
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All components shall use the fluent interface to write logging records.
This decision shall increase the legibility of the source code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Staying in a library no more under active development is too dangerous.
Closing of security issues and support of current JDK versions are not guaranteed.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;All source files must be modified to use the new library&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;All logging record creations shall use a fluent interface.
As in slf4j, no string concatenation shall happen in log record calls, use the message feature of the library.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Logging level is specified by using the fluent interface&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No conditional statements shall be used to bracket logging statements&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Exceptions are always stated through the fluent user interface and are not an argument of the log message&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle&lt;/a&gt; build files shall use the new library.
The API is declared as an implementation dependency.
The core library is declared as a test or runtime dependency.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Testing shall be performed to verify the correct behavior and correct configuration.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We shall explore if trouble arises from used components which are using other logging libraries.
The risk is small because it is already existing when using slf4j library.
The difference is only our new preferred library is now the Apache one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock important&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-important&#34; title=&#34;Important&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Configure slf4j API to use the log4j2 backend to write logging statements.
This configuration is important if some of your libraries are using slf4j.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The architecture of log4j2 is described in &lt;a href=&#34;https://logging.apache.org/log4j/2.x/manual/architecture.html&#34;&gt;Log4j2 Main Components&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_learnings&#34;&gt;Learnings&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The log4j2 community reacted professionally and fast in 2022 to correct a security attack in the library.
The update of all libraries and applications with the patched version was done in a few minutes.
A &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle Build Tool&lt;/a&gt; plugin was used to infer, which version of the library was used.
The continuous implementation and delivery pipeline were used to generate hardened versions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A new feature of Gradle supports the definition of dependencies in a central file for all submodules.
The project uses &lt;em&gt;libs.version.toml&lt;/em&gt; configuration file to unify library usage through all components.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. It is sad that such a well-crafted library as slf4j is fading away. We assume that the community actively working on extensions was too small. Ceki Gülcü did a wonderful job to pave the way for modern and efficient logging concepts in the Java world.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 008: Use log4j2 as default logging framework</title>
      <link>https://blog.tangly.net/docs/domains/shared/_design/adr/os-008-use-log4j2-as-default-logger/</link>
      <pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/shared/_design/adr/os-008-use-log4j2-as-default-logger/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_008_use_log4j2_as_default_logging_framework&#34;&gt;OS-008 Use log4j2 as default logging framework&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2021-06-15&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-008-head.png&#34; alt=&#34;OS 008 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The logging library &lt;a href=&#34;https://en.wikipedia.org/wiki/SLF4J&#34;&gt;slf4j&lt;/a&gt; seems to be a dead project for at least one year.
The last commit in the &lt;a href=&#34;https://github.com/qos-ch/slf4j&#34;&gt;GitHub slf4j repository&lt;/a&gt; was performed two years ago.
Version 2.0 of the library is an alpha release on &lt;a href=&#34;https://mvnrepository.com/artifact/org.slf4j/slf4j-api&#34;&gt;Maven Central&lt;/a&gt; dating back to October 2019.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The apache project log4j has made tremendous progress with the creation of the log4j2 library.
All features provided in slf4j are now available in log4j2.
In particular, the fluent interface, which is only available in the beta version of slf4j is also supported.
Additional features are also provided and performance is better than with other logging frameworks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The project is active and under the umbrella of the &lt;a href=&#34;https://www.apache.org&#34;&gt;Apache Foundation&lt;/a&gt;.
The library uses well-documented Java module names as any modern library shall provide.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This situation raises the question to move our application to the apache logging framework.
Both APIs are very similar in style and naming.
The effort to migrate is quite reasonable.
Usually, only the logger declaration needs a modification.
The creation of logging records uses exactly the same syntax and calling conventions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The advantage is better integration with an actively supported and developed library.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All components will be migrated to the log4j2 library
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All components shall use the fluent interface to write logging records.
This decision shall increase the legibility of the source code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Staying in a library no more under active development is too dangerous.
Closing of security issues and support of current JDK versions are not guaranteed.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;All source files must be modified to use the new library&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;All logging record creations shall use a fluent interface.
As in slf4j, no string concatenation shall happen in log record calls, use the message feature of the library.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Logging level is specified by using the fluent interface&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No conditional statements shall be used to bracket logging statements&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Exceptions are always stated through the fluent user interface and are not an argument of the log message&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle&lt;/a&gt; build files shall use the new library.
The API is declared as an implementation dependency.
The core library is declared as a test or runtime dependency.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Testing shall be performed to verify the correct behavior and correct configuration.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We shall explore if trouble arises from used components which are using other logging libraries.
The risk is small because it is already existing when using slf4j library.
The difference is only our new preferred library is now the Apache one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock important&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-important&#34; title=&#34;Important&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Configure slf4j API to use the log4j2 backend to write logging statements.
This configuration is important if some of your libraries are using slf4j.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The architecture of log4j2 is described in &lt;a href=&#34;https://logging.apache.org/log4j/2.x/manual/architecture.html&#34;&gt;Log4j2 Main Components&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_learnings&#34;&gt;Learnings&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The log4j2 community reacted professionally and fast in 2022 to correct a security attack in the library.
The update of all libraries and applications with the patched version was done in a few minutes.
A &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle Build Tool&lt;/a&gt; plugin was used to infer, which version of the library was used.
The continuous implementation and delivery pipeline were used to generate hardened versions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A new feature of Gradle supports the definition of dependencies in a central file for all submodules.
The project uses &lt;em&gt;libs.version.toml&lt;/em&gt; configuration file to unify library usage through all components.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. It is sad that such a well-crafted library as slf4j is fading away. We assume that the community actively working on extensions was too small. Ceki Gülcü did a wonderful job to pave the way for modern and efficient logging concepts in the Java world.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 009: Use HSQLDB as an SQL DB</title>
      <link>https://blog.tangly.net/docs/domains/architecture/adr/os-009-use-hsqldb-as-sql-store/</link>
      <pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/architecture/adr/os-009-use-hsqldb-as-sql-store/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_009_use_hsqldb_as_an_sql_store&#34;&gt;OS-009 Use HSQLDB as an SQL store&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2022-01-01&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-009-head.png&#34; alt=&#34;OS 009 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Applications regularly need to store information in a persistent store.
A proven approach is to use an SQL database solution for such activities.
The Java ecosystem supports a relational database with libraries.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The JPA approach provides an object relational mapper.
The JOOQL approach has a genuine mapping of SQL statements to type verified Java expressions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The HSQLDB SQL database java solution is the preferred choice when an application needs to store data in a relational store.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Beware the preferred persistence mechanism is &lt;a href=&#34;../os-007-persistence-microstream/&#34;&gt;Microstream&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The advantages of the solution are:
* A simple java library packaged as a jar file provides all the need functionalities.
* The implementation provides an SQL standard compliant solution
* the application can embed the database server.
This is a preferred approach in domain-driven design solutions.
* No runtime license costs are required.
The deployment on virtualized and cloud platforms is hugely simplified.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The drawbacks are:
* Best of breed products such PostgreSQL, Oracle, or SQL server are not preferred solutions.
Operations departments have extensive experience with these products but none with HSQLDB.
* The size of the database is limited.
The current limitation is in the level of tens of terabytes.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 009: Use HSQLDB as an SQL DB</title>
      <link>https://blog.tangly.net/docs/domains/shared/_design/adr/os-009-use-hsqldb-as-sql-store/</link>
      <pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/shared/_design/adr/os-009-use-hsqldb-as-sql-store/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_009_use_hsqldb_as_an_sql_store&#34;&gt;OS-009 Use HSQLDB as an SQL store&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2022-01-01&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-009-head.png&#34; alt=&#34;OS 009 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Applications regularly need to store information in a persistent store.
A proven approach is to use an SQL database solution for such activities.
The Java ecosystem supports a relational database with libraries.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The JPA approach provides an object relational mapper.
The JOOQL approach has a genuine mapping of SQL statements to type verified Java expressions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The HSQLDB SQL database java solution is the preferred choice when an application needs to store data in a relational store.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Beware the preferred persistence mechanism is &lt;a href=&#34;../os-007-persistence-microstream/&#34;&gt;Microstream&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The advantages of the solution are:
* A simple java library packaged as a jar file provides all the need functionalities.
* The implementation provides an SQL standard compliant solution
* the application can embed the database server.
This is a preferred approach in domain-driven design solutions.
* No runtime license costs are required.
The deployment on virtualized and cloud platforms is hugely simplified.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The drawbacks are:
* Best of breed products such PostgreSQL, Oracle, or SQL server are not preferred solutions.
Operations departments have extensive experience with these products but none with HSQLDB.
* The size of the database is limited.
The current limitation is in the level of tens of terabytes.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 010: Archive Data using TSV and JSON</title>
      <link>https://blog.tangly.net/docs/domains/architecture/adr/os-010-archive-data/</link>
      <pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/architecture/adr/os-010-archive-data/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_010_archive_data_using_tsv_and_json&#34;&gt;OS-010 Archive Data using TSV and JSON&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2022-01-01&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-010-head.jpg&#34; alt=&#34;OS 010 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Contrary to XML or JSON, TSV is perfectly suited to represent records with the least possible overhead.
There are a lot of tools, like spreadsheet editors, which can read and modify TSV files.
The file’s size is at the possible minimum, and the performance of the converter is significantly better than with the other formats.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;TSV is preferred to import data into the application or export information from the solution.
The format is also the preferred solution to import data into or export data from the solution.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;TSV files cannot express complex nested structures.
Regular business models are often quite flat and translate well to a set of TSV files.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We recommend JSON format for complex nested documents.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The solution &lt;em&gt;tangly ERP&lt;/em&gt; is a well-constructed solution using TSV format for import and export of bounded domain persistent data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The complex documents defining invoices are exported as imported using a JSON format.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We use the &lt;a href=&#34;https://commons.apache.org/proper/commons-csv/&#34;&gt;Apache Commons CSV Library&lt;/a&gt; to parse and write TSV files.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The libray functions are good enough for our designs.
The library is well-maintained and under Apache 2.0 open source license.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We use the &lt;a href=&#34;https://github.com/stleary/JSON-java&#34;&gt;JSON Library&lt;/a&gt; to parse and write JSON files.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We use the &lt;a href=&#34;https://github.com/networknt/json-schema-validator&#34;&gt;JSON Validator Library&lt;/a&gt; to validate JSON files against a &lt;a href=&#34;https://json-schema.org/&#34;&gt;JSON schema&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 010: Archive Data using TSV and JSON</title>
      <link>https://blog.tangly.net/docs/domains/shared/_design/adr/os-010-archive-data/</link>
      <pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/shared/_design/adr/os-010-archive-data/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_010_archive_data_using_tsv_and_json&#34;&gt;OS-010 Archive Data using TSV and JSON&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2022-01-01&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-010-head.jpg&#34; alt=&#34;OS 010 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Contrary to XML or JSON, TSV is perfectly suited to represent records with the least possible overhead.
There are a lot of tools, like spreadsheet editors, which can read and modify TSV files.
The file’s size is at the possible minimum, and the performance of the converter is significantly better than with the other formats.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;TSV is preferred to import data into the application or export information from the solution.
The format is also the preferred solution to import data into or export data from the solution.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;TSV files cannot express complex nested structures.
Regular business models are often quite flat and translate well to a set of TSV files.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We recommend JSON format for complex nested documents.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The solution &lt;em&gt;tangly ERP&lt;/em&gt; is a well-constructed solution using TSV format for import and export of bounded domain persistent data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The complex documents defining invoices are exported as imported using a JSON format.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We use the &lt;a href=&#34;https://commons.apache.org/proper/commons-csv/&#34;&gt;Apache Commons CSV Library&lt;/a&gt; to parse and write TSV files.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The libray functions are good enough for our designs.
The library is well-maintained and under Apache 2.0 open source license.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We use the &lt;a href=&#34;https://github.com/stleary/JSON-java&#34;&gt;JSON Library&lt;/a&gt; to parse and write JSON files.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We use the &lt;a href=&#34;https://github.com/networknt/json-schema-validator&#34;&gt;JSON Validator Library&lt;/a&gt; to validate JSON files against a &lt;a href=&#34;https://json-schema.org/&#34;&gt;JSON schema&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 011: Vaadin User Interface</title>
      <link>https://blog.tangly.net/docs/domains/architecture/adr/os-011-vaadin-as-user-interface/</link>
      <pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/architecture/adr/os-011-vaadin-as-user-interface/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_011_vaadin_user_interface&#34;&gt;OS-011 Vaadin User Interface&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2022-01-01&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-011-head.svg&#34; alt=&#34;OS 011 head&#34; width=&#34;360&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Our primary and almost exclusive technical stack is &lt;a href=&#34;../os-003-use-modern-java-constructs/&#34;&gt;Modern Java&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A major weakness of the Java ecosystem is the user interface aspects.
&lt;a href=&#34;https://en.wikipedia.org/wiki/Swing_(Java)&#34;&gt;Swing&lt;/a&gt; is old and no more actively supported by Oracle or other major players.
&lt;a href=&#34;https://openjfx.io/&#34;&gt;JavaFX&lt;/a&gt; has a small active community.
The platform never had a huge acceptance.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We could use various JavaScript frameworks to realize our user interfaces.
The drawback is supporting an additional technology stack.
Complexity is added between the Java backend and the TypeScript frontend.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Our primary approach to realizing user interface is to use &lt;a href=&#34;https://vaadin.com/&#34;&gt;Vaadin&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The version of Vaadin should be higher than 14.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Vaadin has some impressive aspects:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;User interface can fully be written in Java.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mobile first and progressive Web applications are natively supported with all visual components.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The solution can be hosed in a docker image.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;User interface components are based on &lt;a href=&#34;https://www.webcomponents.org/&#34;&gt;Web Components&lt;/a&gt; and &lt;a href=&#34;https://lit.dev/&#34;&gt;Lit HTML&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If desired, you can write user interface components in Typescript and connect them to the Vaadin ecosystem.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A strength of Vaadin has extensive support for migrating legacy Java solutions to a modern Java technical stack.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The advantages are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Java is our sole technology stack to realize complete applications.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The major part of the framework is under Apache 2.0 open source license.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vaadin applications easily support a few hundreds of active users.
If you respect some design considerations, Vaadin applications scale to a few thousands of active users.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Active community provides additional user interface components.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We use the &lt;a href=&#34;https://vaadin.com/directory/component/so-charts&#34;&gt;SO-Charts&lt;/a&gt; components to draw our charts.
The library is a wrapper around the Apache &lt;a href=&#34;https://echarts.apache.org/en/index.html&#34;&gt;ECharts&lt;/a&gt; library.
This library provides a huge number of high-quality graphs.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The drawback is:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You cannot currently write solutions supporting a hundred thousand of parallel users.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Our market is the creation of management and organization internal applications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These solutions have seldom more than five hundred of parallel users.
Therefore, we never had scalabity or performance problems with Vaadin based programs.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OS 011: Vaadin User Interface</title>
      <link>https://blog.tangly.net/docs/domains/shared/_design/adr/os-011-vaadin-as-user-interface/</link>
      <pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/shared/_design/adr/os-011-vaadin-as-user-interface/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_os_011_vaadin_user_interface&#34;&gt;OS-011 Vaadin User Interface&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Date: 2022-01-01&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implemented&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/OS-011-head.svg&#34; alt=&#34;OS 011 head&#34; width=&#34;360&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Our primary and almost exclusive technical stack is &lt;a href=&#34;../os-003-use-modern-java-constructs/&#34;&gt;Modern Java&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A major weakness of the Java ecosystem is the user interface aspects.
&lt;a href=&#34;https://en.wikipedia.org/wiki/Swing_(Java)&#34;&gt;Swing&lt;/a&gt; is old and no more actively supported by Oracle or other major players.
&lt;a href=&#34;https://openjfx.io/&#34;&gt;JavaFX&lt;/a&gt; has a small active community.
The platform never had a huge acceptance.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We could use various JavaScript frameworks to realize our user interfaces.
The drawback is supporting an additional technology stack.
Complexity is added between the Java backend and the TypeScript frontend.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Our primary approach to realizing user interface is to use &lt;a href=&#34;https://vaadin.com/&#34;&gt;Vaadin&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The version of Vaadin should be higher than 14.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Vaadin has some impressive aspects:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;User interface can fully be written in Java.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mobile first and progressive Web applications are natively supported with all visual components.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The solution can be hosed in a docker image.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;User interface components are based on &lt;a href=&#34;https://www.webcomponents.org/&#34;&gt;Web Components&lt;/a&gt; and &lt;a href=&#34;https://lit.dev/&#34;&gt;Lit HTML&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If desired, you can write user interface components in Typescript and connect them to the Vaadin ecosystem.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A strength of Vaadin has extensive support for migrating legacy Java solutions to a modern Java technical stack.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The advantages are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Java is our sole technology stack to realize complete applications.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The major part of the framework is under Apache 2.0 open source license.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vaadin applications easily support a few hundreds of active users.
If you respect some design considerations, Vaadin applications scale to a few thousands of active users.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Active community provides additional user interface components.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We use the &lt;a href=&#34;https://vaadin.com/directory/component/so-charts&#34;&gt;SO-Charts&lt;/a&gt; components to draw our charts.
The library is a wrapper around the Apache &lt;a href=&#34;https://echarts.apache.org/en/index.html&#34;&gt;ECharts&lt;/a&gt; library.
This library provides a huge number of high-quality graphs.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The drawback is:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You cannot currently write solutions supporting a hundred thousand of parallel users.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Our market is the creation of management and organization internal applications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These solutions have seldom more than five hundred of parallel users.
Therefore, we never had scalabity or performance problems with Vaadin based programs.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: FSM tests</title>
      <link>https://blog.tangly.net/docs/fsm/examples/fsm-tests/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/fsm/examples/fsm-tests/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_finite_state_machines&#34;&gt;Finite State Machines&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Below different formats to document automatically a finite state machine description.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The nicest diagrams are often produced through PlantUML.
Sometimes you must tinker with the declaration order of the state to improve the layout result.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_finite_state_machine_bbv&#34;&gt;Finite State Machine &lt;em&gt;bbv&lt;/em&gt;&lt;/h3&gt;

&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_fsm_bbv_states&#34;&gt;fsm-bbv States&lt;/h3&gt;
&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 12.5%;&#34;/&gt;
&lt;col style=&#34;width: 12.5%;&#34;/&gt;
&lt;col style=&#34;width: 18.75%;&#34;/&gt;
&lt;col style=&#34;width: 6.25%;&#34;/&gt;
&lt;col style=&#34;width: 6.25%;&#34;/&gt;
&lt;col style=&#34;width: 6.25%;&#34;/&gt;
&lt;col style=&#34;width: 18.75%;&#34;/&gt;
&lt;col style=&#34;width: 18.75%;&#34;/&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Name&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Context&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Description&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Final&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Initial&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Composite&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Entry Action&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Exit Action&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-bbv-Root&#34;&gt;&lt;/a&gt;Root&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-bbv-Off&#34;&gt;&lt;/a&gt;Off&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Root&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Entry action of Off state&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;ExitOffstate&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-bbv-Maintenance&#34;&gt;&lt;/a&gt;Maintenance&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Root&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-bbv-On&#34;&gt;&lt;/a&gt;On&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Root&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-bbv-FM&#34;&gt;&lt;/a&gt;FM&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;On&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;entryFM&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;exitFM&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-bbv-DAB&#34;&gt;&lt;/a&gt;DAB&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;On&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-bbv-Play&#34;&gt;&lt;/a&gt;Play&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;FM&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;entryPlay&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;exitPlay&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-bbv-AutoTune&#34;&gt;&lt;/a&gt;AutoTune&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;FM&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_fsm_bbv_transitions&#34;&gt;fsm-bbv Transitions&lt;/h3&gt;
&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 14.2857%;&#34;/&gt;
&lt;col style=&#34;width: 14.2857%;&#34;/&gt;
&lt;col style=&#34;width: 21.4285%;&#34;/&gt;
&lt;col style=&#34;width: 7.1428%;&#34;/&gt;
&lt;col style=&#34;width: 21.4285%;&#34;/&gt;
&lt;col style=&#34;width: 21.4288%;&#34;/&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Start State&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;End State&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Description&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Local&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Guard&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Action&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-bbv-Off&#34;&gt;Off&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-bbv-Maintenance&#34;&gt;Maintenance&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Off → TogglePower&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Maintenance is On&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;log transition Off to Maintenance&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-bbv-Off&#34;&gt;Off&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-bbv-On&#34;&gt;On&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Off → On&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Maintenance Off&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;OfftoOn&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-bbv-Maintenance&#34;&gt;Maintenance&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-bbv-Off&#34;&gt;Off&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Maintenance → Off&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;MaintainedtoOff&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-bbv-On&#34;&gt;On&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-bbv-Off&#34;&gt;Off&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;TogglePower → On&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;OntoOff&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-bbv-FM&#34;&gt;FM&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-bbv-DAB&#34;&gt;DAB&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;FM → DAB&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;FMtoDAB&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-bbv-DAB&#34;&gt;DAB&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-bbv-DAB&#34;&gt;DAB&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;DAB → DAB&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-bbv-DAB&#34;&gt;DAB&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-bbv-FM&#34;&gt;FM&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;DAB → FM&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;DABtoFM&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-bbv-Play&#34;&gt;Play&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-bbv-Play&#34;&gt;Play&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Play → Play&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-bbv-Play&#34;&gt;Play&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-bbv-AutoTune&#34;&gt;AutoTune&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Play → AutoTune&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;PlaytoAutoTune&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-bbv-AutoTune&#34;&gt;AutoTune&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-bbv-Play&#34;&gt;Play&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;AutoTune → Play&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;AutoTunetoPlay&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_graphical_representation_with_dot&#34;&gt;Graphical Representation with dot&lt;/h4&gt;
&lt;div class=&#34;imageblock kroki&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://kroki.io/graphviz/svg/eNqNlN9qgzAUxu99ipDrFh-gOOgY3c3EsvWueBGbaANZTtHjRhl99yXxTxNt1wUUzPl-3_k8EbmsanY6klfyExGzDvB5glbzBOtWrCK317RFJ6IH1TYo6uU7ANKecAo8K5HQL9nIQokF4aw5Cr4gBShOV6NMsUIokhDq-Gjcz8qS7HuPDqX5lUqZ1Cg00wdB9t7-PFam_VC3gpVSKeFHCmIZPgrxWYtNOm3x7zZBK-MTzapbxc6TQYxe-dxs3SLsWh1Oxa5L8PSyfv5jup320oWxB7F8CifuIid0B1WlxBa-Rb3367Ihmc5jBRXBmulGogTtjBB8o6Fn36J7VXUUjCf--S3Ig36Gz2NzQzDq3tOvG2_3Oc1tYiczl-AGLsuBdlFGzAjUw0Rxpm9auFFPLMxJTyxS4CLepAhGPjhY8t5Y7jgYBMHUJhmuX0WPfCCzZ_IGDcZWhDBIBnRErgkCdGP_CPGgQrAay15-AQ3eP3A=&#34; alt=&#34;fsm-bbv-dot&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_graphical_representation_with_plantuml&#34;&gt;Graphical Representation with PlantUml&lt;/h4&gt;
&lt;div class=&#34;imageblock kroki&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://kroki.io/plantuml/svg/eNp9Uk1rwzAMvftX6Dwoue8w2jFymknpeis9hNrNDKlUYoVRSv_7ZOfLyT5CgmO9pyfryWvPZcPtpVafzliwlyvfwFh_atyVHaFSQmALOyKGuwJ5Dk9HWK1eoDif474jDDtZI6pLh2yxxJOFZ9hTVdV2S1-2gUMKOQ8FHiGDmirgpkTvQtkow5SqzNQL_E9UWEFSFqZCWphOudRLs_qeFsJZx5HPGlGTLtOmsfck9eVt8zrGOloakf_IyvVYSJM4nwWEKddqkSzEqUZaZ1uXtxnQ8X-EQyAmbFqmfYthHh9CFZvfybNUDgymAVa_iI5YCo16w2km4ZxaNKI8UJjisWbp0lhv19KJXDOlnj2mRHH8rzkV2M2nz5BXrS0audvfS33Qow==&#34; alt=&#34;fsm-bbv-plantuml&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_graphical_representation_with_mermaid&#34;&gt;Graphical Representation with mermaid&lt;/h4&gt;
&lt;div class=&#34;imageblock kroki&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://kroki.io/mermaid/svg/eNp9kcFqwzAMhu9-Cp0HobDjDoOO4tOMy9Zb6cEsbjBkEsTKShl99ylO4jmhWyDYln59sn5Hdux3wTWd-6y-HlUczvBGxPCtQL7jwwmq6hns-ZzOxZrixgVkjw4__BMcqGlav6eL7-BYZCBEsHiCDbTUAHcOY-BAmChMJWQBt_gPU0QDURYmiyoVrkGlfppiSdyMEvl9LRgZLtWNNlicTCiN2G1fcmy1T3lt5g6Gai8NJMGkjcrKEa5NAS8b7Ft3XSTuBpJ02zMdehTn34Uphr5SZGk5CJjmrFoU5-i9YL5AJmrqsRbkrGBK18nVt7yTgSZ_VgZowzQ4pX714uwfz2Fxeoab-gGlWbmz&#34; alt=&#34;fsm-bbv-mermaid&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_graphical_representation_with_state_machine_cat&#34;&gt;Graphical Representation with State Machine Cat&lt;/h4&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/fsm-bbv-smcat.svg&#34; alt=&#34;fsm bbv smcat&#34; width=&#34;1727&#34; height=&#34;631&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_finite_state_machine_test&#34;&gt;Finite State Machine &lt;em&gt;Test&lt;/em&gt;&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Below different formats to document automatically a finite state machine description.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_fsm_test_states&#34;&gt;fsm-test States&lt;/h3&gt;
&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 12.5%;&#34;/&gt;
&lt;col style=&#34;width: 12.5%;&#34;/&gt;
&lt;col style=&#34;width: 18.75%;&#34;/&gt;
&lt;col style=&#34;width: 6.25%;&#34;/&gt;
&lt;col style=&#34;width: 6.25%;&#34;/&gt;
&lt;col style=&#34;width: 6.25%;&#34;/&gt;
&lt;col style=&#34;width: 18.75%;&#34;/&gt;
&lt;col style=&#34;width: 18.75%;&#34;/&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Name&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Context&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Description&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Final&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Initial&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Composite&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Entry Action&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Exit Action&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-test-Root&#34;&gt;&lt;/a&gt;Root&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-test-A&#34;&gt;&lt;/a&gt;A&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Root&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;State A&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-test-AA&#34;&gt;&lt;/a&gt;AA&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;A&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;State AA&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-test-AB&#34;&gt;&lt;/a&gt;AB&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;A&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;State AB&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-test-B&#34;&gt;&lt;/a&gt;B&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Root&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-test-BA&#34;&gt;&lt;/a&gt;BA&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;B&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;State BA&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-test-BB&#34;&gt;&lt;/a&gt;BB&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;B&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;State BB&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-test-C&#34;&gt;&lt;/a&gt;C&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Root&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_fsm_test_transitions&#34;&gt;fsm-test Transitions&lt;/h3&gt;
&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 14.2857%;&#34;/&gt;
&lt;col style=&#34;width: 14.2857%;&#34;/&gt;
&lt;col style=&#34;width: 21.4285%;&#34;/&gt;
&lt;col style=&#34;width: 7.1428%;&#34;/&gt;
&lt;col style=&#34;width: 21.4285%;&#34;/&gt;
&lt;col style=&#34;width: 21.4288%;&#34;/&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Start State&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;End State&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Description&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Local&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Guard&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Action&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-A&#34;&gt;A&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-C&#34;&gt;C&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;A → C when A_C&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-AA&#34;&gt;AA&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-AA&#34;&gt;AA&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Local transition AA → AA when (AA_AA)&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-AA&#34;&gt;AA&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-AB&#34;&gt;AB&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;AA → AB when AA_AB&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-AA&#34;&gt;AA&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-B&#34;&gt;B&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;AA → B when AA_B&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-AA&#34;&gt;AA&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-BB&#34;&gt;BB&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;AA → BB when (AA_BB)&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-AB&#34;&gt;AB&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-AA&#34;&gt;AA&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;AB → AA when AB_AA&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-AB&#34;&gt;AB&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-AB&#34;&gt;AB&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;AB → AB when AB_AB&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-B&#34;&gt;B&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-C&#34;&gt;C&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;B → C when B_C&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-BA&#34;&gt;BA&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-A&#34;&gt;A&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;BA → A when BA_C&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-BA&#34;&gt;BA&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-BB&#34;&gt;BB&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;BA → BB when BA_BB&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-BB&#34;&gt;BB&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-BB&#34;&gt;BB&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Local transition BB → BB when BB_BB&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-BB&#34;&gt;BB&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-BA&#34;&gt;BA&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;VV → BA when BB_BA&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-BB&#34;&gt;BB&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-test-C&#34;&gt;C&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;BB → C when BB_C&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_graphical_representation_with_dot_2&#34;&gt;Graphical Representation with dot&lt;/h4&gt;
&lt;div class=&#34;imageblock kroki&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://kroki.io/graphviz/svg/eNqFkEtugzAQhvc5heU1UQ4QudIMi-67yCaKEMRuQZqGiEerquLuBdvBYxCpl_M__M3o6qPJ76V4Fb87Mb5r_Xmv-5tWXdOb487O2r5wJnmlvu1Ms3-r6076hHV0P2SU_KraqiCTCJ23pdGJKGrS8jjbKC8MCSWkze9CfPUB8PbtH1h31A-sfHoA4uwbfPASJwHFmY2GJ2j4H9p7RbSNhgs0DGg-uEBDfMIeQNPZZY_uPYP7bNx__zJZqMsrUuzMiSNTErL08Eg5-3SThwgZ4EKewKk0uVbsNKEOslUg6kMmo_0OgowZwFLGSA5p3NiNwSDbzdlhDc9ugeO6iwCDxwgecT6GlzFDOJxOfvxdmpuwsziR8oDDG_4A6oPoGA==&#34; alt=&#34;fsm-test-dot&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_graphical_representation_with_plantuml_2&#34;&gt;Graphical Representation with PlantUml&lt;/h4&gt;
&lt;div class=&#34;imageblock kroki&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://kroki.io/plantuml/svg/eNplks0KgzAQhO95ij0XpPceipm8QQ9eSgmlBhTqD5pSSum7d01iE1MRXL-Z7O6I5Wyvk310d9G0tSHTjfZFtZlvUzvaduiFYIM1dBoGS29BfHmgXK2oKI503l2Ee-XCAZkYZTi20eUPBVMEUnoL6MC1lsiVIPzzVYDIuydehAUWL3Q6F8lcLHOj5BS1CNrn_ogkIZKEgcS2CHH4MDhNzt3S2C69fiUgbxsB_LZwfaH5uaeqIo-ejek9zf3K21UclvCYjW9Rmr7m_-ILSqxylw==&#34; alt=&#34;fsm-test-plantuml&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_graphical_representation_with_mermaid_2&#34;&gt;Graphical Representation with mermaid&lt;/h4&gt;
&lt;div class=&#34;imageblock kroki&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://kroki.io/mermaid/svg/eNplkL8KAjEMxvc8RWahCI43CE19AodbREqHQx30wCs6yL27aVJte9ehfPl9af50iiEOh1u4PMPdvHYwpRiP4xjxA8jH6Y3G7PG0OYOELARYifSNzQ8a3_5RI9WkjqW3tDSUr3HmBMWpkih35CTydTcq3Sh1E2eWWws7dryDaheqdiFbSS3VsfIrnOajdr7fP1CZs5FqpnrkucoW-x6F4Ps6PJQu051ku3qNYiQ-wxcIzVtH&#34; alt=&#34;fsm-test-mermaid&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_graphical_representation_with_state_machine_cat_2&#34;&gt;Graphical Representation with State Machine Cat&lt;/h4&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/fsm-test-smcat.svg&#34; alt=&#34;fsm test smcat&#34; width=&#34;829&#34; height=&#34;494&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_finite_state_machine_washer&#34;&gt;Finite State Machine &lt;em&gt;Washer&lt;/em&gt;&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Below different formats to document automatically a finite state machine description.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_fsm_washer_states&#34;&gt;fsm-washer States&lt;/h3&gt;
&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 12.5%;&#34;/&gt;
&lt;col style=&#34;width: 12.5%;&#34;/&gt;
&lt;col style=&#34;width: 18.75%;&#34;/&gt;
&lt;col style=&#34;width: 6.25%;&#34;/&gt;
&lt;col style=&#34;width: 6.25%;&#34;/&gt;
&lt;col style=&#34;width: 6.25%;&#34;/&gt;
&lt;col style=&#34;width: 18.75%;&#34;/&gt;
&lt;col style=&#34;width: 18.75%;&#34;/&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Name&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Context&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Description&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Final&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Initial&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Composite&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Entry Action&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Exit Action&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-washer-Root&#34;&gt;&lt;/a&gt;Root&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-washer-Running&#34;&gt;&lt;/a&gt;Running&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Root&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Running State&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-washer-End&#34;&gt;&lt;/a&gt;End&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Root&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;State End&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-washer-Washing&#34;&gt;&lt;/a&gt;Washing&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Running&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Washing State&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-washer-Rinsing&#34;&gt;&lt;/a&gt;Rinsing&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Running&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Rising State&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-washer-Drying&#34;&gt;&lt;/a&gt;Drying&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Running&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Drying State&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;true&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a id=&#34;fsm-washer-PowerOff&#34;&gt;&lt;/a&gt;PowerOff&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Root&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;PowerOff State&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_fsm_washer_transitions&#34;&gt;fsm-washer Transitions&lt;/h3&gt;
&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 14.2857%;&#34;/&gt;
&lt;col style=&#34;width: 14.2857%;&#34;/&gt;
&lt;col style=&#34;width: 21.4285%;&#34;/&gt;
&lt;col style=&#34;width: 7.1428%;&#34;/&gt;
&lt;col style=&#34;width: 21.4285%;&#34;/&gt;
&lt;col style=&#34;width: 21.4288%;&#34;/&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Start State&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;End State&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Description&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Local&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Guard&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Action&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-washer-Running&#34;&gt;Running&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-washer-End&#34;&gt;End&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Running → End&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-washer-Running&#34;&gt;Running&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-washer-PowerOff&#34;&gt;PowerOff&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Running → PowerOff&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-washer-Washing&#34;&gt;Washing&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-washer-Rinsing&#34;&gt;Rinsing&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Washing → Rinsing&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-washer-Rinsing&#34;&gt;Rinsing&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-washer-Drying&#34;&gt;Drying&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Rinsing → Drying&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-washer-PowerOff&#34;&gt;PowerOff&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;#fsm-washer-Running&#34;&gt;Running&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;PowerOff → Running&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;false&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_graphical_representation_with_dot_3&#34;&gt;Graphical Representation with dot&lt;/h4&gt;
&lt;div class=&#34;imageblock kroki&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://kroki.io/graphviz/svg/eNqFkLtOwzAUhvc8heU5fYIqLIAYQenAgDo49Ulj6WBHvlBVKO-O8a0OhZIpPv7-iw8XR83miTyRz4b476DeZ-Uk76x2sG3CzLghQvSAzljQm14pS5MiEPaM0NEPYcSA0BLOzAS8JYNCTrcFQzYAko7QoG8u8usAJ6WQxzrjVs4oEKFOWqcls2Z1_eq1fkrekmn0ovu1SS-kCdSP-YM-1-Lw0ApZyt-j5H9SL-oE-nkci_sSK-Zqm7soR8sEdlfLaeMTO7qzas6-lfZi_5_BvbMB_sWkLCCh32fIXL70XF5IwvwxQ6WGp8rScQLGbzTqwVilobRavgBfasgO&#34; alt=&#34;fsm-washer-dot&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_graphical_representation_with_plantuml_3&#34;&gt;Graphical Representation with PlantUml&lt;/h4&gt;
&lt;div class=&#34;imageblock kroki&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://kroki.io/plantuml/svg/eNptkU0KwjAQhfdzilkLvUAXIqhrpS5ciItipjZgk5JMkSLe3fzWWiyBZt773pBMNpZrw0P3gFYKQup6HlGQvRnZs9QKwAFMWGnN-AJ0XxT2SoTK_bEo1nhZXWFmH_WTzKFpgpSLAFaDUlLdscSKLGtDwY1Z12TOzPrlVDzCnD3Xts3sl1-qqY7dpbLpBG5HsIgme1Iz7qM7M8ak2yxz0ZvEhP7MJrRLN_GGH16JJ9b9X3uaW4nbgeOcPPMGcAs2pIR7uQ-t_X5Y&#34; alt=&#34;fsm-washer-plantuml&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_graphical_representation_with_mermaid_3&#34;&gt;Graphical Representation with mermaid&lt;/h4&gt;
&lt;div class=&#34;imageblock kroki&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://kroki.io/mermaid/svg/eNorLkksSXXJTEwvSszVLTPiKgbxFYLy80sUqrkUgMA1LwVGK-jq2ilEa8VygQUC8stTi_zT0lA4YCVBpXl5mXnpVgpBqcUl-UWpYEmIJqBuZCVgMaiVEBGorchqwxOLM2BqQQAHH2JuZl4xxGogI5ULrgYqjs4H63EpqgRrAdIIDRBBNC5qANSCSZi7QVLAMLJSCC7JL8CQgYWPlYJzaQk0PGq5ALAhZ8g=&#34; alt=&#34;fsm-washer-plantuml&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_graphical_representation_with_state_machine_cat_3&#34;&gt;Graphical Representation with State Machine Cat&lt;/h4&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/fsm-washer-smcat.svg&#34; alt=&#34;fsm washer smcat&#34; width=&#34;631&#34; height=&#34;417&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Readme</title>
      <link>https://blog.tangly.net/docs/bdd/readme/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/bdd/readme/</guid>
      <description>
        
        
        &lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg&#34; alt=&#34;Apache License 2.0&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/net.tangly/bdd&#34; alt=&#34;Maven Central&#34;/&gt;&lt;/span&gt;
&lt;a href=&#34;https://javadoc.io/doc/net.tangly/bdd&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/net.tangly/bdd/javadoc.svg&#34; alt=&#34;javadoc&#34;/&gt;&lt;/span&gt;&lt;/a&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://github.com/tangly-team/tangly-os/actions/workflows/workflows.yml/badge.svg&#34; alt=&#34;build&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/tangly-team/tangly-os&#34; alt=&#34;issues&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/tangly-team/tangly-os&#34; alt=&#34;discussions&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_purpose&#34;&gt;Purpose&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A behavior-driven development library that provides a custom extension based on the JUnit 5 Jupiter Extension Model.
This library can be used to create and run stories and behaviors as BDD specification tests.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library is a developer-first approach.
Developers write acceptance tests to validate the functions they have implemented.
The generated report provides a living documentation of the features and allows customers to validate the acceptance criteria.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library is compact and integrated with JUnit 5 without disrupting TDD approaches and continuous integration pipelines.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_download_and_documentation&#34;&gt;Download and Documentation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You need to add JUnit 5 dependencies before using this library.
If you are using Maven or Gradle, add the following dependency after declaring the JUnit 5 dependency.
We recommend using &lt;em&gt;assertJ&lt;/em&gt; assertion library to write more legible conditions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Maven as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt;    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;net.tangly&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;bdd&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.2.7&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Gradle as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt;    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;testImplementation&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;net.tangly:bdd:0.2.7&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation can be found under &lt;a href=&#34;https://blog.tangly.net/docs/bdd/&#34;&gt;BDD documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For any further questions, you can use the forum &lt;a href=&#34;https://github.com/orgs/tangly-team/discussions&#34;&gt;tangly-Discussions&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;An overall article is available under &lt;a href=&#34;https://blog.tangly.net/blog/2022/behavior-driven-design/&#34;&gt;Behavior Driven Design&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Readme</title>
      <link>https://blog.tangly.net/docs/commons/readme/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/commons/readme/</guid>
      <description>
        
        
        &lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg&#34; alt=&#34;Apache License 2.0&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/net.tangly/commons&#34; alt=&#34;Maven Central&#34;/&gt;&lt;/span&gt;
&lt;a href=&#34;https://javadoc.io/doc/net.tangly/commons&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/net.tangly/commons/javadoc.svg&#34; alt=&#34;javadoc&#34;/&gt;&lt;/span&gt;&lt;/a&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://github.com/tangly-team/tangly-os/actions/workflows/workflows.yml/badge.svg&#34; alt=&#34;build&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/tangly-team/tangly-os&#34; alt=&#34;issues&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/tangly-team/tangly-os&#34; alt=&#34;discussions&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_purpose&#34;&gt;Purpose&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A behavior-driven development library that provides a custom extension based on the JUnit 5 Jupiter Extension Model.
This library can be used to create and run stories and behaviors as BDD specification tests.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library is a developer-first approach.
Developers write acceptance tests to validate the functions they have implemented.
The generated report provides a living documentation of the features and allows customers to validate the acceptance criteria.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library is compact and integrated with JUnit 5 without disrupting TDD approaches and continuous integration pipelines.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_download_and_documentation&#34;&gt;Download and Documentation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Maven as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt;    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;net.tangly&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;commons&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.2.7&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Gradle as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt;    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;implementation&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;net.tangly:commons:0.2.7&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation can be found under &lt;a href=&#34;https://blog.tangly.net/docs/commons/&#34;&gt;Commons documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For any further questions, you can use the forum &lt;a href=&#34;https://github.com/orgs/tangly-team/discussions&#34;&gt;tangly-Discussions&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Readme</title>
      <link>https://blog.tangly.net/docs/core/readme/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/core/readme/</guid>
      <description>
        
        
        &lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg&#34; alt=&#34;Apache License 2.0&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/net.tangly/core&#34; alt=&#34;Maven Central&#34;/&gt;&lt;/span&gt;
&lt;a href=&#34;https://javadoc.io/doc/net.tangly/core&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/net.tangly/core/javadoc.svg&#34; alt=&#34;javadoc&#34;/&gt;&lt;/span&gt;&lt;/a&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://github.com/tangly-team/tangly-os/actions/workflows/workflows.yml/badge.svg&#34; alt=&#34;build&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/tangly-team/tangly-os&#34; alt=&#34;issues&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/tangly-team/tangly-os&#34; alt=&#34;discussions&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_purpose&#34;&gt;Purpose&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;strong&gt;tangly core&lt;/strong&gt; component provides a key abstraction for domain-driven development approach and entities with tags and comments.
It requires &lt;strong&gt;Java 17 or higher&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_download_and_documentation&#34;&gt;Download and Documentation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Maven as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt; &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
 &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;net.tangly&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
 &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;core&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
 &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.2.7&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
 &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Gradle as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;implementation&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;net.tangly:core:0.2.7&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation can be found under &lt;a href=&#34;https://blog.tangly.net/docs/core/&#34;&gt;Core&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Readme</title>
      <link>https://blog.tangly.net/docs/dev/readme/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/dev/readme/</guid>
      <description>
        
        
        &lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg&#34; alt=&#34;Apache License 2.0&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/net.tangly/dev&#34; alt=&#34;Maven Central&#34;/&gt;&lt;/span&gt;
&lt;a href=&#34;https://javadoc.io/doc/net.tangly/dev&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/net.tangly/dev/javadoc.svg&#34; alt=&#34;javadoc&#34;/&gt;&lt;/span&gt;&lt;/a&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://github.com/tangly-team/tangly-os/actions/workflows/workflows.yml/badge.svg&#34; alt=&#34;build&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/tangly-team/tangly-os&#34; alt=&#34;issues&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/tangly-team/tangly-os&#34; alt=&#34;discussions&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_purpose&#34;&gt;Purpose&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_download_and_documentation&#34;&gt;Download and Documentation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Maven as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt;    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;net.tangly&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;dev&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.2.7&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Gradle as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt;    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;implementation&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;net.tangly:dev:0.2.7&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation can be found under &lt;a href=&#34;https://blog.tangly.net/docs/dev/&#34;&gt;Commons documentation&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For any further questions, you can use the forum &lt;a href=&#34;https://github.com/orgs/tangly-team/discussions&#34;&gt;tangly-Discussions&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Readme</title>
      <link>https://blog.tangly.net/docs/domains/agile/readme/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/agile/readme/</guid>
      <description>
        
        
        &lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg&#34; alt=&#34;Apache License 2.0&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/net.tangly.erp/agile&#34; alt=&#34;Maven Central&#34;/&gt;&lt;/span&gt;
&lt;a href=&#34;https://javadoc.io/doc/net.tangly.erp/agile&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/net.tangly.erp/agile/javadoc.svg&#34; alt=&#34;javadoc&#34;/&gt;&lt;/span&gt;&lt;/a&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://github.com/tangly-team/tangly-os/actions/workflows/workflows.yml/badge.svg&#34; alt=&#34;build&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/tangly-team/tangly-os&#34; alt=&#34;issues&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/tangly-team/tangly-os&#34; alt=&#34;discussions&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_purpose&#34;&gt;Purpose&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;strong&gt;tangly erp agile&lt;/strong&gt; bounded domain component provides regular business model abstractions for business applications written in Java. The component is
using records and requires &lt;strong&gt;Java 17 or higher&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Try it out&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_download_and_documentation&#34;&gt;Download and Documentation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Maven as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;net.tangly.erp&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;collaborators&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.2.7&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Gradle as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt;    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;implementation&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;net.tangly.erp:collaborators:0.2.7&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation can be found under &lt;a href=&#34;https://blog.tangly.net/docs/domains/agile/&#34;&gt;Business documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Readme</title>
      <link>https://blog.tangly.net/docs/domains/collaborators/readme/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/collaborators/readme/</guid>
      <description>
        
        
        &lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg&#34; alt=&#34;Apache License 2.0&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/net.tangly.erp/collaborators&#34; alt=&#34;Maven Central&#34;/&gt;&lt;/span&gt;
&lt;a href=&#34;https://javadoc.io/doc/net.tangly.erp/collaborators&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/net.tangly.erp/collaborators/javadoc.svg&#34; alt=&#34;javadoc&#34;/&gt;&lt;/span&gt;&lt;/a&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://github.com/tangly-team/tangly-os/actions/workflows/workflows.yml/badge.svg&#34; alt=&#34;build&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/tangly-team/tangly-os&#34; alt=&#34;issues&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/tangly-team/tangly-os&#34; alt=&#34;discussions&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_purpose&#34;&gt;Purpose&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;strong&gt;tangly erp collaborators&lt;/strong&gt; bounded domain component provides regular business model abstractions for business applications written in Java. The component is using records and requires &lt;strong&gt;Java 17 or higher&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Try it out&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_download_and_documentation&#34;&gt;Download and Documentation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Maven as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;net.tangly.erp&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;collaborators&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.2.7&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Gradle as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt;    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;implementation&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;net.tangly.erp:collaborators:0.2.7&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation can be found under &lt;a href=&#34;https://blog.tangly.net/docs/domains/collaborators/&#34;&gt;Business documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For any further questions, you can use the forum &lt;a href=&#34;https://github.com/orgs/tangly-team/discussions&#34;&gt;tangly-Discussions&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_contribution&#34;&gt;Contribution&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are welcome to contribute to the product with pull requests on Bitbucket.You can download the source files from the
&lt;a href=&#34;https://bitbucket.org/tangly-team/tangly-os.git&#34;&gt;bitbucket git repository&lt;/a&gt; and build the library with the provided gradle configuration file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you find a bug or want to request a feature, please use the &lt;a href=&#34;https://bitbucket.org/tangly-team/tangly-os/issues&#34;&gt;issue tracker&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_license&#34;&gt;License&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The source code is licensed under &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache license 2.0&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation and examples are licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34;&gt;Creative Common (CC Attribution 4.0 International)&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_awesome_sponsors_and_developers&#34;&gt;Awesome Sponsors and Developers&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Corporate sponsors are&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.tangly.net&#34;&gt;tangly llc&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Individual developers are&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://linkedin.com/in/marcelbaumann&#34;&gt;Marcel Baumann&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Readme</title>
      <link>https://blog.tangly.net/docs/domains/crm/readme/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/crm/readme/</guid>
      <description>
        
        
        &lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg&#34; alt=&#34;Apache License 2.0&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/net.tangly.erp/crm&#34; alt=&#34;Maven Central&#34;/&gt;&lt;/span&gt;
&lt;a href=&#34;https://javadoc.io/doc/net.tangly.erp/crm&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/net.tangly.erp/crm/javadoc.svg&#34; alt=&#34;javadoc&#34;/&gt;&lt;/span&gt;&lt;/a&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://github.com/tangly-team/tangly-os/actions/workflows/workflows.yml/badge.svg&#34; alt=&#34;build&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/tangly-team/tangly-os&#34; alt=&#34;issues&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/tangly-team/tangly-os&#34; alt=&#34;discussions&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_purpose&#34;&gt;Purpose&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;strong&gt;tangly erp crm&lt;/strong&gt; bounded domain component provides regular business model abstractions for business applications written in Java. The component is using records and requires &lt;strong&gt;Java 17 or higher&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Try it out&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_download_and_documentation&#34;&gt;Download and Documentation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Maven as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;net.tangly.erp&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;crm&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.2.7&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Gradle as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt;    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;implementation&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;net.tangly.erp:crm:0.2.7&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation can be found under &lt;a href=&#34;https://blog.tangly.net/docs/domains/crm/&#34;&gt;Business documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For any further questions, you can use the forum &lt;a href=&#34;https://github.com/orgs/tangly-team/discussions&#34;&gt;tangly-Discussions&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_contribution&#34;&gt;Contribution&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are welcome to contribute to the product with pull requests on Bitbucket.You can download the source files from the
&lt;a href=&#34;https://bitbucket.org/tangly-team/tangly-os.git&#34;&gt;bitbucket git repository&lt;/a&gt; and build the library with the provided gradle configuration file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you find a bug or want to request a feature, please use the &lt;a href=&#34;https://bitbucket.org/tangly-team/tangly-os/issues&#34;&gt;issue tracker&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_license&#34;&gt;License&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The source code is licensed under &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache license 2.0&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation and examples are licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34;&gt;Creative Common (CC Attribution 4.0 International)&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_awesome_sponsors_and_developers&#34;&gt;Awesome Sponsors and Developers&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Corporate sponsors are&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.tangly.net&#34;&gt;tangly llc&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Individual developers are&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://linkedin.com/in/marcelbaumann&#34;&gt;Marcel Baumann&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Readme</title>
      <link>https://blog.tangly.net/docs/domains/invoices/readme/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/invoices/readme/</guid>
      <description>
        
        
        &lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg&#34; alt=&#34;Apache License 2.0&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/net.tangly.erp/invoices&#34; alt=&#34;Maven Central&#34;/&gt;&lt;/span&gt;
&lt;a href=&#34;https://javadoc.io/doc/net.tangly.erp/invoices&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/net.tangly.erp/invoices/javadoc.svg&#34; alt=&#34;javadoc&#34;/&gt;&lt;/span&gt;&lt;/a&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://github.com/tangly-team/tangly-os/actions/workflows/workflows.yml/badge.svg&#34; alt=&#34;build&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/tangly-team/tangly-os&#34; alt=&#34;issues&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/tangly-team/tangly-os&#34; alt=&#34;discussions&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_purpose&#34;&gt;Purpose&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;strong&gt;tangly erp invoices&lt;/strong&gt; bounded domain component provides regular business model abstractions for business applications written in Java. The component is using records and requires &lt;strong&gt;Java 17 or higher&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Try it out&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_download_and_documentation&#34;&gt;Download and Documentation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Maven as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;net.tangly.erp&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;invoices&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.2.7&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Gradle as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;implementation&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;net.tangly.erp:invoices:0.2.7&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation can be found under &lt;a href=&#34;https://blog.tangly.net/docs/domains/invoices/&#34;&gt;Business documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Readme</title>
      <link>https://blog.tangly.net/docs/domains/ledger/readme/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/ledger/readme/</guid>
      <description>
        
        
        &lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg&#34; alt=&#34;Apache License 2.0&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/net.tangly.erp/ledger&#34; alt=&#34;Maven Central&#34;/&gt;&lt;/span&gt;
&lt;a href=&#34;https://javadoc.io/doc/net.tangly.erp/ledger&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/net.tangly.erp/ledger/javadoc.svg&#34; alt=&#34;javadoc&#34;/&gt;&lt;/span&gt;&lt;/a&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://github.com/tangly-team/tangly-os/actions/workflows/workflows.yml/badge.svg&#34; alt=&#34;build&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/tangly-team/tangly-os&#34; alt=&#34;issues&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/tangly-team/tangly-os&#34; alt=&#34;discussions&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_purpose&#34;&gt;Purpose&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;strong&gt;tangly erp crm&lt;/strong&gt; bounded domain component provides regular business model abstractions for business applications written in Java. The component is using records and requires &lt;strong&gt;Java 17 or higher&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Try it out&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_download_and_documentation&#34;&gt;Download and Documentation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Maven as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;net.tangly.erp&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;crm&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.2.7&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Gradle as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;implementation&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;net.tangly.erp:crm:0.2.7&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation can be found under &lt;a href=&#34;https://blog.tangly.net/docs/domains/crm/&#34;&gt;Business documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Readme</title>
      <link>https://blog.tangly.net/docs/domains/products/readme/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/products/readme/</guid>
      <description>
        
        
        &lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg&#34; alt=&#34;Apache License 2.0&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/net.tangly.erp/products&#34; alt=&#34;Maven Central&#34;/&gt;&lt;/span&gt;
&lt;a href=&#34;https://javadoc.io/doc/net.tangly.erp/products&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/net.tangly.erp/products/javadoc.svg&#34; alt=&#34;javadoc&#34;/&gt;&lt;/span&gt;&lt;/a&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://github.com/tangly-team/tangly-os/actions/workflows/workflows.yml/badge.svg&#34; alt=&#34;build&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/tangly-team/tangly-os&#34; alt=&#34;issues&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/tangly-team/tangly-os&#34; alt=&#34;discussions&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_purpose&#34;&gt;Purpose&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;strong&gt;tangly erp products&lt;/strong&gt; bounded domain component provides regular business model abstractions for business applications written in Java. The component is using records and requires &lt;strong&gt;Java 17 or higher&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Try it out&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_download_and_documentation&#34;&gt;Download and Documentation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Maven as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;net.tangly.erp&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;products&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.2.7&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Gradle as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;implementation&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;net.tangly.erp:products:0.2.7&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation can be found under &lt;a href=&#34;https://blog.tangly.net/docs/domains/products/&#34;&gt;Business documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Readme</title>
      <link>https://blog.tangly.net/docs/domains/shared/readme/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/shared/readme/</guid>
      <description>
        
        
        &lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg&#34; alt=&#34;Apache License 2.0&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/net.tangly.erp/shared&#34; alt=&#34;Maven Central&#34;/&gt;&lt;/span&gt;
&lt;a href=&#34;https://javadoc.io/doc/net.tangly.erp/shared&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/net.tangly.erp/shared/javadoc.svg&#34; alt=&#34;javadoc&#34;/&gt;&lt;/span&gt;&lt;/a&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://github.com/tangly-team/tangly-os/actions/workflows/workflows.yml/badge.svg&#34; alt=&#34;build&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/tangly-team/tangly-os&#34; alt=&#34;issues&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/tangly-team/tangly-os&#34; alt=&#34;discussions&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_purpose&#34;&gt;Purpose&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;strong&gt;tangly erp shared&lt;/strong&gt; bounded domain component provides regular business model abstractions for business applications written in Java. The component is using records and requires &lt;strong&gt;Java 17 or higher&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Try it out&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_download_and_documentation&#34;&gt;Download and Documentation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Maven as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;net.tangly.erp&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;shared&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.2.7&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Gradle as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt;    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;implementation&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;net.tangly.erp:shared:0.2.7&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation can be found under &lt;a href=&#34;https://blog.tangly.net/docs/domains/shared/&#34;&gt;Business documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Readme</title>
      <link>https://blog.tangly.net/docs/domains/ui/readme/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/domains/ui/readme/</guid>
      <description>
        
        
        &lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg&#34; alt=&#34;Apache License 2.0&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/net.tangly.erp/ui&#34; alt=&#34;Maven Central&#34;/&gt;&lt;/span&gt;
&lt;a href=&#34;https://javadoc.io/doc/net.tangly.erp/ui&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/net.tangly.erp/ui/javadoc.svg&#34; alt=&#34;javadoc&#34;/&gt;&lt;/span&gt;&lt;/a&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://github.com/tangly-team/tangly-os/actions/workflows/workflows.yml/badge.svg&#34; alt=&#34;build&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/tangly-team/tangly-os&#34; alt=&#34;issues&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/tangly-team/tangly-os&#34; alt=&#34;discussions&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_purpose&#34;&gt;Purpose&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;strong&gt;tangly erp ui&lt;/strong&gt; bounded domain component provides regular business model abstractions for business applications written in Java.
The component is using records and requires &lt;strong&gt;Java 17 or higher&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Try it out&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_download_and_documentation&#34;&gt;Download and Documentation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Include the library in your Maven configuration as:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;net.tangly.erp&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;ui&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.2.7&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Include the library in your Gradle configuration as:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt;    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;implementation&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;net.tangly.erp:ui:0.2.7&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation can be found under &lt;a href=&#34;https://blog.tangly.net/docs/domains/ui/&#34;&gt;Business documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For any further questions, you can use the forum &lt;a href=&#34;https://github.com/orgs/tangly-team/discussions&#34;&gt;tangly-Discussions&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_run_as_an_application&#34;&gt;Run as an Application&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_run_locally_with_gradle&#34;&gt;Run Locally with Gradle&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The gradle script compiles, packages, and runs the application with an embedded web server. &lt;em&gt;Run from the project root&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;shell&#34;&gt;    gradle run&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_run_locally_as_compiled_application&#34;&gt;Run locally as compiled application&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can build and run the generated Java Vaadin application locally. &lt;em&gt;Run from the project root&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;shell&#34;&gt;  ./gradlew build installDist &lt;span style=&#34;color: #116329&#34;&gt;-Pvaadin&lt;/span&gt;.productionMode                       &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
  net.tangly.erp.ui/build/install/net.tangly.erp.ui/bin/net.tangly.erp.ui   &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_run_locally_as_fatjar_application&#34;&gt;Run locally as fatjar application&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can build and run the generated Java Vaadin application as fat jar locally. &lt;em&gt;Run from the project root&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;shell&#34;&gt;  ./gradlew build installShadowDist &lt;span style=&#34;color: #116329&#34;&gt;-Pvaadin&lt;/span&gt;.productionMode                 &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
  net.tangly.erp.ui/build/install/net.tangly.erp.ui-shadow/bin/net.tangly.erp.ui &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
  java &lt;span style=&#34;color: #0550ae&#34;&gt;$JVM_OPTS&lt;/span&gt; &lt;span style=&#34;color: #116329&#34;&gt;-jar&lt;/span&gt; net.tangly.erp.ui/build/install/net.tangly.erp.ui-shadow/lib/net.tangly.erp.ui-all.jar &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&amp;lt;1&amp;gt; The production mode parameter is mandatory.
Otherwise, the distribution frontend is not built, and the application cannot run without JavaScript build tools.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;lt;2&amp;gt; Head to &lt;a href=&#34;http://localhost:8080/erp/&#34; class=&#34;bare&#34;&gt;http://localhost:8080/erp/&lt;/a&gt;.
The default port is 8080, and the application starts with in-memory storage.
The environment variables are set in the run script.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;lt;3&amp;gt; Start the application with java command.
You are responsible to provide the JVM options as define below.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The JVM options to run the application are&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;JVM_OPTS&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;--enable-preview --add-exports=java.base/jdk.internal.misc=ALL_UNNAMED &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;
          --add-opens=java.base/jdk.internal.misc=ALL-UNNAMED -XX:+ShowCodeDetailsInExceptionMessages -Xmx256m&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_run_in_a_docker_image&#34;&gt;Run in a Docker Image&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The prerequisite is that the application was built locally for production mode as described above.
The first step is to build the Docker image with the provided configuration.
&lt;em&gt;Run from the project root&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;shell&#34;&gt;  ./gradlew net.tangly.erp.ui:installDist &lt;span style=&#34;color: #116329&#34;&gt;-Pvaadin&lt;/span&gt;.productionMode   &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
  docker login &lt;span style=&#34;color: #116329&#34;&gt;-u&lt;/span&gt; tanglyllc &lt;span style=&#34;color: #116329&#34;&gt;-p&lt;/span&gt; &amp;lt;password&amp;gt;                           &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
  docker build &lt;span style=&#34;color: #116329&#34;&gt;-t&lt;/span&gt; tanglyllc/tangly-erp:latest net.tangly.erp.ui/    &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
  docker push tanglyllc/tangly-erp:latest                           &lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;(4)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Build the Java application and create a binary distribution of the application.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Login into DockerHub with username and password.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Generate a Docker image containing the binary application generated in the previous step.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Push the Docker image to the repository.
Customers can retrieve the published Docker image and execute it in a container.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We currently push to &lt;a href=&#34;https://hub.docker.com/&#34;&gt;Docker Hub&lt;/a&gt; repository.
The image is accessible unde &lt;a href=&#34;https://hub.docker.com/r/tanglyllc/tangly-erp&#34;&gt;tangly-erp Docker Image&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To run the built image use the following commands.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;shell&#34;&gt;  docker run &lt;span style=&#34;color: #116329&#34;&gt;--rm&lt;/span&gt; &lt;span style=&#34;color: #116329&#34;&gt;-ti&lt;/span&gt; &lt;span style=&#34;color: #116329&#34;&gt;-p&lt;/span&gt; 8080:8080 &lt;span style=&#34;color: #116329&#34;&gt;-e&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;PORT&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt;8080 &lt;span style=&#34;color: #116329&#34;&gt;-e&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;true&lt;/span&gt;  &lt;span style=&#34;color: #116329&#34;&gt;-v&lt;/span&gt; /var/tangly-erp:/var/tangly-erp tanglyllc/tangly-erp:latest&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The user under which the erp application shall not have root privileges.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The port of the application is configured through the port environment variable.
This approach is mandatory if the image is deployed in &lt;a href=&#34;https://www.heroku.com/&#34;&gt;Heroku&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_run_in_the_cloud&#34;&gt;Run in the Cloud&lt;/h3&gt;
&lt;div class=&#34;admonitionblock caution&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-caution&#34; title=&#34;Caution&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The deployment on the Heroku cloud was removed due to changes in the usage conditions of the platform.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Therefore, we do not deploy anymore our applications on Heroku.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Readme</title>
      <link>https://blog.tangly.net/docs/fsm/readme/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/fsm/readme/</guid>
      <description>
        
        
        &lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg&#34; alt=&#34;Apache License 2.0&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/net.tangly/fsm&#34; alt=&#34;Maven Central&#34;/&gt;&lt;/span&gt;
&lt;a href=&#34;https://javadoc.io/doc/net.tangly/fsm&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/net.tangly/fsm/javadoc.svg&#34; alt=&#34;javadoc&#34;/&gt;&lt;/span&gt;&lt;/a&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://github.com/tangly-team/tangly-os/actions/workflows/workflows.yml/badge.svg&#34; alt=&#34;build&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/tangly-team/tangly-os&#34; alt=&#34;issues&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/tangly-team/tangly-os&#34; alt=&#34;discussions&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_purpose&#34;&gt;Purpose&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;strong&gt;tangly fsm&lt;/strong&gt; is a finite state machine library.
You can use it in productive projects and academic assignments.
The component is using records and requires &lt;strong&gt;Java 17 or higher&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library provides&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Definition of hierarchical state machine descriptions.
The machine states and transitions are generic classes.
You provide an enumeration for the set of states, and an enumeration for the set of events triggering the machine.
The builder pattern is used to create complex state machine definition declaratively,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Builder approach to construct finite state machine declaration being either classical state machines or hierarchical state machines&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lambda expressions based on standard API functional interfaces are used for guards and actions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Guard are bi-predicate lambda expressions with the context and event as parameters&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Actions are bi-function lambda expressions with the context and event as parameters&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A runtime engine processing events on a finite state machine description.
Multiple instances of the same description can be instantiated.
The class owning the state machine is passed as context to all guards and actions,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support classes to implement listeners and logging are provided.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Documentation helper can generate a graphical representation of a state machine using the graph dot language.
Various output formats are supported&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Table representation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dot graph representation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PlantUML UML finite hierarchical state machine representation&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_download_and_documentation&#34;&gt;Download and Documentation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Maven as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt;    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;net.tangly&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;fsm&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.2.7&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Gradle as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt;    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;implementation&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;net.tangly:fsm:0.2.7&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation can be found under &lt;a href=&#34;https://blog.tangly.net/docs/fsm/&#34;&gt;FSM documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For any further questions, you can use the forum &lt;a href=&#34;https://github.com/orgs/tangly-team/discussions&#34;&gt;tangly-Discussions&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_contribution&#34;&gt;Contribution&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be built with Gradle&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;shell&#34;&gt;    gradle build&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Readme</title>
      <link>https://blog.tangly.net/docs/gleam/readme/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/gleam/readme/</guid>
      <description>
        
        
        &lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg&#34; alt=&#34;Apache License 2.0&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/net.tangly/gleam&#34; alt=&#34;Maven Central&#34;/&gt;&lt;/span&gt;
&lt;a href=&#34;https://javadoc.io/doc/net.tangly/gleam&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/net.tangly/gleam/javadoc.svg&#34; alt=&#34;javadoc&#34;/&gt;&lt;/span&gt;&lt;/a&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://github.com/tangly-team/tangly-os/actions/workflows/workflows.yml/badge.svg&#34; alt=&#34;build&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/tangly-team/tangly-os&#34; alt=&#34;issues&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/tangly-team/tangly-os&#34; alt=&#34;discussions&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_purpose&#34;&gt;Purpose&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_download_and_documentation&#34;&gt;Download and Documentation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Maven as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt;    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;net.tangly&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;gleam&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.2.7&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Gradle as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt;    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;implementation&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;net.tangly:gleam:0.2.7&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation can be found under &lt;a href=&#34;https://blog.tangly.net/docs/gleam/&#34;&gt;Commons documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Readme</title>
      <link>https://blog.tangly.net/docs/ui/readme/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/ui/readme/</guid>
      <description>
        
        
        &lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg&#34; alt=&#34;Apache License 2.0&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/net.tangly/ui&#34; alt=&#34;Maven Central&#34;/&gt;&lt;/span&gt;
&lt;a href=&#34;https://javadoc.io/doc/net.tangly/ui&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/net.tangly/ui/javadoc.svg&#34; alt=&#34;javadoc&#34;/&gt;&lt;/span&gt;&lt;/a&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://github.com/tangly-team/tangly-os/actions/workflows/workflows.yml/badge.svg&#34; alt=&#34;build&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/tangly-team/tangly-os&#34; alt=&#34;issues&#34;/&gt;&lt;/span&gt;
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/tangly-team/tangly-os&#34; alt=&#34;discussions&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_purpose&#34;&gt;Purpose&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;strong&gt;tangly ui erp&lt;/strong&gt; component provides a Vaadin based user interfaces for enterprise applications written in Java.
The component is using records and requires &lt;strong&gt;Java 17 or higher&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Currently, we are moving at the bleeding edge of our components.
Therefore, to build and execute the ERP application, please do:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;shell&#34;&gt;    mvn jetty:run&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The initial username and password are &amp;#39;administrator&amp;#39; and &amp;#39;aeon&amp;#39;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The file &lt;em&gt;application.properties&lt;/em&gt; in &lt;em&gt;…/main/resources&lt;/em&gt; directory tailors the configuration of the application, mainly the location of data.
The file contains comments for new users.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Maven POM file is used to build the application and run it because the Gradle Jetty plugin crashes.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_download_and_documentation&#34;&gt;Download and Documentation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Maven as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt;    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;net.tangly&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;ui&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.2.7&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library can be included in Gradle as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt;    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;implementation&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;net.tangly:ui:0.2.7&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation can be found under &lt;a href=&#34;https://blog.tangly.net/docs/ui/&#34;&gt;UI documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For any further questions, you can use the forum &lt;a href=&#34;https://github.com/orgs/tangly-team/discussions&#34;&gt;tangly-Discussions&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_contribution&#34;&gt;Contribution&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are welcome to contribute to the product with pull requests on Bitbucket.
You can download the source files from the
&lt;a href=&#34;https://bitbucket.org/tangly-team/tangly-os.git&#34;&gt;bitbucket git repository&lt;/a&gt; and build the library with the provided gradle configuration file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you find a bug or want to request a feature, please use the &lt;a href=&#34;https://bitbucket.org/tangly-team/tangly-os/issues&#34;&gt;issue tracker&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_license&#34;&gt;License&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The source code is licensed under &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache license 2.0&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation and examples are licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34;&gt;Creative Common (CC Attribution 4.0 International)&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_awesome_sponsors_and_developers&#34;&gt;Awesome Sponsors and Developers&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Corporate sponsors are&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.tangly.net&#34;&gt;tangly llc&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Individual developers are&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://linkedin.com/in/marcelbaumann&#34;&gt;Marcel Baumann&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Expertise: Agile Architecture</title>
      <link>https://blog.tangly.net/expertise/expertise-technical/agile-architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/expertise/expertise-technical/agile-architecture/</guid>
      <description>
        
        
        &lt;div class=&#34;td-card-group card-group p-0 mb-4&#34;&gt;
&lt;div class=&#34;td-card card border me-4&#34;&gt;
&lt;div class=&#34;card-header&#34;&gt;
      &lt;strong&gt;Evolvable Architectures&lt;/strong&gt;
    &lt;/div&gt;
&lt;div class=&#34;card-body&#34;&gt;
    &lt;p class=&#34;card-text&#34;&gt;
        &lt;p&gt;Every product is unique and needs a tailored architecture.
The goal is to identify an architecture that evolves with new requirements and constraints.
Constraints are new technologies, regulatory changes or improvements in reliability and scalability.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Transform the architecture to a more modular solution&lt;/li&gt;
&lt;li&gt;Validate continuously the design against the requirements&lt;/li&gt;
&lt;li&gt;Identify and automate fitness functions to verify constraints&lt;/li&gt;
&lt;li&gt;Move from a monolithic to a service architecture&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
      &lt;/div&gt;
  &lt;/div&gt;

  &lt;div class=&#34;td-card card border me-4&#34;&gt;
&lt;div class=&#34;card-header&#34;&gt;
      &lt;strong&gt;Domain-Driven Development&lt;/strong&gt;
    &lt;/div&gt;
&lt;div class=&#34;card-body&#34;&gt;
    &lt;p class=&#34;card-text&#34;&gt;
        &lt;p&gt;Agile cross-functional teams implement and deliver features to the customers.
We have extensive experience defining architectures, empowering multiple teams to work on the same product and implement effectively and efficiently new features.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Implement domain-driven development and architecture&lt;/li&gt;
&lt;li&gt;Use event storming to identify domain ubiquitous language&lt;/li&gt;
&lt;li&gt;Establish DDD as an architectural approach to microservice solutions&lt;/li&gt;
&lt;li&gt;Identify bounded contexts to promote parallel development&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
      &lt;/div&gt;
  &lt;/div&gt;

  &lt;/div&gt;

&lt;div class=&#34;td-card-group card-group p-0 mb-4&#34;&gt;
&lt;div class=&#34;td-card card border me-4&#34;&gt;
&lt;div class=&#34;card-header&#34;&gt;
      &lt;strong&gt;Clean Code and Refactoring&lt;/strong&gt;
    &lt;/div&gt;
&lt;div class=&#34;card-body&#34;&gt;
    &lt;p class=&#34;card-text&#34;&gt;
        &lt;p&gt;Successful products outlive their initial development teams and selected technologies.
We must implement approaches to ensure the source code and architecture provide a sound foundation for long-term support and product support.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a clean code culture and promote software craftsmanship&lt;/li&gt;
&lt;li&gt;Show how static analysis tools are a lifesaver to improve the quality of code&lt;/li&gt;
&lt;li&gt;Detect errors, vulnerabilities and smells&lt;/li&gt;
&lt;li&gt;Use refactoring patterns&lt;/li&gt;
&lt;li&gt;Establish test-driven development - TDD -&lt;/li&gt;
&lt;li&gt;Establish acceptance test-driven development - ATDD -&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
      &lt;/div&gt;
  &lt;/div&gt;

  &lt;div class=&#34;td-card card border me-4&#34;&gt;
&lt;div class=&#34;card-header&#34;&gt;
      &lt;strong&gt;DevOps&lt;/strong&gt;
    &lt;/div&gt;
&lt;div class=&#34;card-body&#34;&gt;
    &lt;p class=&#34;card-text&#34;&gt;
        &lt;p&gt;Lean approach encourages reducing cycle time.
DevOps provides an optimal approach to deliver rapidly and with high-quality applications in production.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You build it, you deploy it, you run it&lt;/li&gt;
&lt;li&gt;Optimise cycle time and lead time in your product development&lt;/li&gt;
&lt;li&gt;Institute configuration as code&lt;/li&gt;
&lt;li&gt;Implement continuous integration, delivery and deployment pipelines&lt;/li&gt;
&lt;li&gt;Establish automatic validation and verification&lt;/li&gt;
&lt;li&gt;Deploy tracing, logging and monitoring&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
      &lt;/div&gt;
  &lt;/div&gt;

  &lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Expertise: Agile Organizations</title>
      <link>https://blog.tangly.net/expertise/expertise-agile/agile-organizations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/expertise/expertise-agile/agile-organizations/</guid>
      <description>
        
        
        &lt;div class=&#34;td-card-group card-group p-0 mb-4&#34;&gt;
&lt;div class=&#34;td-card card border me-4&#34;&gt;
&lt;div class=&#34;card-header&#34;&gt;
      &lt;strong&gt;Digital Delivery&lt;/strong&gt;
    &lt;/div&gt;
&lt;div class=&#34;card-body&#34;&gt;
    &lt;p class=&#34;card-text&#34;&gt;
        &lt;p&gt;Our Scrum Masters and agile coaches help organizations develop a foundation of Scrum good practices and grow the internal expertise needed to become a true learning organization.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Teach Scrum, Kanban on the job&lt;/li&gt;
&lt;li&gt;Formulate a vision, a roadmap, a release plan and act on&lt;/li&gt;
&lt;li&gt;Create a team contract and definition of done DoD&lt;/li&gt;
&lt;li&gt;Continuously improve team effectiveness&lt;/li&gt;
&lt;li&gt;Growth your Scrum masters and product owners to high performers&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
      &lt;/div&gt;
  &lt;/div&gt;

  &lt;div class=&#34;td-card card border me-4&#34;&gt;
&lt;div class=&#34;card-header&#34;&gt;
      &lt;strong&gt;Agile Techniques&lt;/strong&gt;
    &lt;/div&gt;
&lt;div class=&#34;card-body&#34;&gt;
    &lt;p class=&#34;card-text&#34;&gt;
        &lt;p&gt;Expertly trained agile and Scrum teams are critical to your company’s business agility.
Our intensive workshops will help your agile teams become highly effective.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nurture high-performance teams&lt;/li&gt;
&lt;li&gt;Establish a DevOps culture&lt;/li&gt;
&lt;li&gt;Merge agile teams and software craftsmanship techniques&lt;/li&gt;
&lt;li&gt;Help your Scrum masters and product owners become talented change agents&lt;/li&gt;
&lt;li&gt;Define work approaches between agile teams and the organization&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
      &lt;/div&gt;
  &lt;/div&gt;

  &lt;/div&gt;

&lt;div class=&#34;td-card-group card-group p-0 mb-4&#34;&gt;
&lt;div class=&#34;td-card card border me-4&#34;&gt;
&lt;div class=&#34;card-header&#34;&gt;
      &lt;strong&gt;Scaling Agile&lt;/strong&gt;
    &lt;/div&gt;
&lt;div class=&#34;card-body&#34;&gt;
    &lt;p class=&#34;card-text&#34;&gt;
        &lt;p&gt;We accompany your organization to implement agile through the whole product development cycle.
Multiple agile teams develop and effectively deliver products.
Leadership teams learn how you deliver twice the work in half the time.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Identify efficient coordination ways between teams&lt;/li&gt;
&lt;li&gt;Install a requirement organization for multiple teams with the area product owner&lt;/li&gt;
&lt;li&gt;Deliver multi-team applications of high quality and often&lt;/li&gt;
&lt;li&gt;Promote a learning culture&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
      &lt;/div&gt;
  &lt;/div&gt;

  &lt;div class=&#34;td-card card border me-4&#34;&gt;
&lt;div class=&#34;card-header&#34;&gt;
      &lt;strong&gt;Agile Organizational Design&lt;/strong&gt;
    &lt;/div&gt;
&lt;div class=&#34;card-body&#34;&gt;
    &lt;p class=&#34;card-text&#34;&gt;
        &lt;p&gt;We help you design an agile process that fits your needs.
We focus on sharpening your vision and delivering quick changes that bring quick results.
We give you the support you need — but not more than you want.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Provide kick-off workshops&lt;/li&gt;
&lt;li&gt;Deliver role-based coaching&lt;/li&gt;
&lt;li&gt;Perform health checks&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
      &lt;/div&gt;
  &lt;/div&gt;

  &lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Docs: Release Notes</title>
      <link>https://blog.tangly.net/docs/ui/releasesnotes/</link>
      <pubDate>Sun, 30 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/docs/ui/releasesnotes/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_commons_ui_library_change_logs&#34;&gt;Commons UI Library Change Logs&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This document provides a high-level view of the changes introduced in Common UI library by release.
For a detailed view of what has changed, refer to the &lt;a href=&#34;https://bitbucket.org/tangly-team/tangly-os&#34;&gt;repository&lt;/a&gt; commits.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_0_2_7_2023_11_31&#34;&gt;0.2.7 (2023-11-31)&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Update of library dependencies, update to JDK-21, and modern Gradle approach to build solutions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_0_2_6_2021_08_31&#34;&gt;0.2.6 (2021-08-31)&lt;/h3&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Improvements&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CRM analytics are provided to have an analytics reporting of key indicators&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for localized invoice generation and support of CHF and EUR as currency&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upgrade to Vaadin 19&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Provides full run and debug mode through IntelliJ IDEA and gradle.
Removed all dependencies to maven.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Provides embedded Jetty standalone mode for production deployment&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_0_2_4_2020_06_30&#34;&gt;0.2.4 (2020-06-30)&lt;/h3&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Improvements&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Initial release of the library&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Ideas: Agile Architecture</title>
      <link>https://blog.tangly.net/ideas/agile-architecture/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/ideas/agile-architecture/</guid>
      <description>
        
        
        
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_agile_architecture_principles&#34;&gt;Agile Architecture Principles&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are applying the agile and lean approach to your software products development.
Your teams use &lt;a href=&#34;https://www.scrumguides.org/scrum-guide.html&#34;&gt;Scrum&lt;/a&gt; or &lt;a href=&#34;https://en.wikipedia.org/wiki/Kanban_(development)&#34;&gt;Kanban&lt;/a&gt; to deliver running software at least every two weeks.
The product launch is a tremendous success.
You will likely sell the solution for the next ten years.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;How shall you define and nurture the software architecture of your product and insure a long living and high-quality solution?
The experts tell you the design is emergent.
What does it mean?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are 10 types of people: those who understand binary, and those who do not.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Anonymous
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_less_architecture_observations&#34;&gt;LeSS Architecture Observations&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;em&gt;Large-Scaled Scrum&lt;/em&gt; &lt;a href=&#34;https://less.works&#34;&gt;LeSS&lt;/a&gt; authors have written quite a few interesting statements about software design and architecture.
Their opinionated observations are true for any software product.
It is irrelevant if the product was developed using agile approaches or traditional older ones.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;The sum of the source code is the &lt;strong&gt;true&lt;/strong&gt; design blueprint or software architecture.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The real software architecture evolves (better or worse) every day of the product, as people are &lt;strong&gt;programming&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The real living architecture needs to be grown every day through acts of programming by &lt;strong&gt;master programmers&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A software architect who is not in touch with the evolving source code of the product is out of touch with reality.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Every programmer is some kind of architect&lt;/strong&gt; — whether wanted or not.
Every act of programming is some kind of architectural act — good or bad, small or large, intended or not.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Agile architecture comes from the behavior of agile &lt;em&gt;architecting&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hands-on &lt;em&gt;master-programmer&lt;/em&gt; architects are key for resilient systems; avoid PowerPoint architects no writing any source code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A culture of &lt;em&gt;excellence&lt;/em&gt; in code and professionalism for the developers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An emphasis on &lt;em&gt;pair-programming&lt;/em&gt; coaching for high-quality code and design.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agile modeling design workshops using collaborative peer approaches.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Test-driven development&lt;/em&gt; and &lt;em&gt;refactoring&lt;/em&gt; &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#refactoring-2nd&#34;&gt;1&lt;/a&gt;]&lt;/span&gt; to continuously and aggressively remove technical debt.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And other &lt;em&gt;hands-on-the-code&lt;/em&gt; and &lt;em&gt;good practice&lt;/em&gt; behaviors.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These statements reflect the agile and modern approach to software design and architecture.
The &lt;a href=&#34;https://www.opengroup.org/&#34;&gt;Open Group&lt;/a&gt; also recognized these changes and is trying to modernize enterprise architecture approaches and their de facto standard &lt;a href=&#34;https://www.opengroup.org/togaf&#34;&gt;TOGAF&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Major agile companies such as Google, Twitter, Amazon, and Apple do not have a formal enterprise architecture organization.
They delegate most of the decisions to senior development teams.
&lt;a href=&#34;https://en.wikipedia.org/wiki/Community_of_practice&#34;&gt;Communities of practice&lt;/a&gt; are a tried and proven approach to align groups and disseminate knowledge.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_quality_of_your_architecture&#34;&gt;Quality of Your Architecture&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You shall measure the adequacy and quality of your design and create software artifacts.
Avoid opinions and collect empirical data.
The scientific approach is key for professionalism.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Use the findings to improve through small experiments.&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Static analysis tools: validate your source code against good practice rules,&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.sonarlint.org&#34;&gt;SonarLint&lt;/a&gt;, &lt;a href=&#34;https://sonarcloud.io&#34;&gt;SonarCloud&lt;/a&gt;, &lt;a href=&#34;https://spotbugs.github.io/&#34;&gt;Spotbugs&lt;/a&gt;, &lt;a href=&#34;https://pmd.github.io/&#34;&gt;PMD&lt;/a&gt;,
&lt;a href=&#34;https://checkstyle.sourceforge.io&#34;&gt;Checkstyle&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Test driven development: validate your design with TDD.&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://junit.org/junit5/&#34;&gt;Junit5&lt;/a&gt;, &lt;a href=&#34;https://joel-costigliola.github.io/assertj&#34;&gt;AssertJ&lt;/a&gt;, &lt;a href=&#34;https://site.mockito.org&#34;&gt;Mockito&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Acceptance test driven development - validate your functional requirements with ATDD -.&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://jbehave.org/&#34;&gt;JBehave&lt;/a&gt;, &lt;a href=&#34;https://www.tangly.net/&#34;&gt;tangly llc&lt;/a&gt; BDD&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fitness functions: validate your non-functional requirements automatically.&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Micro Profile, VisualVM, ELK&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pair programming: improve the produced artifacts through the wisdom of the crowd.&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;No tools&lt;/em&gt;, it is a practice&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pair review and pull requests: validate your developers&amp;#39; work.&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Github, GitLab, Bitbucket, IntelliJ IDEA Git Pull Support&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The above validation activities shall always be backed through tools and integrated in your continuous delivery pipeline.
Beware these tools can only detect non-quality and never provide a proof you achieved your expected quality.
Qualified and experienced engineers are your best guaranty to achieve and sustain high quality in architecture and software products.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implement the above measures to gather data and publish the actual state of your source code.
You find more advanced approaches in &lt;a href=&#34;https://tangly-blog.blogspot.com/2019/04/code-scene-as-crime-scene.html&#34;&gt;Code Scene as Crime Scene&lt;/a&gt;,
&lt;a href=&#34;https://tangly-blog.blogspot.com/2018/05/sonar-lint-for-impatient.html&#34;&gt;SonarLint for the Impatient&lt;/a&gt;, and &lt;a href=&#34;https://tangly-blog.blogspot.com/2018/04/pragmatic-craftsmanship-professional.html&#34;&gt;Pragmatic Craftsmanship&lt;/a&gt; articles.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Read the &lt;a href=&#34;https://less.works/less/technical-excellence/architecture-design.html&#34;&gt;LeSS architecture page&lt;/a&gt; for a comprehensive discussion of agile architecting.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_good_versus_bad_architecture&#34;&gt;Good versus bad architecture&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A good architecture fulfills the functional and non-functional specifications and is easy to modify.
It shall emerge during the development of releases and intentionally implement the known requirements.
Your architects are talented developers and are full members of your Scrum teams.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock kroki&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://kroki.io/plantuml/svg/eNqFU8tu2zAQvPsr9hS0sIQCBXqPIqaBXRsxIjdtjzS1kgjzVT4c-O-7IuvEaA4FBGm4S-7OzIq3IXIftTS95m6xhGaUCqHxYpIRRUweF8vXqHPecjFhoNgSOuGTzmiDXZfBN24O3GSIP6NHjbDzdvRcU4exnLJDfOEeofV8iEFzEybpcuqZq4TQ0Tmu5xbQKuQGWtsj3PzL6UKqtdpZgyYCwyDH0vwJBy6i9ZemGxy5OEN3DhF1Yc-s5tIA8_KE9METKus01XnTy6xIc4RHaUvdhj0VEXNMwA88BKKUQ2t-4nQg4zvGYLD-XYH5nOm57_9PgdL3p1lVRzJezdttVyVHoG7aXQ7uHx-ar4u6hi0neR5-2eRhj2Iy8neiWdWUalefWkZPXjR7VsDl--bzvKyv7YMXGSdYsfu8kTg-ulA2rczgqaFPeSLAw1WB1pJoaYgMQ6fsOYvKGZqx7LMfQFbAM3o5SFEMqvOOrTXy7-hKoEm9jGX5XqJVdjzPvoojfJhn8HFRyEVUSq5n5k2OrL9TWfhSUX1xpAbwuYImBPRxnfOds_EujaGiP9Rwv5Hk_U3BrbKpr8hzVkE7oTiGeFZZKTzIWM2vKR0quJPxkMQR4xUEJx0qsiIsbpEuWblofwDCYRZt&#34; alt=&#34;agile-architecture-mindmap&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The key for professional software development is good teams.
Your development team members are&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Expert in the used programming languages and technology stacks,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Understand object-oriented, functional and rule-based programming.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Known all major patterns and idioms of the used development stack.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Practice &lt;a href=&#34;https://en.wikipedia.org/wiki/Test-driven_development&#34;&gt;TDD&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Acceptance_test%E2%80%93driven_development&#34;&gt;ATDD&lt;/a&gt;, clean code, refactoring.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Embrace continuous integration &lt;em&gt;CI&lt;/em&gt;, continuous delivery &lt;em&gt;CD&lt;/em&gt;, continuous development &lt;em&gt;CD&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Automate everything and establish DevOps.&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.jenkins.io/&#34;&gt;Jenkins&lt;/a&gt;, &lt;a href=&#34;https://bitbucket.org/product/features/pipelines&#34;&gt;bitbucket pipeline&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Study source code from open source projects to learn better ways.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know &lt;a href=&#34;https://en.wikipedia.org/wiki/SMART_criteria&#34;&gt;SMART&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/INVEST_(mnemonic)&#34;&gt;INVEST&lt;/a&gt;, &lt;a href=&#34;https://de.wikipedia.org/wiki/Solid_(Software)&#34;&gt;SOLID&lt;/a&gt;,
&lt;a href=&#34;https://en.wikipedia.org/wiki/KISS_principle&#34;&gt;KISS&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it&#34;&gt;YAGNI&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hold weekly design workshops with &lt;em&gt;huge&lt;/em&gt; whiteboards.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use domain driven design &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#domain-driven-design&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;#domain-driven-design-distilled&#34;&gt;3&lt;/a&gt;, &lt;a href=&#34;#implementing-domain-driven-design&#34;&gt;4&lt;/a&gt;]&lt;/span&gt; and event storming.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avoid &lt;a href=&#34;https://en.wikipedia.org/wiki/Big_Design_Up_Front&#34;&gt;BDUF&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You shall keep it simple, make it valuable, and build it piece by piece.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The above hints and practices shall empower your teams to practice successfully agile architecture and timely deliver delightful software solutions.
Your organization shall train your collaborators, see also &lt;a href=&#34;https://martinfowler.com/bliki/ShuHaRi.html&#34;&gt;Shu Ha Ri&lt;/a&gt; model.
Smart money goes in training your collaborators.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_agile_code_is_clean_code&#34;&gt;Agile Code is Clean Code&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are applying the agile and lean approach to your software product development.
Your teams use Scrum or Kanban to deliver running software at least every two weeks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To create an agile architecture, you must write worthy agile code.
Agile code is always &lt;strong&gt;clean code&lt;/strong&gt;.
Never compromise on your key strategic asset, the source code of your product.
Your source code and your data are strategic advantages for your company.
Start early writing clean code, do it continuously and soon your code will be clean, legible and free of defects.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_architecture_versus_code&#34;&gt;Architecture versus Code&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Be honest.
Having a huge class with thousands of lines plainly demonstrates that your organization worked unprofessionally over months in the past.
Such monsters are not born over a night coding session or a weekend hack session.
It takes time and unwavering incompetence to create such maintenance nightmares.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And as long as your product contains such code monsters, it is worthless to pretend to have a nice and thought through architecture.
Team discipline and early warning systems are the key to avoiding such blunders and killing the monster in the egg.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_clean_code_and_refactoring&#34;&gt;Clean Code and Refactoring&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The clean code test driven development TDD approach to write code was defined last millennium.
Professional developers adopted long ago this approach to deliver high quality, legible and maintainable code artifacts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Always leave the code you are editing a little better than you found it.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Robert C. Martin
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/tdd-cycle.png&#34; alt=&#34;TDD cycle&#34; width=&#34;500&#34; height=&#34;700&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong class=&#34;red&#34;&gt;Red&lt;/strong&gt; - Write a test and run it, validating the test harness.
&lt;em&gt;I recommend acceptance tests and unit tests&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong class=&#34;green&#34;&gt;Green&lt;/strong&gt; - Write the minimum amount of code to implement the functionality validated in the previously developed test.
Update the code and run the tests until the test suite shows successful execution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong class=&#34;teal&#34;&gt;Refactor&lt;/strong&gt; the code to reach clean code level.
&lt;em&gt;Use static analysis tools to achieve faster and better success&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Continuously run the tests for guaranty compliant changes.
So you avoid any regression problem.
Good practice is to integrate the test suite execution in a continuous integration pipeline.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you are a Java developer, you will:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use JUnit 5 and Mockito 2 to implement the first step.
Evaluate AssertJ to write more legible conditions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use a powerful IDE such an IntelliJ IDEA to write and enhance functional code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use tools such as SonarLint, Jacoco, Spotbugs, ArchUnit to refactor your functional code and test cases.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clean code applies to productive and test code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The described approach has good practice since the beginning of this millennium.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock caution&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-caution&#34; title=&#34;Caution&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;JUnit 4 is &lt;strong&gt;obsolete&lt;/strong&gt;.
Stop writing unit tests with JUnit 4. Junit 5 was released in 2017 and provides modern features and is the official and undisputed successor of JUnit 4.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All above mentioned tools are open source and free to use.
Your organization has no excuse to write crap code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Just write well engineered, legible and maintainable source code.
It is a matter of discipline.
It is also a prerequisite to agile architecture.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock important&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-important&#34; title=&#34;Important&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You as a developer have no excuse to write crap code.
You are a professional developer, behave like one.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Slaves are not allowed to say no.
Laborers may be hesitant to say no.
But professionals are expected to say no.
Indeed, good managers crave someone who has the guts to say no.
It’s the only way you can really get anything done.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Robert C. Martin&lt;br/&gt;
&lt;cite&gt;The Clean Coder: A Code of Conduct for Professional Programmers&lt;/cite&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_acceptance_test_driven_development&#34;&gt;Acceptance Test Driven Development&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;How do you know what are the requirements of a specific feature?
Either write a huge amount of outdated documentation or find a better way.
The better way is acceptance test driven development ATDD.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For each feature, you need acceptance criteria; this approach is also called specification by example.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For each acceptance criteria write an acceptance test which is executed each time the application is updated in the continuous delivery pipeline.
Therefore, the acceptance tests are the living documentation of the product behavior.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The cost of automating acceptance tests is so small in comparison to the cost of executing manual test plans that it makes no economic sense to write scripts for humans to execute.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Robert C. Martin&lt;br/&gt;
&lt;cite&gt;The Clean Coder: A Code of Conduct for Professional Programmers&lt;/cite&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To implement this approach, you need:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Acceptance criteria formulated for each functionality.
It implies &lt;a href=&#34;https://en.wikipedia.org/wiki/Specification_by_example&#34;&gt;specifications by example&lt;/a&gt; – you need to train your business analysts and article owners.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cucumber for Java (or equivalent tools) – to write acceptance tests.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mock all external systems and the database – to have fast building and test time and avoid external dependencies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A continuous build and delivery pipeline to automatically run your acceptance validation tests upon each application change,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avoid user interface tests – because they are slow and brittle.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use an in-memory database only if you have to – they are a fast solution to write acceptance tests but are intrinsically slower than mocks.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock caution&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-caution&#34; title=&#34;Caution&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Never access file on the disk or use a database writing to a disk inside tests.
This approach is way too slow and destroy fast continuous integration cycles.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can put your file system is memory with &lt;a href=&#34;https://github.com/google/jimfs&#34;&gt;jimfs&lt;/a&gt;.
Use for example &lt;a href=&#34;http://hsqldb.org/&#34;&gt;hsqldb&lt;/a&gt; for the in-memory database and &lt;a href=&#34;https://flywaydb.org/&#34;&gt;flywaydb&lt;/a&gt; to set up the database tables.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_code_sociology&#34;&gt;Code Sociology&lt;/h3&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Any fool can write a code that a computer can understand.
Good programmers write code that humans can understand.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Martin Fowler
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Simple engineering practices are the most powerful ones.
Practice consolidates changes in behavior of your development organization.
Exercising new approaches enforces culture change and implicit modify the organization approaches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pair Programming - is a training on the job and crowd wisdom approach to steadily improving knowledge and quality.
*TDD and ATDD - are safety net to guaranty quality attributes in your source code\.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DevOps starting with git, docker, continuous integration, delivery and deployment – to speed up development and eliminate tedious manual errors.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lack of accountability equates to lack of trust. — your teams are accountable for the quality of your product, and you should trust them.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Culture change is often necessary.
Autonomy and accountability are harsh mistresses.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What would happen if you allowed a bug to slip through a module, and it cost your company $10,000? The nonprofessional would shrug his shoulders, say “stuff happens,” and start writing the next module.
The professional would write the company a check for $10,000!”&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Robert C. Martin&lt;br/&gt;
&lt;cite&gt;The Clean Coder: A Code of Conduct for Professional Programmers&lt;/cite&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once good practices are established, you can move to more sophisticated tools, such as git history code analysis – to uncover weaknesses in your development department.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Teams ready to learn from the like of Google could evaluate &lt;a href=&#34;https://trunkbaseddevelopment.com/&#34;&gt;Trunk Based Development&lt;/a&gt; and consider long-lived branches as waste.
An extensive description of the advantages can be found in the article &lt;a href=&#34;https://martinfowler.com/articles/branching-patterns.html&#34;&gt;branching patterns&lt;/a&gt;
from Martin Fowler.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_code_review&#34;&gt;Code Review&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A code review can be done in different ways.
Many teams use GitHub, Bitbucket or GitLab.
A very common approach for code reviews is pull requests.
However, there are situations where pull requests are not necessary.
Different approaches are more cost-effective and have better cycle time.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/what-the-fuck.png&#34; alt=&#34;What the fuck&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For example, if a feature is implemented through pair programming or mob programming it is a fact that the code is already reviewed while it is written.
We decided that it does not have to be reviewed again, but, of course, everybody may look at the commits later on in GitHub and add comments.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As a rule of thumb we agreed that every line of code has to be approved by at least one other developer before it is pushed into our master branch.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_pull_requests_in_trunk_based_development&#34;&gt;Pull Requests in Trunk-Based Development&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In trunk-based development it is different.
Since we want to merge our commits into the master branch as quickly as possible, we cannot wait until the complete feature is finished.
Unlike in the original trunk based development approach we still use feature branches, but we have much less divergence from the master branch than in Git Flow.
We create a pull request as soon as the first commit is pushed into the feature branch.
Of course that requires that no commit breaks anything or causes tests to fail.
Remember that unfinished features can always be disabled with feature toggles.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now, with part of the new feature committed and the pull request created, another developer from the team can review it.
In most cases, that does not happen immediately because the developers don’t want to interrupt their work every time a team member pushes a commit.
Instead, the code reviews are done when another developer is open for it.
Meanwhile, the pull request might grow by a few commits.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The code is not always reviewed immediately after the commit but in most cases it reaches the master branch much quicker than in Git Flow.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_agile_architecture_within_scrum&#34;&gt;Agile Architecture within Scrum&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are applying the agile, lean approach to your software product development.
Your teams use Scrum or Kanban to deliver running software every two weeks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Agile architecture is a key element to improve the quality of your product and reduce cycle time of your application outcomes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Your journey toward greater business agility starts by identifying what outcomes are most important to your company’s success.
A key component is to find out how to create great architecture within the Scrum framework.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_what_is_agile_architecture&#34;&gt;What Is Agile Architecture?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;An agile architecture shall have four characteristics.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Allow change quickly&lt;/em&gt; - because we cannot foreseen the future -.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Always verifiable&lt;/em&gt; - because we want changes without impeding integrity -.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Support rapid development&lt;/em&gt; - because we want effective and efficient implementation of new features.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Always working&lt;/em&gt; - because we want continuous deployment to have customers&amp;#39; feedback - These characteristics are essential for successful agile development of great software products.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_what_is_the_scrum_approach&#34;&gt;What Is The Scrum Approach?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Scrum is silent how architecture shall be performed during sprints.
We can use the Scrum values, the &lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum guide&lt;/a&gt; and the &lt;a href=&#34;https://agilemanifesto.org/&#34;&gt;agile manifesto&lt;/a&gt;.
Do not forget the &lt;a href=&#34;https://agilemanifesto.org/principles.html&#34;&gt;agile manifesto twelve principles&lt;/a&gt; to infer how to apply agile architecture.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The architect shall be part of the Scrum development team.
This is the most embedded way an architect would fit into a Scrum team.
It may not even be an individual who has the title of an architect.
The big idea behind Scrum teams is that team members have different skills.
Their roles may change to deliver what is required for a particular sprint.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So it could be that senior developers within the team got architecture skills, or are in the best position, or have the best knowledge, to make those architectural decisions.
Those team members with architectural skills are involved in the sprint on a day-to-day basis.
They attend the daily Scrum meetings, take items off the backlog, and work on them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Interestingly &lt;a href=&#34;https://less.works/&#34;&gt;LeSS&lt;/a&gt; is more opinionated and describe successful approaches for agile architecture and design.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_how_do_you_perform_agile_design&#34;&gt;How Do You Perform Agile Design?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Scrum is silent about technical practices.
The Scrum fathers and community strongly emphasize adopting eXtreme Programming practices.
For bigger systems, use the good practices described in LeSS.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;An actual very good practice is to use event storming and domain driven design to model the application domain and partition the system.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Use fitness functions to monitor and validate continuously all non-functional requirements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The well-established practices from the object-oriented and DevOps communities are&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Develop very early a working skeleton.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clean architecture implies clean code and requires clean coders in your team (see our post-clean code).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Aggressive refactoring and understand technical debt.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Continuous integration, continuous delivery, and continuous deployment.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For a detailed discussion, consult the post link.././blog/2018/pragmatic-craftsmanship-professional-software-developer/[Pragmatic Craftsmanship].&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_what_is_the_architect_role&#34;&gt;What is the Architect Role?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The architect shall&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Be part of the team, work daily with team members and attend all team events.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Maintain the pace of development.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Often and early communicate as a coach and mentor – we mean pair programming and design sessions -.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be fluent in the domain driven development, hexagonal architecture, refactoring, and clean code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use architecture design record ADR and light documentation to describe architecture decisions - meaning no lengthy Software Architecture Document SAD or overwhelming UML models -.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be a master programmer and writes code in the application technological stack.
He writes actual source code as current good practices are.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Have rich knowledge of architecture and design.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Engineering is the application of an empirical scientific approach to finding efficient solutions to practical problems.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Dave Farley
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We have mentioned refactoring, which is how we evolve an ever-improving design and architecture while building the product incrementally.
To do that, we need to know the difference between good architecture and design and not-so-good.
We need a rich pool of architecture and design options in our bag of tricks, ranging from very simple options to the more complex and rich options that we may need as the system grows.
One never knows too much about the quality of architecture, code, and design.
One does, of course, need to apply that knowledge smoothly, incrementally, little by little.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_agile_component_design&#34;&gt;Agile Component Design&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are responsible to create or modify a component in your current application.
This is a &lt;strong&gt;design&lt;/strong&gt; activity.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;How can you create a good, legible, maintainable component architecture?
How can you validate your functional and non-functional requirements?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Yes, you are right.
You are responsible for &lt;strong&gt;architecture decisions&lt;/strong&gt; at component or subsystem level.
Below a set of tools to improve the quality of your design.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_design_approaches&#34;&gt;Design Approaches&lt;/h3&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_patterns_and_idioms&#34;&gt;Patterns and Idioms&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The pattern movement was started last millennium.
Very talented and experienced developers have documented how to solve common problems elegantly and effectively.
Depending on the programming language, you are using different idioms are preferred.
The way to solve the same problem is different in Java, Scala, C++, Python or C#.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You should know all regular structural, behavioral and creational patterns.
Explore your programming language and discover how idioms and patterns have evolved between major releases.
For example, lambda expressions and streams introduced in Java 8 - &lt;em&gt;released Spring 2014&lt;/em&gt; - completely transform the solution for regular business logic.
Records introduced in Java 14 - &lt;em&gt;released Spring 2020&lt;/em&gt; - have a huge impact how your architecture deals with data transfer objects – DTO – and immutability.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_read_open_source_code&#34;&gt;Read Open Source Code&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Stop inventing the wheel again and again.
Avoid &lt;a href=&#34;https://en.wikipedia.org/wiki/Not_invented_here&#34;&gt;Not Invented Here&lt;/a&gt; &lt;em&gt;NIH&lt;/em&gt; syndrome.
Your current problem was already solved multiple times.
Explore open source solutions, read posts, study books.
elect the most adequate solution and fill free to improve it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Instead of searching for a solution for days, post your question on an adequate forum or on &lt;a href=&#34;https://stackoverflow.com/&#34;&gt;Stack Overflow&lt;/a&gt;.
Again fill free to improve the suggested solutions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Become more efficient and use the wisdom of all these developers accessible through the Internet.
Always verify the quality and adequacy of their proposed solution.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_java_standard_api&#34;&gt;Java Standard API&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Know your programming language and the huge associated standard libraries part of your technology stack.
Wisdom is coded in this code.
Standard patterns are implemented in almost all packages.
Idioms are encoded everywhere.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;See how Java deals with human and machine time with &lt;a href=&#34;https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/time/package-summary.html&#34;&gt;java.time&lt;/a&gt; package.
Decades of trials and errors were needed to finally create a balanced and simple to use time abstractions.
All these decisions and learnings are encoded in this code.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_clean_architecture&#34;&gt;Clean Architecture&lt;/h3&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_clean_code&#34;&gt;Clean Code&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You want to create a clean and resilient architecture you are proud of.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/cruft-vs-refactoring.png&#34; alt=&#34;Cruft vs Refactoring&#34; width=&#34;500&#34; height=&#34;1000&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You must first write clean code.
Clean architecture build up on clean code.
Promote, support, teach clean code in your agile team.
Agile code is clean code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Do not fall to the fallacy to draw beautiful and useless UML diagram and write thick software architecture documents.
The real architecture is hidden in the source code of your article.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You still document all major design decisions and should use UML to enlighten important architecture decisions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_know_your_language&#34;&gt;Know Your Language&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you are developing in Java, you should use the current features of the programming language.
You use Java 14 for example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Try with resources and closeable resources&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Immutable collections&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Streams, optionals, filters, and collectors&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Predicates and functions to define lambda expressions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Records and immutability for objects&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pattern matching syntactic sugar as for instanceof operator&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Switch expressions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Text strings&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Recognize technical refactoring is necessary to integrate new concepts and approaches.
Development stacks such as Java, Java Script/Type Script or .NET C# introduce every year new constructs.
They simplify code, reduce boilerplate or solve elegantly known design problems.
A good example is the support of immutable objects at language level.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_aggressive_refactoring&#34;&gt;Aggressive Refactoring&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The entropy of the source code increases over time.
Only continuous and aggressive refactoring mitigates the degenerescence of your application.
Study the &lt;a href=&#34;https://refactoring.com/catalog/&#34;&gt;refactoring catalog&lt;/a&gt; and apply daily to your source code.
Each time you correct an error or add a new functionality refactor your code.
Remove smells, compiler warnings and migrate older code to use newer and better features of your programming language.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_acceptance_test_driven_development_2&#34;&gt;Acceptance Test Driven Development&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Your users want a working application.
Write acceptance tests insuring all relevant functions are tested through your continuous integration pipeline.
Therefore you guarantee your users the application behaves as specified.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_test_driven_development&#34;&gt;Test Driven Development&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Testability and changeability of your application are architectural aspects.
You must have a way to verify these non-functional requirements.
Test driven development is a proven approach to fulfill these requirements and validate them continuously.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_continuous_integration&#34;&gt;Continuous Integration&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Continuous integration and delivery are the mechanisms to continuously validate and verify all functional and non-functional requirements are correctly implemented.
You guarantee your users and customers that any software delivery they get is compliant and correct.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Each time you find a discrepancy add an additional test validating the requirement behind this fault.
Therefore the same error will never happen again.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_good_practices&#34;&gt;Good Practices&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Publish your components on a central repository such as Maven Central.
Your users have easy and standardized access to your components and their latest version.
Build tools such as Gradle and Maven or IDE such as IntelliJ IDEA fetch transparently the components.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Javadoc is the standard and hugely helpful approach to document classes and component public interfaces in Java.
Similar tools exist for other programming languages.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Architecture design records provide hints why specific design decisions were chosen.
Your users can better understand the path you follow and the selected tradeoffs.
They do not have to agree, but they can understand the arguments why you choose so.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Static code generator is an actual good practice to provide the current documentation and tutorials for your components.
We write all our documentation in the asciidoc format - including plantUML and highlighted source code - and generate our website using hugo tool suite.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Start small and improve your approach every day.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_legacy_system_refactoring&#34;&gt;Legacy System Refactoring&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image left&#34;&gt;&lt;img src=&#34;../pics/architecture-approaches.png&#34; alt=&#34;architecture-approaches&#34; width=&#34;500&#34; height=&#34;1000&#34;/&gt;&lt;/span&gt;
With refactoring you can take a bad design, even chaos software, and rework it into well-designed code.
Most often it is cheaper refactoring a legacy application instead of rewriting it from scratch.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Each refactoring step is simple, even simplistic.
Yet the cumulative effect of these small changes can radically improve the design.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Martin Fowler
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_approach&#34;&gt;Approach&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For a developer new to a legacy software article, it is often hard to understand the existing application, determine the extent of source code and architectural decay, and identify smells and metric violations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Legacy applications are often critical to the business and have been in use for years, sometimes decades.
Since the business is evolving, there is constant pressure to support additional requirements.
However, changing these applications is difficult.
You end up spending an increasing number of resources maintaining the software.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Most dependencies in software development are not physical but knowledge-related and can be eliminated through broadening people’s knowledge.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Vas Bodde
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are many reasons why maintaining legacy software is a difficult problem.
Often, most, if not all, of the original developers are gone, and no one understands how the application is implemented.
The technologies used in the application are no longer current, having been replaced by newer and more exciting technologies.
Also, software complexity increases as it evolves over time as you add new requirements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The key to managing the lifecycle of software is to continuously work as a professional and skilled developer.
A professional engineer opportunistically refactor each time he modifies source code.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_understand_your_product&#34;&gt;Understand Your Product&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Understand how it is used.
These scenarios are the acceptance tests you need to start creating a set of automated validation criteria.
And you will better understand how your users are working with your article.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Understand how it is deployed.
You need a reproducible and in the long run automated process to deploy a new version of your article.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Understand how it is build.
You need a reproducible and automated building process.
This process must be integrated into a continuous integration and delivery pipeline.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Understand how it is structured.
You need a tentative architecture description to start refactoring and to untangle this big ball of mud into a more modular solution.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_refactor_your_product&#34;&gt;Refactor Your Product&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Refactoring is always a successful activity.
You cannot fail.
But you need discipline, continuous involvement, and measurement.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/reuse-categories.png&#34; alt=&#34;reuse-categories&#34; width=&#34;500&#34; height=&#34;1000&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you are new to refactoring it is worth having a coach to smooth the learning curve.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Extract one big service, refactor, test, and deploy.
Iterate.
If you are not successful, discard your failure and checkout the working version of git.
You should have learnt enough so that the next try will be successful.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Refactor code.
Use static analysis tools to detect the flaws in your source code.
You should only improve live code, meaning code you must correct or extend.
See Agile Code is Clean Code.
&lt;em&gt;Use a modern IDE to automate the smaller refactoring steps, and avoid spurious errors&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Resolve design issues.
Your senior design specialists already know them.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Increase code coverage.
Code coverage is the security net when you are refactoring code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Slowly add fitness functions to continuously validate your non-functional requirements.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Beware of good practices how to write good software products and refactor successfully applications&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Move to Domain Driven Design as an architecture approach.
It works either for micro architecture or for modular monolith approaches.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Master long live domain driven design and event storming&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Master your technical stack and use current tools and libraries&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Modularize one big service extraction one after the other&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avoid using dead architectural techniques.
TOGAF, UML, PMI, CMMI are obsolete - various activities they recommend are good, do them in your sprints.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avoid lengthy, slow and expensive review approach.
ATAM is dead.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The quality tree technique is superb, use fitness functions to implement your quality tree.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you are running legacy technology, this not only becomes a threat to your business but also to your hiring and employer branding efforts.
As fewer and fewer programmers and operation managers will have the knowledge of those systems, you’ll face a dwindling talent pool.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_ameliorate_your_process&#34;&gt;Ameliorate Your Process&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Applications do not degrade to legacy or geriatric systems overnight.
The organization and development group failed to work professionally over years before the article is doomed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You must establish a culture of professional software development.
Professional software developers write code which is maintainable and legible.
Only unprofessional organizations create legacy applications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Embrace software craftsmanship.
All your developers should have formal training and regular training in new approaches and techniques.
They read regularly books.
Is it not that you expect from your physician or the pilot of the plane you are taking?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_how_agile_collaborators_learn&#34;&gt;How Agile Collaborators Learn&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Most products are developed by a team, and these achievements are the fruit of teamwork.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Software article development is now agile, and most often uses the Scrum approach.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Just putting a bunch of people together will not produce a high-performance agile team.
Quite a few companies find that out the hard way.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;How can you increase the odds to create an environment where agile teams bloom and perform?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_attitude_versus_aptitudes&#34;&gt;Attitude versus Aptitudes&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Your business is nothing more than the collective energy and efforts of the people working with and for you.
If you want to make your business better, invest in your people.
They’ll get the job done.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Learn and pass on development good practices through pair programming and coding dojos.
Promote communities of practice.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It is not enough that management commit themselves to quality and productivity.
They must know what it is they must do.
Such a responsibility cannot be delegated — W. Edwards Deming&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You have hired good people.
Train them to improve and perform better.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_continuous_learning&#34;&gt;Continuous Learning&lt;/h3&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CFO to CEO: “What happens if we invest in developing our people and they leave us?”&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CEO to CFO: “What happens if we don’t, and they stay?”&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Peter Baeklund
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Secure collective knowledge of the code through code reviews, by pair or collectively.
Avoid any developer working on his own on a specific piece of code.
Encourage your collaborators to write blogs and ask questions in forums such as Stack Overflow.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Establish together development standards and keep them up to date.
Nurture these good practices through communities of practice.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Rely on tools such as continuous integration, static metrics and architecture fitness functions to shorten the feedback loop.
See our post about pragmatic software craftsmanship.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Establish a culture to use current versions of programming languages, tools and libraries.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For instance, on a previous product, we had planned a coding dojo ritual once every two weeks, during which we shared our practices with some perspective over the product.
It was an occasion to experiment new technologies, assess their match for the product needs, share new coding techniques, and update our standards together.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_formal_training&#34;&gt;Formal Training&lt;/h3&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I am not a great programmer; I am just a good programmer with great habits.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Martin Fowler&lt;br/&gt;
&lt;cite&gt;Refactoring: Improving the Design of Existing Code&lt;/cite&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Professional software developers should have formal training in software development.
You should expect from a person working forty hours a week for the next forty years to pursue a bachelor or a master in computer science.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You should expect regular certifications in the used technology stacks or development approaches.
A Scrum master two days training does not make somebody an expert; but a specialist refusing to invest in a two-day training is probably not a member you want in a high performing team.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A professional engineer should read multiple technical books every year.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_leadership_responsibilities&#34;&gt;Leadership Responsibilities&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Leaders shall create psychological safety in the workplace.
And please &lt;em&gt;Walk the Talk&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Low levels of psychological safety can create a culture of silence.
They can also create a Cassandra culture – an environment in which speaking up is belittled and warnings go unheeded.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Amy C Edmondson&lt;br/&gt;
&lt;cite&gt;The Fearless Organization: Creating Psychological Safety in the Workplace for Learning&lt;/cite&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The major responsibility of senior management is&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hire and on-board collaborators&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nurture, retain and develop collaborators&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Respectfully off-board departing collaborators&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Move collaborators to the learning zone and let them thrive.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Nurture a culture of learning through training on the job, learning from external sources - such as reading high-quality blogs – and formal education - such as bachelor or master courses, for example, agile architecture -.
Learning means trying and failing.
Your culture should embrace small-scale failure to accelerate learning.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Please reflect how you encourage continuous learning in your organization.
Consider the following statements:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Is training always an investment and never a cost point?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do you budget and account training activities over the year?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do you consistently reach your learning goals?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Are they really investment positions in your budget?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_pragmatic_software_craftsmanship&#34;&gt;Pragmatic Software Craftsmanship&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The last months I was often confronted with software products having insufficient quality.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Insufficient means late delivery, and few new features but quite a few errors.
The effort to correct errors in the field eats away 30% to 50% from the whole development budget.
How can such a dreadful situation occur?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One root cause is the low quality of the source code and ignorance of basic coding design approaches.
We are not talking about complex design activities or complex patterns; we are discussing basic approaches how to write correct and maintainable code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_master_your_technology_stack&#34;&gt;Master Your Technology Stack&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Most of the programmers have no formal training in the technology stack they are using daily.
Their best friend is the Internet.
Copy and paste from Stackoverflow is a saver.
And therefore, many agile projects are now, steadily and iteratively producing mediocre software.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You shall be a proud software craftsman.
You shall work as a professional and deliver professional results.
I recommend any Java developer to&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Have formal training in the Java language and library.
For example, you should consider a Java Programmer certification for the current JDK you are working daily with.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn the new features in Java e.g. Streams, Lambdas, Reactive Programming, LocalDate, Modules, packaging with &lt;em&gt;jlink&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Read and understand &lt;em&gt;Effective Java&lt;/em&gt; &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#effective-java-3rd&#34;&gt;5&lt;/a&gt;]&lt;/span&gt; from Joshua Bloch.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Read and understand &lt;em&gt;Clean Code&lt;/em&gt; &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#clean-code&#34;&gt;6&lt;/a&gt;]&lt;/span&gt;, &lt;em&gt;Clean Coder&lt;/em&gt; &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#clean-coder&#34;&gt;7&lt;/a&gt;]&lt;/span&gt;, &lt;em&gt;Clean Architecture&lt;/em&gt; &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#clean-architecture&#34;&gt;8&lt;/a&gt;]&lt;/span&gt;, &lt;em&gt;Clean Agile&lt;/em&gt; &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#clean-agile&#34;&gt;9&lt;/a&gt;]&lt;/span&gt;,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Read and understand &lt;em&gt;Refactoring&lt;/em&gt; &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#refactoring-2nd&#34;&gt;1&lt;/a&gt;]&lt;/span&gt; from Martin Fowler, And read Refactoring not on the backlog post from Ron Jeffries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn modern practices such as logging with slf4j, TDD with JUnit5, Mockito and AssertJ, ATDD with Cucumber, Lean DevOps. continuous integration, continuous delivery, continuous deployment, monitoring.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be aware of famous Java libraries such as Guava, Apache Commons, Use SonarQube - and the SonarLint plugin for your preferred IDE – to catch well-known weaknesses in your source code and improve your coding skills.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A software developer not knowing the above items is almost certainly not a professional person, just a more or less talented amateur.
See the blog of Mike Cohn, &lt;a href=&#34;https://www.mountaingoatsoftware.com/blog/the-difference-between-a-professional-and-an-amateur&#34;&gt;the difference between a
professional and an amateur&lt;/a&gt; for a similar point of view.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can find a more extensive &lt;a href=&#34;https://www.tangly.net/insights/books&#34;&gt;list of books&lt;/a&gt; on &lt;a href=&#34;https://www.tangly.net/&#34;&gt;tangly llc&lt;/a&gt; website&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_improve_continuously&#34;&gt;Improve Continuously&lt;/h3&gt;
&lt;div class=&#34;admonitionblock important&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-important&#34; title=&#34;Important&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You shall strive for mastery.
The feeling you reached mastery level is truly awesome.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Read a technical book each quarter,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn a new language or framework every two years.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Read books such as &lt;em&gt;The Software Craftsman&lt;/em&gt; &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#software-craftsman&#34;&gt;10&lt;/a&gt;]&lt;/span&gt;, &lt;em&gt;Refactoring&lt;/em&gt; &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#refactoring-2nd&#34;&gt;1&lt;/a&gt;]&lt;/span&gt;, &lt;em&gt;Agile Code&lt;/em&gt; &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#clean-code&#34;&gt;6&lt;/a&gt;]&lt;/span&gt;, &lt;em&gt;Agile Coder&lt;/em&gt; &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#clean-coder&#34;&gt;7&lt;/a&gt;]&lt;/span&gt;
&lt;em&gt;Clean Architecture&lt;/em&gt; &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#clean-architecture&#34;&gt;8&lt;/a&gt;]&lt;/span&gt;, &lt;em&gt;Clean Agile&lt;/em&gt; &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#clean-agile&#34;&gt;9&lt;/a&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know approaches such eXtreme Programming.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Work with Scrum, Kanban, LeSS - Agile approaches are definitively state of the industry techniques -.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Master container approaches with Docker - containers are here to stay and will replace virtual machines -.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Technical leaders teach during coding dojos and pair programming sessions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You shall write good enough software without errors and using best practices of the industry.
If not consider changing your profession.
See my blog post about &lt;a href=&#34;../../blog/2022/technical-debt/&#34;&gt;technical debt&lt;/a&gt; discussing the consequences of missing mastery.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_software_craftsmanship&#34;&gt;Software Craftsmanship&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Software craftsmanship is an initiative to improve the professionalism of software developers.
You do not have to agree with them, just look what they are doing.
For a detailed discussion read for example the book The Software Craftsman: Professionalism, Pragmatism, Pride by Sandro Mancuso &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#software-craftsman&#34;&gt;10&lt;/a&gt;]&lt;/span&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Don’t discuss practices, discuss value.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Their manifesto is&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Craftsmanship is not enough to guarantee the success of a product, but the lack of it can be the main cause of its failure.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agile and Craftsmanship complement each other and both are necessary.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agile processes assumes technical excellence and a professional attitude.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Software craftsmanship takes technical excellence and professionalism to a whole new level.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Take everything you read with a grain of salt.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Software craftsmanship&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Is not a church, trying to convert all developers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Is about leading by example and showing how we can be better.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Is about well-written and designed code - and the customer stays in the center -.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Is about continuously delivering value not writing crap code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Your goal shall to become a professional developer and reach mastery.
How you do it is up to you.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_references&#34;&gt;References&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;refactoring-2nd&#34;&gt;&lt;/a&gt;[1] M. Fowler, &lt;em&gt;Refactoring&lt;/em&gt;, Second. Addision-Wesley, 2018 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0134757599&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0134757599&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;domain-driven-design&#34;&gt;&lt;/a&gt;[2] E. Evans, &lt;em&gt;Domain-driven design&lt;/em&gt;. Addison-Wesley, 2004 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0321125215&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0321125215&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;domain-driven-design-distilled&#34;&gt;&lt;/a&gt;[3] V. Vernon, &lt;em&gt;Domain-Driven Design Distilled&lt;/em&gt;. Addison-Wesley Professional, 2016 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B01JJSGE5S/&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B01JJSGE5S/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;implementing-domain-driven-design&#34;&gt;&lt;/a&gt;[4] V. Vernon, &lt;em&gt;Implementing Domain driven Design&lt;/em&gt;. Addison-Wesley Professional, 2012 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B00BCLEBN8&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B00BCLEBN8&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;effective-java-3rd&#34;&gt;&lt;/a&gt;[5] J. Bloch, &lt;em&gt;Effective Java&lt;/em&gt;, Third. Addison-Wesley Professional, 2017 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B078H61SCH&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B078H61SCH&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;clean-code&#34;&gt;&lt;/a&gt;[6] R. C. Martin, &lt;em&gt;Clean Code&lt;/em&gt;. Prentice Hall, 2009 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0132350882&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0132350882&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;clean-coder&#34;&gt;&lt;/a&gt;[7] R. C. Martin, &lt;em&gt;The Clean Coder&lt;/em&gt;. Prentice Hall, 2011 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0137081073&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0137081073&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;clean-architecture&#34;&gt;&lt;/a&gt;[8] R. C. Martin, &lt;em&gt;Clean Architecture&lt;/em&gt;. Pearson, 2017 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0134494164&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0134494164&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;clean-agile&#34;&gt;&lt;/a&gt;[9] R. C. Martin, &lt;em&gt;Clean Agile&lt;/em&gt;. Prentice Hall, 2020 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0135781868&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0135781868&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;software-craftsman&#34;&gt;&lt;/a&gt;[10] S. Mancuso, &lt;em&gt;The Software Craftsman&lt;/em&gt;. Prentice Hall, 2015 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0134052501&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0134052501&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. Tool examples for the Java stack are provided to bootstrap your empirical approach.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
  </channel>
</rss>
