<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Architecture on tangly Components</title>
    <link>https://blog.tangly.net/tags/architecture/</link>
    <description>Recent content in Architecture on tangly Components</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 01 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.tangly.net/tags/architecture/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Modern Embedded Systems</title>
      <link>https://blog.tangly.net/blog/2025/modern-embedded-systems/</link>
      <pubDate>Tue, 01 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2025/modern-embedded-systems/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2025-04-01-head.jpg&#34; alt=&#34;2025 04 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Embedded software engineers that have a proper understanding of the corresponding hardware are hard to find.&#xA;When application developers were moving to newer languages like Java and C++, embedded programmers were still moving from assembly language to C.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The reason for slower technology adoption is having a lesser number of embedded programmers, who need to thoroughly understand the hardware platform on which their code runs.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The key driver of RTOS adoption is application complexity.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Logging</title>
      <link>https://blog.tangly.net/blog/2025/logging/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2025/logging/</guid>
      <description>&lt;div class=&#34;openblock float-group&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2025-03-01-head.jpg&#34; alt=&#34;2025 03 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Embedded systems are hard to debug.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;You do not have the luxury of connecting up most of the time with a monitor and keyboard.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Stepping through code is not much use when the application needs to continually respond to real-world events for the bug to appear in the first place.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;And after a while, toggling your single GPIO LED just does not cut it, and you decide you need to be able to log messages and print values.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Distributed Systems</title>
      <link>https://blog.tangly.net/blog/2025/distributed-systems/</link>
      <pubDate>Wed, 01 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2025/distributed-systems/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2025-01-01-head.png&#34; alt=&#34;2025 01 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The embedded software industry is in the midst of a major revolution.&#xA;A tremendous amount of new development lies ahead.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;New embedded software needs an actual architecture that is inherently safer and easier to understand.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;It provides a higher level of abstraction than the usual &lt;em&gt;threading&lt;/em&gt; and &lt;em&gt;synchronization&lt;/em&gt; approach based on a traditional Real-Time Operating System &lt;em&gt;RTOS&lt;/em&gt;&#xA;&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;For years, experts in concurrent software have been pointing out that unrestricted use of threads and various blocking mechanisms of an RTOS often leads to programs that are unsafe and difficult to reason about.&#xA;Instead, experts from different industries independently came up with the following best practices, collectively known as the active object or actor design pattern &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#reactive-messaging-patterns-with-actor-model&#34;&gt;1&lt;/a&gt;]&lt;/span&gt;:&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Domain Entities UI</title>
      <link>https://blog.tangly.net/blog/2024/domain-entities-ui/</link>
      <pubDate>Fri, 01 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/domain-entities-ui/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2024-11-01-head.jpg&#34; alt=&#34;2024 11 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Commercial digital applications regularly display a list of entities and details for the selected one.&#xA;The selected entity can be displayed, edited, and deleted.&#xA;A new entity can be created.&#xA;This pattern is called &lt;a href=&#34;https://en.wikipedia.org/wiki/Create,_read,_update_and_delete&#34;&gt;CRUD&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Create,_read,_update_and_delete&#34;&gt;CRUD&lt;/a&gt; solutions permeate the digital world.&#xA;Most company internal applications are a variation of this pattern.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Often you do not need sophisticated forms or display complex diagrams.&#xA;But most of the solutions will have a few complex forms or diagrams.&#xA;It is also common to have a few workflows codifying key business processes of your company.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Domain Entities</title>
      <link>https://blog.tangly.net/blog/2024/domain-entities/</link>
      <pubDate>Tue, 01 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/domain-entities/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2024-10-01-head.jpg&#34; alt=&#34;2024 10 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Domain-driven_design&#34;&gt;Domain-driven design&lt;/a&gt; is a tremendous good practice for modern agile software architecture&#xA;&lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#domain-driven-design&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;#domain-driven-design-distilled&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;#implementing-domain-driven-design&#34;&gt;3&lt;/a&gt;]&lt;/span&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The approach is to model the digital solution around the business domain.&#xA;The digital solutions are modular systems that can evolve over time.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The approach is used to design modular monoliths or complex microservices architectures.&#xA;The digital modular monolith can evolve to a full-fledged microservices architecture if the market requires the associated scalability and resilience.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Domain-Driven Design with ROS-2</title>
      <link>https://blog.tangly.net/blog/2024/domain-driven-design-with-ros-2/</link>
      <pubDate>Sat, 10 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/domain-driven-design-with-ros-2/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2024-08-02-head.png&#34; alt=&#34;2024 08 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;At its core, &lt;a href=&#34;https://www.ros.org/&#34;&gt;Robot Operation System&lt;/a&gt; provides a message-passing system, often called &lt;em&gt;middleware&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Communication is one of the first needs to arise when implementing a new robot application, or really any software system that will interact with hardware.&#xA;ROSâ€™s built-in and well-tested messaging system saves you time by managing the details of communication between distributed nodes via an anonymous &lt;a href=&#34;https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern&#34;&gt;Publish and Subscribe Pattern&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;This approach encourages good practices in your software development, including fault isolation, &lt;a href=&#34;https://en.wikipedia.org/wiki/Separation_of_concerns&#34;&gt;Seperation of Concerns&lt;/a&gt;, and clear interfaces.&#xA;Using ROS results in systems that are easier to maintain, contribute to, and reuse.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Agile Architecture Questions</title>
      <link>https://blog.tangly.net/blog/2024/agile-architecture-questions/</link>
      <pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/agile-architecture-questions/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2024-08-01-head.png&#34; alt=&#34;2024 08 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Agile architecture means how enterprise architects, system architects, and software architects apply architectural practice in agile software development.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;An agile architect should handle a regular set of questions for each application he is working on.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Each digital product encounters similar requirements and shall provide good solutions for the most acute restrictions.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The goal is to define an evolvable minimal architecture.&#xA;New functional and non-functional requirements shall be realized with minimal changes in the design.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Document Your Agile Architecture</title>
      <link>https://blog.tangly.net/blog/2024/document-your-agile-architecture/</link>
      <pubDate>Mon, 01 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/document-your-agile-architecture/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2024-07-01-head.jpg&#34; alt=&#34;2024 07 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The overwhelming success of agile approaches to creating digital products has implications on our work techniques.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Design emerges.&#xA;The team learns incrementally and refines the solution &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#building-evolutionary-architectures-2nd&#34;&gt;1&lt;/a&gt;]&lt;/span&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Agile architecture is a collaborative and iterative process.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Agile methods do not require comprehensive documentation at the beginning.&#xA;Managers do not need to plan months in advance because things can change as the project evolves.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The idea is to produce documentation with information that is essential to move forward when it makes the most sense.&#xA;Your organization should acknowledge that:&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Actors with CMSIS OS in Cpp</title>
      <link>https://blog.tangly.net/blog/2024/actors-with-cmsis-os-in-cpp/</link>
      <pubDate>Sat, 15 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/actors-with-cmsis-os-in-cpp/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2024-06-03-head.svg&#34; alt=&#34;2024 06 03 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The actor library defines the actor abstraction with mailboxes and concrete implementation for various target platforms.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;https://arm-software.github.io/CMSIS_5/RTOS2/html/index.html&#34;&gt;CMSIS-RTOS v2&lt;/a&gt; platform provides an actor implementation for all realtime kernels supporting the CMSIS API.&#xA;The API is under the stewardship of the ARM company.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Any kernel with a &lt;a href=&#34;https://arm-software.github.io/CMSIS_5/RTOS2/html/index.html&#34;&gt;CMSIS-RTOS v2&lt;/a&gt; compatible layer is eligible.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;STM provides the CMSIS integration with &lt;a href=&#34;https://www.freertos.org/index.html&#34;&gt;freeRTOS&lt;/a&gt; for all STM32 microcontrollers.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_library&#34;&gt;Library&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The library defines key abstractions as abstract classes &lt;a href=&#34;#actors&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;#actors-in-cpp&#34;&gt;[2]&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Actors in Cpp</title>
      <link>https://blog.tangly.net/blog/2024/actors-in-cpp/</link>
      <pubDate>Mon, 10 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/actors-in-cpp/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2024-06-02-head.svg&#34; alt=&#34;2024 06 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;There is a strong need for higher-level frameworks ensuring safe concurrent programming.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;https://en.wikipedia.org/wiki/Actor_model&#34;&gt;Actor Model&lt;/a&gt; is one of the best approaches to safe concurrency and legible code &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#reactive-messaging-patterns-with-actor-model&#34;&gt;1&lt;/a&gt;]&lt;/span&gt;.&#xA;The model is based on &lt;a href=&#34;https://en.wikipedia.org/wiki/Message_passing&#34;&gt;Message Passing&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Although multiple actors can run at the same time, an actor will process a given message sequentially.&#xA;This means that if you send three messages to the same actor, it will just execute one at a time.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Actor Model</title>
      <link>https://blog.tangly.net/blog/2024/actor-model/</link>
      <pubDate>Fri, 10 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/actor-model/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2024-05-02-head.svg&#34; alt=&#34;2024 05 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Concurrent programming has always been tricky.&#xA;Accessing a shared state from multiple threads is a central problem, where hard-to-catch errors may easily appear.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Protected access to identified shared variables is easy to realize.&#xA;Mechanisms to avoid deadlocks or starvation are cumbersome to implement and almost impossible to validate.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The need for concurrent programming has increased tremendously with the fact that all modern processors and many microcontrollers have multiple cores.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>How to Document Your Software Architecture</title>
      <link>https://blog.tangly.net/blog/2024/how-to-document-your-software-architecture/</link>
      <pubDate>Wed, 01 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/how-to-document-your-software-architecture/</guid>
      <description>&lt;div class=&#34;openblock float-group&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2024-05-01-head.png&#34; alt=&#34;2024 05 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;You are creating the next digital software masterpiece.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;How can you document your software architecture in a way that is useful for your team and stakeholders?&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;A software architecture document &lt;em&gt;SAD&lt;/em&gt; is a document that describes the structure of a software solution.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;It includes the architecture of its components, the relationships between those components, and the principles that guide its design.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The solution architecture document is typically used as a reference for designing, building, and maintaining a software system.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Nice Statechart Diagrams</title>
      <link>https://blog.tangly.net/blog/2024/nice-statechart-diagrams/</link>
      <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/nice-statechart-diagrams/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2024-03-02-head.gif&#34; alt=&#34;2024 03 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;What are statecharts, also called hierarchical state machines?&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Put simply, a statechart is a beefed-up state machine &lt;a href=&#34;#state-diagram&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;#uml-fsm&#34;&gt;[2]&lt;/a&gt;.&#xA;The syntax is formally defined in the &lt;a href=&#34;https://en.wikipedia.org/wiki/Unified_Modeling_Language&#34;&gt;UML&lt;/a&gt; standard.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The beefing up solves a lot of the problems that state machines have, especially state explosion that happens as state machines grow.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;We explain below what statecharts are and how they are useful.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Statecharts offer a surprising array of benefits:&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;ulist&#34;&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;It is easier to understand a statechart than many other forms of code.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The behavior is decoupled from the component in question.&#xA;This makes it easier to make changes to the behavior.&#xA;It also makes it easier to reason about the code.&#xA;And the behavior can be tested independently of the component.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The process of building a statechart causes all the states to be explored.&#xA;Studies have shown that statechart based code has lower bug counts than traditional code.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Statecharts lend themselves to dealing with exceptional situations that might otherwise be overlooked.&#xA;As complexity grows, statecharts scale well.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A statechart is a great communicator.&#xA;Non-developers can understand the statecharts, while the quality group can use statecharts as an exploratory tool.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Bus Sensors and Actuators</title>
      <link>https://blog.tangly.net/blog/2023/bus-sensors-and-actuators/</link>
      <pubDate>Thu, 14 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2023/bus-sensors-and-actuators/</guid>
      <description>&lt;div class=&#34;openblock float-group&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2023-12-05-head.jpg&#34; alt=&#34;2023 12 05 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Your embedded system has a set of sensors and actors.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Some sensors and actors are connected to a bus.&#xA;Typical buses are &lt;a href=&#34;https://en.wikipedia.org/wiki/CAN_bus&#34;&gt;CAN bus&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Serial_Peripheral_Interface&#34;&gt;Serial Peripherical Interface&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Ethernet&#34;&gt;Ethernet&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Bluetooth&#34;&gt;Bluetooth&lt;/a&gt;, or &lt;a href=&#34;https://en.wikipedia.org/wiki/I%C2%B2C&#34;&gt;I2C&lt;/a&gt; standards.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The bus is a shared medium used to communicate with a set of external active or passive components.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Which design rules shall you follow when designing sensors and actors using a bus architecture?&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Do you need to consider threading design?&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Sensors and Actuators</title>
      <link>https://blog.tangly.net/blog/2023/sensors-and-actuators/</link>
      <pubDate>Tue, 12 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2023/sensors-and-actuators/</guid>
      <description>&lt;div class=&#34;openblock float-group&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2023-12-04-head.jpg&#34; alt=&#34;2023 12 04 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Embedded design maps domain abstractions to the underlying hardware.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;A temperature sensor is a domain abstraction of a physical hardware temperature sensor.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;A valve is a domain abstraction of a physical hardware valve.&#xA;A physical valve can be a simple opened-closed device, or a proportional device.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The microcontroller board reads the temperature sensor through an I2C or SPI bus.&#xA;It controls the valve through a GPIO, a PWM, or a CAN bus controller.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Command Interpreter</title>
      <link>https://blog.tangly.net/blog/2023/command-interpreter/</link>
      <pubDate>Sun, 10 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2023/command-interpreter/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2023-12-03-head.jpg&#34; alt=&#34;2023 12 03 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Most digital products have a command interpreter.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;External systems send requests to the system and often await an answer.&#xA;A command interpreter can model this behavior.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The channels used to transmit requests and return answers are variable.&#xA;Messages can be transmitted other various buses and protocols.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;An operator can send a command over a &lt;a href=&#34;https://en.wikipedia.org/wiki/CAN_bus&#34;&gt;CAN bus&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Serial_Peripheral_Interface&#34;&gt;Serial Peripherical Interface&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Ethernet&#34;&gt;Ethernet&lt;/a&gt; or &lt;a href=&#34;https://en.wikipedia.org/wiki/Bluetooth&#34;&gt;Bluetooth&lt;/a&gt; connection.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;A regular command line interpreter inputs commands as a string containing a request and associated parameters.&#xA;The answer is displayed as a string.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Pragmatic Java Application Design</title>
      <link>https://blog.tangly.net/blog/2023/pragmatic-java-application-design/</link>
      <pubDate>Wed, 15 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2023/pragmatic-java-application-design/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2023-11-03-head.png&#34; alt=&#34;2023 11 03 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;I attended the 20&lt;sup&gt;th&lt;/sup&gt; edition of the &lt;a href=&#34;https://devoxx.be/&#34;&gt;Devoxx Belgium&lt;/a&gt; conference in Antwerp.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;I heard about beautiful examples of how to design complex software applications written in Java.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The solutions scale to hundreds of thousands of users, are resilient to network disruption, and use fancy libraries and tools.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The applications are deployed on cloud infrastructure and are available worldwide.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;After the conference, I went to Ibiza for a family holiday.&#xA;Our family enjoys prolonging the summer on this beautiful Balearic island.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>C4 and UML with PlantUML</title>
      <link>https://blog.tangly.net/blog/2023/c4-and-uml-with-plantuml/</link>
      <pubDate>Fri, 10 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2023/c4-and-uml-with-plantuml/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2023-11-02-head.png&#34; alt=&#34;2023 11 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;You are creating an awesome digital product.&#xA;The software part shall work flawlessly over the years.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Technology changes will be added to the product.&#xA;Legal changes and security improvements are implemented in a timely manner over the years.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;This application will evolve to satisfy new needs and customer segments.&#xA;The life span of your product is probably more than a decade.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;How can you document critical cross-cutting design decisions and key mechanisms?&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Software Architecture Themes and Questions</title>
      <link>https://blog.tangly.net/blog/2023/software-architecture-themes-and-questions/</link>
      <pubDate>Thu, 05 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2023/software-architecture-themes-and-questions/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2023-10-02-head.png&#34; alt=&#34;2023 10 02 head&#34; width=&#34;320&#34; height=&#34;320&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;A software architect works with a development team to define how features shall be realized.&#xA;The selected approach should support corporate governance and legal constraints.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;A new digital product must fulfill a set of technical aspects to be usable.&#xA;Technical constraints are the non-functional requirements of the product&#xA;&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Some of these technical requirements are encountered again and again when developing digital products.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Any software product must provide solutions to standard problems.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Software Developer Assumptions</title>
      <link>https://blog.tangly.net/blog/2023/software-developer-assumptions/</link>
      <pubDate>Sat, 01 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2023/software-developer-assumptions/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2023-04-01-head.jpg&#34; alt=&#34;2023 04 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Here are some software development topics I have learnt to like after 40 years in the industry.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;I worked at quite a few industrial and commercial digital product development initiatives.&#xA;I truly enjoyed creating successful solutions.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Over the years, I encountered similar architecture and design patterns when creating source code for these applications.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;I started programming with languages such as &lt;a href=&#34;https://en.wikipedia.org/wiki/Ada_(programming_language)&#34;&gt;Ada&lt;/a&gt;, Portal, and &lt;a href=&#34;https://en.wikipedia.org/wiki/C_(programming_language)&#34;&gt;C&lt;/a&gt;.&#xA;I embraced object-oriented languages with first &lt;a href=&#34;https://en.wikipedia.org/wiki/C%2B%2B&#34;&gt;C++&lt;/a&gt; and later &lt;a href=&#34;https://en.wikipedia.org/wiki/Java_(programming_language)&#34;&gt;Java&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Behavior Driven Design</title>
      <link>https://blog.tangly.net/blog/2022/behavior-driven-design/</link>
      <pubDate>Tue, 01 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2022/behavior-driven-design/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2022-11-01-head.jpg&#34; alt=&#34;2022 11 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Domain-driven_design&#34;&gt;Domain-Driven Design&lt;/a&gt; &lt;em&gt;DDD&lt;/em&gt; has been around since Eric Evans published his book about the subject in 2003&#xA;&lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#domain-driven-design&#34;&gt;1&lt;/a&gt;]&lt;/span&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Vernon Vaugh published powerful approaches how to implement DDD concepts into a software solution &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#implementing-domain-driven-design&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;#domain-driven-design-distilled&#34;&gt;3&lt;/a&gt;]&lt;/span&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;How do you validate and test your DDD digital solutions?&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Behavior-driven_development&#34;&gt;Behavior Driven Development&lt;/a&gt; &lt;em&gt;BDD&lt;/em&gt; is an inversion of how systems are often developed.&#xA;In some ways, it is an extension of Test Driven Development &lt;em&gt;TDD&lt;/em&gt; approach to the whole application.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Modern Java Constructs</title>
      <link>https://blog.tangly.net/blog/2022/modern-java-constructs/</link>
      <pubDate>Wed, 12 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2022/modern-java-constructs/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2022-10-02-head.jpg&#34; alt=&#34;2022 10 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;strong&gt;Modern Java&lt;/strong&gt; is quite a departure from the traditional Java available at the beginning of the millennium.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The most visible change is certainly lambda expressions and stream, enabling a more functional programming approach in Java.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Functional programming is a paradigm that supports developers to think in terms of functions instead of classes.&#xA;Functions are stateless and without side effects.&#xA;Avoiding state can lead to better software, especially in high-performance, concurrent applications&#xA;&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&#xA;Functional programming is also a natural fit for multicore parallel programming.&#xA;The paradigm is the best way to squeeze more performance out of modern CPUs.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Vaadin</title>
      <link>https://blog.tangly.net/blog/2022/vaadin/</link>
      <pubDate>Sat, 01 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2022/vaadin/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2022-10-01-head.jpg&#34; alt=&#34;2022 10 01 head&#34; width=&#34;200&#34; height=&#34;200&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://vaadin.com/&#34;&gt;Vaadin&lt;/a&gt; is an ideal solution if you are a Java developer and wants to provide a user interface for your product.&#xA;Vaadin is a framework to create graphical user interfaces using plain Java, or any JVM-based language for that matter.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;You develop in Java, and the framework takes care of all the rest.&#xA;It generates the client-side code, and the communication between the client-side code in the browser and the backend code on the server.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>ArchUnit</title>
      <link>https://blog.tangly.net/blog/2022/archunit/</link>
      <pubDate>Thu, 01 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2022/archunit/</guid>
      <description>&lt;div class=&#34;openblock float-group&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2022-09-01-head.png&#34; alt=&#34;2022 09 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;How often have you experienced a well-defined and understood software architecture on paper?&#xA;And it falls apart when developers start implementing it?&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;While re-architecting recently legacy components in an application, I experienced the same.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;As more and more developers joined the team, it became a constant routine to make them aware of the design and how to adhere to it.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;I know some of you may say, &lt;em&gt;Why not control the implementation during code-review sessions?&lt;/em&gt;.&#xA;Technically you can, but in that case, the reviewer becomes the bottleneck in the whole &lt;a href=&#34;https://en.wikipedia.org/wiki/Systems_development_life_cycle&#34;&gt;SDLC&lt;/a&gt; process.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Modular Monoliths are the new Graal</title>
      <link>https://blog.tangly.net/blog/2022/modular-monoliths-are-the-new-graal/</link>
      <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2022/modular-monoliths-are-the-new-graal/</guid>
      <description>&lt;div class=&#34;openblock float-group&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2022-06-02-head.svg&#34; alt=&#34;2022 06 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;A modular monolith is a software design approach in which a monolith is designed with an emphasis on interchangeable and potentially reusable modules.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;A modular monolith can be split in the future into a set of microservices.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Delay the split as long as you can.&#xA;Microservices have a steep price tag during operations.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;A modular monolith provides:&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;ulist&#34;&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Independent and parallel development approach.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Diminish coupling and improve cohesion.&#xA;The interfaces are better documented and thinner.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Better observability.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Software Structure with DDD</title>
      <link>https://blog.tangly.net/blog/2022/software-structure-with-ddd/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2022/software-structure-with-ddd/</guid>
      <description>&lt;div class=&#34;openblock float-group&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2022-06-01-head.jpg&#34; alt=&#34;2022 06 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Domain-driven_design&#34;&gt;Domain Driven Development&lt;/a&gt; &lt;em&gt;DDD&lt;/em&gt; is the preferred software architecture approach for designing digital products.&#xA;The method nicely matches with the operational concepts of microservices.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Domain-driven design is a holistic approach to understanding, designing, and building software applications.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Seminal books &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#domain-driven-design&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;#domain-driven-design-distilled&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;#implementing-domain-driven-design&#34;&gt;3&lt;/a&gt;]&lt;/span&gt; describes the approach and key concepts defining the development method.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Concrete recipes and examples of code structure are still sparse.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;How should you structure your namespaces and modules?&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Measurements and Units</title>
      <link>https://blog.tangly.net/blog/2022/measurements-and-units/</link>
      <pubDate>Sun, 01 May 2022 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2022/measurements-and-units/</guid>
      <description>&lt;div class=&#34;openblock float-group&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2022-05-01-head.png&#34; alt=&#34;2022 05 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;JSR-385 could have saved Mars Climate Orbiter&lt;a href=&#34;#mars-climate-orbiter&#34;&gt;[2]&lt;/a&gt; in year 1999.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Accidents in computer applications happen again and again due to calculation errors.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The International System of Units &lt;em&gt;SI&lt;/em&gt;, commonly known as the metric system, is the international standard for measurement.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;https://en.wikipedia.org/wiki/Metre_Convention&#34;&gt;International Treaty of the Mete&lt;/a&gt; was signed in Paris on May 20, 1875, by seventeen countries, including the United States.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;In May 2019, the system of units was updated.&#xA;All units are defined by constants of nature.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Choice is Good</title>
      <link>https://blog.tangly.net/blog/2021/choice-is-good/</link>
      <pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2021/choice-is-good/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2021-11-01-head.jpg&#34; alt=&#34;2021 11 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;First and foremost, our primary goal is to develop successful products and delight users.&#xA;We are always looking for good practices to improve our odds.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;strong&gt;Product development is a risky business&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;We want to expand our toolbox with proven approaches.&#xA;We use these tools to experiment when confronted with new problems.&#xA;There is &lt;a href=&#34;https://en.wikipedia.org/wiki/No_Silver_Bullet&#34;&gt;No Silver Bullet&lt;/a&gt; to solve our specific challenges.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Using a goal-driven approach that guides people through process-related options is one powerful approach.&#xA;We need to take decisions to tailor and scale agile strategies to address the context of the situations we face.&#xA;Approaches such as &lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt; have a minimal set of instructions.&#xA;You are responsible for adding the missing pieces to improve your development organization and remove your specific impediments.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Agile Design Modeling</title>
      <link>https://blog.tangly.net/blog/2021/agile-design-modeling/</link>
      <pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2021/agile-design-modeling/</guid>
      <description>Unknown reference: implementing-domain-driven-desing&#xA;&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2021-10-01-head.jpg&#34; alt=&#34;2021 10 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The line between software development and software architecture is a tricky one.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Some people will tell you that it does not exist and that architecture is simply an extension of the design process undertaken by developers.&#xA;Others will make out it is a massive gaping chasm that can only be crossed by lofty developers.&#xA;They believe you must always abstract your abstractions and not get bogged down by those pesky implementation details.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>What I Learnt Teaching Agile Software Architecture</title>
      <link>https://blog.tangly.net/blog/2021/what-i-learnt-teaching-agile-software-architecture/</link>
      <pubDate>Thu, 02 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2021/what-i-learnt-teaching-agile-software-architecture/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2021-09-02-head.jpg&#34; alt=&#34;2021 09 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;I am teaching agile software architecture and techniques &lt;em&gt;SWAT&lt;/em&gt; as an advanced bachelor level lecture weighted with 3&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/European_Credit_Transfer_and_Accumulation_System&#34;&gt;ECTS&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;I gave this training for the last three years at &lt;a href=&#34;https://www.hslu.ch/en&#34;&gt;Lucerne University of Applied Sciences and Arts&lt;/a&gt; &lt;em&gt;HSLU&lt;/em&gt; in Switzerland.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;All materials are released under the &lt;a href=&#34;https://creativecommons.org/&#34;&gt;Creative Commons&lt;/a&gt; copyright.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The course contents are aligned with the big software architecture programs.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;https://www.opengroup.org/&#34;&gt;Open Group&lt;/a&gt; organization is the steward of the &lt;a href=&#34;https://publications.opengroup.org/standards/togaf&#34;&gt;TOGAF&lt;/a&gt; standard.&#xA;&lt;a href=&#34;https://publications.opengroup.org/standards/togaf&#34;&gt;TOGAF&lt;/a&gt; is the worldwide industrial standard for enterprise software architecture.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Why Enterprise Architecture?</title>
      <link>https://blog.tangly.net/blog/2021/why-enterprise-architecture/</link>
      <pubDate>Mon, 05 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2021/why-enterprise-architecture/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2021-07-02-head.jpg&#34; alt=&#34;2021 07 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Architecture principles hold true in agile environments.&#xA;The major difference between older traditional approaches and modern agile ones is the way of performing enterprise architecture.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The last years have shown a promising evolution of plan-based, centralist enterprise architecture approaches to more agile, decentralized, meritocracy driven processes.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;These new approaches are way more compatible with a modern and agile software product development framework such as &lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt;, &lt;a href=&#34;http://www.extremeprogramming.org/&#34;&gt;eXtreme Programming&lt;/a&gt;, and &lt;a href=&#34;https://less.works/&#34;&gt;LeSS&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Agile Software Architecture is Mainstream</title>
      <link>https://blog.tangly.net/blog/2021/agile-software-architecture-is-mainstream/</link>
      <pubDate>Mon, 15 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2021/agile-software-architecture-is-mainstream/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2021-03-03-head.jpg&#34; alt=&#34;2021 03 03 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Slowly, slowly major actors in the software architecture landscape acknowledge agile development is the state of the industry approach to building software products.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;They are still struggling to integrate their older views into a faster, iterative, incremental development approach.&#xA;The duration of a regular Scrum sprint is usually two weeks.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;More important, they have discovered we build products because no customers buy projects.&#xA;They buy solutions and products.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Agile Architecture within Scrum</title>
      <link>https://blog.tangly.net/blog/2019/agile-architecture-within-scrum/</link>
      <pubDate>Mon, 12 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2019/agile-architecture-within-scrum/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2019-08-01-head.jpg&#34; alt=&#34;2019 08 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;You are applying the agile, lean approach to your software product development.&#xA;Your teams use Scrum or Kanban to deliver running software every two weeks.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Agile architecture is a key element to improve the quality of your solution and reduce the overall cycle-time of your product delivery.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Your journey toward greater business agility starts by identifying what outcomes are most important to your companyâ€™s success.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Outcomes are codified in functional and non-functional requirements your product shall fulfill.&#xA;A key component is to find out how to create a great resilient architecture within the Scrum framework.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Agile Architecture Principles</title>
      <link>https://blog.tangly.net/blog/2019/agile-architecture-principles/</link>
      <pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2019/agile-architecture-principles/</guid>
      <description>&lt;div class=&#34;openblock float-group&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2019-05-01-head.jpg&#34; alt=&#34;2019 05 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;You are applying the agile, lean approach to your software product development.&#xA;Your teams use Scrum or Kanban to deliver running software every two weeks.&#xA;The product market introduction is a success.&#xA;You will successfully sell the solution for the next ten years.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;How shall you define the software architecture of your product and ensure a long-living and high-quality solution?&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The experts tell you the design is emergent.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Architectural Decision Records ADR</title>
      <link>https://blog.tangly.net/blog/2018/architectural-decision-records-adr/</link>
      <pubDate>Thu, 05 Jul 2018 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2018/architectural-decision-records-adr/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2018-07-01-head.jpg&#34; alt=&#34;2018 07 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Architecture Decision Record ADR is compact and traceable documents of all important decisions taken during the realization of a product.&#xA;Use &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; or &lt;a href=&#34;https://www.markdownguide.org/&#34;&gt;Markdown&lt;/a&gt; and &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; to have agile and lean documentation of your major decisions.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The huge advantage of Architecture Design Record &lt;em&gt;ADR&lt;/em&gt; is the timeline of the decisions.&#xA;It tremendously helps to understand the technical changes during the product lifecycle.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Please try architecture design records to document your key decisions when developing your software product.&#xA;Feel free to identify better approaches&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
