<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Students-Java on tangly Components</title>
    <link>https://blog.tangly.net/tags/students-java/</link>
    <description>Recent content in Students-Java on tangly Components</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 01 Apr 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.tangly.net/tags/students-java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Structure Your Concurrency</title>
      <link>https://blog.tangly.net/blog/2024/structure-your-concurrency/</link>
      <pubDate>Mon, 01 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/structure-your-concurrency/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2024-04-01-head.png&#34; alt=&#34;2024 04 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Writing concurrent software is one of the greatest challenges for software developers &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#modern-software-engineering&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;#effective-java-3rd&#34;&gt;2&lt;/a&gt;]&lt;/span&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;A professional software developer must understand the principles of concurrent programming and the tools available to write concurrent software.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Only concurrent applications can access all cores of modern multicore processors and provide the best performance.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Java thread model makes it a strong contender among concurrent languages, but multithreading has always been inherently tricky.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The introduction of &lt;em&gt;virtual threads&lt;/em&gt; empowered Java to provide a unique and highly-optimized threading system that is also easy to understand.&#xA;You can now create millions of threads without the overhead of creating a native operating system thread.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Nice Statechart Diagrams</title>
      <link>https://blog.tangly.net/blog/2024/nice-statechart-diagrams/</link>
      <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/nice-statechart-diagrams/</guid>
      <description>&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2024-03-02-head.gif&#34; alt=&#34;2024 03 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;What are statecharts, also called hierarchical state machines?&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Put simply, a statechart is a beefed-up state machine &lt;a href=&#34;#state-diagram&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;#uml-fsm&#34;&gt;[2]&lt;/a&gt;.&#xA;The syntax is formally defined in the &lt;a href=&#34;https://en.wikipedia.org/wiki/Unified_Modeling_Language&#34;&gt;UML&lt;/a&gt; standard.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The beefing up solves a lot of the problems that state machines have, especially state explosion that happens as state machines grow.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;We explain below what statecharts are and how they are useful.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Statecharts offer a surprising array of benefits:&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;ulist&#34;&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;It is easier to understand a statechart than many other forms of code.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The behavior is decoupled from the component in question.&#xA;This makes it easier to make changes to the behavior.&#xA;It also makes it easier to reason about the code.&#xA;And the behavior can be tested independently of the component.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The process of building a statechart causes all the states to be explored.&#xA;Studies have shown that statechart based code has lower bug counts than traditional code.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Statecharts lend themselves to dealing with exceptional situations that might otherwise be overlooked.&#xA;As complexity grows, statecharts scale well.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A statechart is a great communicator.&#xA;Non-developers can understand the statecharts, while the quality group can use statecharts as an exploratory tool.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Java Modules</title>
      <link>https://blog.tangly.net/blog/2024/java-modules/</link>
      <pubDate>Fri, 01 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/java-modules/</guid>
      <description>&lt;div class=&#34;openblock float-group&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2024-03-01-head.png&#34; alt=&#34;2024 03 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Java 9 introduces a new level of abstraction above packages, known as the Java Platform Module System &lt;em&gt;JPMS&lt;/em&gt;, or &lt;em&gt;Modules&lt;/em&gt; for short &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#java-9-modularity&#34;&gt;1&lt;/a&gt;]&lt;/span&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Modules emphasize at compilation time modern software engineering principles such as encapsulation, and modularity&#xA;&lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#modern-software-engineering&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;#effective-java-3rd&#34;&gt;3&lt;/a&gt;, &lt;a href=&#34;#building-evolutionary-architectures-2nd&#34;&gt;4&lt;/a&gt;]&lt;/span&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Java 9 was released in September 2017.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Most Java developers are still not using this powerful and elegant construct to modularize their applications.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_modules&#34;&gt;Modules&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;A &lt;em&gt;module&lt;/em&gt; is a group of closely related Java packages and resources along with a new module descriptor file.&#xA;A module is distributed as a regular jar file.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Advanced Streams</title>
      <link>https://blog.tangly.net/blog/2024/advanced-streams/</link>
      <pubDate>Sat, 10 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/advanced-streams/</guid>
      <description>&lt;div class=&#34;openblock float-group&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2024-02-01-head.png&#34; alt=&#34;2024 02 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The Java Stream API is a powerful and simple to understand set of tools for processing sequences of elements.&#xA;The standard collections were retrofitted with the &lt;em&gt;stream()&lt;/em&gt; method, which allows us to convert any collection to a stream.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Modern Java code has almost no loops and conditional statements.&#xA;It relies on the Stream API and the functional programming style to implement algorithms.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;When used properly, it allows us to reduce a huge amount of boilerplate code, create more readable programs, and improve productivity &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#modern-software-engineering&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;#effective-java-3rd&#34;&gt;2&lt;/a&gt;]&lt;/span&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Data Classes, Sealed Types and Pattern Matching</title>
      <link>https://blog.tangly.net/blog/2024/data-classes-sealed-types-and-pattern-matching/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/data-classes-sealed-types-and-pattern-matching/</guid>
      <description>&lt;div class=&#34;openblock float-group&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;div class=&#34;imageblock left&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;img src=&#34;../pics/2024-01-01-head.png&#34; alt=&#34;2024 01 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Records, sealed types, enumerations are the key language features for &lt;a href=&#34;https://en.wikipedia.org/wiki/Algebraic_data_type&#34;&gt;Algebraic Data Types&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The features have been available since Java 17.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Latter JDK releases provide additional capabilities and syntactic sugar.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Based on the features of JDK 22, we are still missing &lt;em&gt;with constructors&lt;/em&gt; for records and primitive support for pattern matching&#xA;&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Pattern matching capabilities empower the developer to implement complex algorithms in a compact and legible way.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
