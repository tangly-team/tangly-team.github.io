<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tangly Components â€“ Gradle</title>
    <link>https://blog.tangly.net/tags/gradle/</link>
    <description>Recent content in Gradle on tangly Components</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 07 Nov 2022 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://blog.tangly.net/tags/gradle/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Blog: Multi-Module Test Reporting with Gradle 7.x</title>
      <link>https://blog.tangly.net/blog/2022/multi-module-test-reporting-with-gradle-7.x/</link>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2022/multi-module-test-reporting-with-gradle-7.x/</guid>
      <description>
        
        
        &lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2022-11-02-head.jpg&#34; alt=&#34;2022 11 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I love Gradle as the building tool for all my Java projects.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But sometimes I was discouraged about how spotty or cumbersome the support for multi-module project is.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I struggled for years to generate test and code overage reports over modules included in a &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle Build Tool&lt;/a&gt; project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Gradle finally provides a better approach to generate aggregated test and code coverage reports over multiple modules belonging to the same project.
The solution is a huge improvement against the previous quite cumbersome approach described in &lt;a href=&#34;#gradle-7&#34;&gt;[1]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Two plugins nicely solve this daunting problem for all Java developers preferring &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle Build Tool&lt;/a&gt; over &lt;a href=&#34;https://maven.apache.org/&#34;&gt;Maven&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I hope similar solutions will be provided for static code analysers such as SpotBugs, PMD or Checkstyle.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_selected_approach&#34;&gt;Selected Approach&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We use the documented approach to define a separate module to generate the aggregation reports.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;plugins&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;                                           &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;test-report-aggregation&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;jacoco-report-aggregation&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;dependencies&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;                                      &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;testReportAggregation&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;project&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;:net.tangly.bdd&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;testReportAggregation&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;project&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;:net.tangly.commons&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;testReportAggregation&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;project&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;:net.tangly.core&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;testReportAggregation&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;project&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;:net.tangly.dev&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;

    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;jacocoAggregation&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;project&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;:net.tangly.bdd&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;jacocoAggregation&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;project&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;:net.tangly.commons&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;jacocoAggregation&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;project&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;:net.tangly.core&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;jacocoAggregation&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;project&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;:net.tangly.dev&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;reporting&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;                                         &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;reports&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;testAggregateTestReport&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;AggregateTestReport&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;testType&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;TestSuiteType&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;UNIT_TEST&lt;/span&gt;
        &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;testCodeCoverageReport&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;JacocoCoverageReport&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;testType&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;TestSuiteType&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;UNIT_TEST&lt;/span&gt;
        &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Load the plugin for test aggregation report and the test coverage aggregation report.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Declare the modules which results should be aggregated. We have to declare the same subprojects for each plugin separately.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Configure the aggregation reports.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We call the following goals to generate the aggregation results:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;shell&#34;&gt;./gradlew testAggregateTestReport &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
./gradlew testCodeCoverageReport  &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Generates an aggregate report over all unit tests. Run before the gradle test.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Generates a code coverage aggregate report over all unit tests. Run first gradle jacocoTestReport.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_learnings&#34;&gt;Learnings&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Gradle provides test results aggregation and test coverage aggregation as two separate plugins.
The drawback is that we have to configure both plugins with the same information.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The plugins make the assumption that modules are called from an application subproject.
The scenario of a mono repository containing a set of libraries is not covered.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock caution&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-caution&#34; title=&#34;Caution&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We would encourage the plugin authors to provide a default configuration option based on the gradle settings defined in &lt;em&gt;settings.gradle&lt;/em&gt;.
The modules are defined in the file and could be retrieved by the plugin using the Gradle API.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;Apply the cardinal rule of good user interface design.
Do not ask the user to give information already available to the application.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The new plugins are a huge simplification over the cumbersome and almost magic statements we needed before to create these reports.
Gradle ecosystem is still work in progress to support multi-module Java projects &lt;a href=&#34;#gradle-7&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;#gradle-6&#34;&gt;[2]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_links&#34;&gt;Links&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;gradle-7&#34;&gt;&lt;/a&gt;[1] &lt;a href=&#34;../../2021/gradle-7/&#34;&gt;Gradle 7 Goodies&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;gradle-6&#34;&gt;&lt;/a&gt;[2] &lt;a href=&#34;../../2020/gradle-6.4-finally-supports-java-modules/&#34;&gt;Gradle 6.4 Finally Supports Java Modules&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Gradle 7</title>
      <link>https://blog.tangly.net/blog/2021/gradle-7/</link>
      <pubDate>Wed, 03 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2021/gradle-7/</guid>
      <description>
        
        
        &lt;div class=&#34;openblock float-group&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-11-02-head.png&#34; alt=&#34;2021 11 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle Build Tool&lt;/a&gt; is my preferred build tool for all Java applications I am developing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Google chose Gradle as the official build tool for Android.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Not only because build scripts are code, but because Gradle is modeled in a way that is extensible in the most fundamental ways.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Gradleâ€™s model also allows it to be used for native development with C/C++ and can be expanded to cover any ecosystem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For example, Gradle is designed with embedding in mind using its Tooling API.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What are my preferred goodies with the major version 7?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_java_module_native_support&#34;&gt;Java Module Native Support&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Java modules were introduced with Java 9 in September 2017.
Adoption was slow.
Developers needed time to understand the tremendous advantages of language and compiler support of modules.
Tooling was also a problem.
It was cumbersome and error-prone to create Java modules either using the command line and experimental plugins.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle Build Tool&lt;/a&gt; version 7 finally supports Java modules natively.
Just use the &lt;em&gt;java-library&lt;/em&gt; plugin.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The plugin will detect the presence of a &lt;em&gt;module-info.java&lt;/em&gt; module declaration file and transparently switch to module compilation.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_dependencies_semantic_declaration&#34;&gt;Dependencies Semantic Declaration&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Gradle team has decided to introduce semantic support for the declaration of dependencies.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All dependencies of a multi-module Java application are declared in a central file.
The &lt;em&gt;libs.versions.toml&lt;/em&gt; file under the gradle subdirectory of the root build can contain all plugin and library dependencies.
The declarations can be used in all subprojects.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Support is provided to group a set of related dependencies and use the alias in the various Gradle modules.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_intellij_support&#34;&gt;IntelliJ Support&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Jetbrains has improved support of Gradle in their new releases of IntelliJ.
The 2021 versions offer native support of Gradle.
Native support means IntelliJ finally uses Gradle for compilation and unit testing inside the IDE.
You just need to take care of one build configuration and no more need to delve in the mysteries of IntelliJ build process.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The only glitch is that IntelliJ has its own concept of modules and are not synchronized with the Gradle modules.
You have to be careful to align both structures to avoid surprises.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_jacoco_aggregated_test_coverage_reports&#34;&gt;Jacoco Aggregated Test Coverage Reports&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The support for coverage reports over multiple gradle subprojects is still limited.
I use the following configuration to generate aggregated coverage report over all gradle modules.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;apply&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;plugin:&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;jacoco&amp;#39;&lt;/span&gt;      &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;

&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;jacoco&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;                    &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;toolVersion&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;0.8.7&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;jacocoTestReport&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;          &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;dependsOn&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;test&lt;/span&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;reports&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;xml&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;enabled&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;true&lt;/span&gt;
        &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;enabled&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;true&lt;/span&gt;
    &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;


&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;tasks&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;register&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;jacocoRootReport&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;JacocoReport&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;      &lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;(4)&lt;/b&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;subprojects&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;subproject&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;-&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;subproject&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;plugins&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;withType&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;JacocoPlugin&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;configureEach&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;subproject&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;tasks&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;matching&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;t&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;t&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;extensions&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;findByType&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;JacocoTaskExtension&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;}).&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;configureEach&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;testTask&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;-&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;sourceSets&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;subproject&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;sourceSets&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;main&lt;/span&gt;
                &lt;span style=&#34;color: #8250df&#34;&gt;executionData&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;testTask&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;
            &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;subproject&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;tasks&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;matching&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;t&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;t&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;extensions&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;findByType&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;JacocoTaskExtension&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;}).&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;forEach&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;rootProject&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;tasks&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;jacocoRootReport&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;dependsOn&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;it&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;
            &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;reports&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;xml&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;enabled&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;true&lt;/span&gt;
        &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;enabled&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;true&lt;/span&gt;
    &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;


&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;tasks&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;withType&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;Test&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;finalizedBy&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;jacocoTestReport&lt;/span&gt;        &lt;i class=&#34;conum&#34; data-value=&#34;5&#34;&gt;&lt;/i&gt;&lt;b&gt;(5)&lt;/b&gt;
    &lt;span style=&#34;color: #8250df&#34;&gt;useJUnitPlatform&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;()&lt;/span&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;jvmArgs&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;--add-exports=java.base/jdk.internal.misc=ALL-UNNAMED&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;--enable-preview&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;-XX:+ShowCodeDetailsInExceptionMessages&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;reports&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;junitXml&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;mergeReruns&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;true&lt;/span&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;options&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;setExcludeTags&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;([&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;integration&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;Set&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;maxParallelForks&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;8&lt;/span&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;failFast&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;false&lt;/span&gt;
&lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Import the Jacoco plugin in the project&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Allows the selection of the Jacoco version.
I found it useful when using the latest JDK version.
JaCoCo developers have a slow release rhythm.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Configure JaCoCo to generate a html and an XML report.
The binary report is no more supported by external tool.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;5&#34;&gt;&lt;/i&gt;&lt;b&gt;5&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Configure JaCoCo test report to be generated after the running of a test task&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock important&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-important&#34; title=&#34;Important&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Gradle has finally new plugins to better generate unit tests and test coverage reports for a multi-module project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;test-report-aggregation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;jacoco-report-aggregation&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The new approach to create aggregated reports is described in &lt;a href=&#34;../../2022/multi-module-test-reporting-with-gradle-7.x/&#34;&gt;Multi-module Test Reporting with Gradle 7&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_wishes&#34;&gt;Wishes&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I would greatly appreciate if the JaCoCo Gradle plugin is improved and align with the features of the Maven plugin.
The process to aggregate the coverage reports on a multi-module project is cumbersome and brittle.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I am waiting for the Gradle 7.3 release to have native support of JDK 17.
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;
The tool chain supports the newer JDKs without trouble but Gradle can only run with JDK 16 or older versions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. Gradle 7.3 was released in the first half of November 2021. JDK 17 is now natively supported. As usual the early version of the next JDK - in this case JDK 18 - is only currently supported through the toolchain feature.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Gradle 6.4 Finally Supports Java Modules</title>
      <link>https://blog.tangly.net/blog/2020/gradle-6.4-finally-supports-java-modules/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2020/gradle-6.4-finally-supports-java-modules/</guid>
      <description>
        
        
        &lt;div class=&#34;openblock float-group&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2020-05-01-head.jpg&#34; alt=&#34;2020 05 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Java 9 release introduced the concept of &lt;a href=&#34;https://www.oracle.com/corporate/features/understanding-java-9-modules.html&#34;&gt;modules&lt;/a&gt; within the Java language.
Java 9 was released in September 2017.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Until now, creating Java modules was quite cumbersome and Gradle did only offer limited support through external plugins.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With the release of &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle&lt;/a&gt; 6.4 in May 2020, software developers can finally easily generate well-behaved Java modules.
We had to wait almost three years for native support!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Support for modules is native in the Java plugin.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You only need to add &lt;strong&gt;one configuration line&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Start using Java modules and have language support to enforce modularity in your product.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_java_modules_in_gradle_6_4&#34;&gt;Java Modules in Gradle 6.4&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Gradle supports the Java module system with everything you need to compile, test and execute tests for Java modules.
You can also build Javadoc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;While there is some overlap with Gradleâ€™s dependency management features, Java modules offer module boundaries that are enforced by the Java runtime.
Modularity is enforced at the language level instead of coding conventions or using external tools such as &lt;a href=&#34;https://www.archunit.org/&#34;&gt;ArchUnit&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The only thing you need to configure is module path inference for the Java plugins.
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;java&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
   &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;modularity&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;inferModulePath&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;set&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Then you just need to make sure you write a proper Java module by providing a module information file.
An example of a module information file is&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;module&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;net&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;tangly&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;fsm&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
   &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;net&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;tangly&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;fsm&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;;&lt;/span&gt;
   &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;net&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;tangly&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;fsm&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;dsl&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;;&lt;/span&gt;
   &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;net&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;tangly&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;fsm&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;utilities&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;;&lt;/span&gt;
   &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;requires&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;logging&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;log4j&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;;&lt;/span&gt;
   &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;requires&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;jetbrains&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;annotations&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;;&lt;/span&gt;
 &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Java 14 in Gradle Java 14 was also released in Spring 2020. It is worth experimenting with the new preview features.
The following configuration is needed in Gradle to compile, test, execute and generate JavaDoc when using Java 14 preview features.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;tasks&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;withType&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;JavaCompile&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
     &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;options&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;encoding&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;UTF-8&amp;#39;&lt;/span&gt;
     &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;options&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;fork&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;true&lt;/span&gt;
     &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;options&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;incremental&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;true&lt;/span&gt;
     &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;options&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;warnings&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;true&lt;/span&gt;
     &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;options&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;deprecation&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;true&lt;/span&gt;
     &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;options&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;compilerArgs&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;-parameters&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;--enable-preview&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;-Xlint:unchecked&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;
   &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;tasks&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;withType&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;Test&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
     &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;useJUnitPlatform&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;()&lt;/span&gt;
     &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;options&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
       &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;setExcludeTags&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;([&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;integration&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;localTest&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;Set&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;
     &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;
     &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;jvmArgs&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;--enable-preview&amp;#34;&lt;/span&gt;
     &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;maxParallelForks&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;8&lt;/span&gt;
     &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;failFast&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;false&lt;/span&gt;
   &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;
   &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;tasks&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;withType&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;Javadoc&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
     &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;enabled&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;true&lt;/span&gt;
     &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;javadoc&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;options&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
       &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;encoding&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;
       &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;addBooleanOption&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;-enable-preview&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;
       &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;addStringOption&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;-release&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;14&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;
     &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;
   &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;
   &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;tasks&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;withType&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;JavaExec&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
     &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;jvmArgs&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;--enable-preview&amp;#39;&lt;/span&gt;
   &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Beware that &lt;a href=&#34;https://www.jacoco.org/&#34;&gt;JaCoCo&lt;/a&gt; shall only release a version supporting code coverage for JDK 14 and, in particular, record not before June 2020.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. Gradle 7.0 released in Spring 2021 transparently supports Java modules. If you use the &lt;em&gt;java-library&lt;/em&gt; plugin, the support of Java modules is transparent.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
  </channel>
</rss>
