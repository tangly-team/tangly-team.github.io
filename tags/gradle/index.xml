<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gradle on tangly Components</title>
    <link>https://blog.tangly.net/tags/gradle/</link>
    <description>Recent content in Gradle on tangly Components</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 07 Nov 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.tangly.net/tags/gradle/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Multi-Module Test Reporting with Gradle 7.x</title>
      <link>https://blog.tangly.net/blog/2022/multi-module-test-reporting-with-gradle-7.x/</link>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2022/multi-module-test-reporting-with-gradle-7.x/</guid>
      <description>I love Gradle as the building tool for all my Java projects.&#xA;But sometimes I was discouraged about how spotty or cumbersome the support for multi-module project is.&#xA;I struggled for years to generate test and code overage reports over modules included in a Gradle Build Tool project.&#xA;Gradle finally provides a better approach to generate aggregated test and code coverage reports over multiple modules belonging to the same project.</description>
    </item>
    <item>
      <title>Gradle 7</title>
      <link>https://blog.tangly.net/blog/2021/gradle-7/</link>
      <pubDate>Wed, 03 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2021/gradle-7/</guid>
      <description>Gradle Build Tool is my preferred build tool for all Java applications I am developing.&#xA;Google chose Gradle as the official build tool for Android.&#xA;Not only because build scripts are code, but because Gradle is modeled in a way that is extensible in the most fundamental ways.&#xA;Gradleâ€™s model also allows it to be used for native development with C/C++ and can be expanded to cover any ecosystem.</description>
    </item>
    <item>
      <title>Gradle 6.4 Finally Supports Java Modules</title>
      <link>https://blog.tangly.net/blog/2020/gradle-6.4-finally-supports-java-modules/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2020/gradle-6.4-finally-supports-java-modules/</guid>
      <description>Java 9 release introduced the concept of modules within the Java language. Java 9 was released in September 2017.&#xA;Until now, creating Java modules was quite cumbersome and Gradle did only offer limited support through external plugins.&#xA;With the release of Gradle 6.4 in May 2020, software developers can finally easily generate well-behaved Java modules. We had to wait almost three years for native support!&#xA;Support for modules is native in the Java plugin.</description>
    </item>
  </channel>
</rss>
