<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tangly Components â€“ vaadin</title>
    <link>https://blog.tangly.net/tags/vaadin/</link>
    <description>Recent content in vaadin on tangly Components</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 01 Oct 2022 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://blog.tangly.net/tags/vaadin/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Blog: Vaadin</title>
      <link>https://blog.tangly.net/blog/2022/vaadin/</link>
      <pubDate>Sat, 01 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2022/vaadin/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_developing_with_vaadin&#34;&gt;Developing with Vaadin&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2022-10-01-head.jpg&#34; alt=&#34;2022 10 01 head&#34; width=&#34;200&#34; height=&#34;200&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://vaadin.com/&#34;&gt;Vaadin&lt;/a&gt; is an ideal solution if you are a Java developer and wants to provide a user interface for your product.
Vaadin is a framework to create graphical user interfaces using plain Java, or any JVM-based language for that matter.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You develop in Java, and the framework takes care of all the rest.
It generates the client-side code, and the communication between the client-side code in the browser and the backend code on the server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Your team only needs to program in the Java stack
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.
Your developers focus on their key competencies.
This is a huge advantage.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Proficiency is difficult in one technology stack.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Only exceptional individuals really master multiple development environments.
You can probably not afford to hire them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Vaadin framework is optimal for internal applications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It scales up to a few thousands of active users.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_progressive_web_applications_pwa&#34;&gt;Progressive Web Applications &lt;a href=&#34;https://en.wikipedia.org/wiki/Progressive_web_app&#34;&gt;PWA&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;User interfaces shall accommodate various screen resolutions.
Ideally, you should support phone displays, tablets, and high-resolution workstations.
Progressive Web applications provide the functionalities to realize such solutions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Vaadin provides first-level support for &lt;a href=&#34;https://en.wikipedia.org/wiki/Progressive_web_app&#34;&gt;PWA&lt;/a&gt; functions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The regular Vaadin distribution provides the expected regular visual components.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;https://vaadin.com/directory/search?author=Vaadin+++ComponentFactory&#34;&gt;Vaadin Component Factory&lt;/a&gt; distributes more specialized components.
These components were before created for a particular customer and later released to the community.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I use the &lt;a href=&#34;https://vaadin.com/directory/component/so-charts&#34;&gt;SO-Charts&lt;/a&gt; components to draw various charts.
This library is a thin wrapper for the Apache project &lt;a href=&#34;https://echarts.apache.org/en/index.html&#34;&gt;ECharts&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_developing_with_vaadin_2&#34;&gt;Developing with Vaadin&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The most popular IDE for Java is currently the &lt;em&gt;IntelliJ IDEA&lt;/em&gt; tool.
You develop Vaadin applications just as regular Java applications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I use &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle Build Tool&lt;/a&gt; as build tool.
This approach is well-supported in the IDE.
The Vaadin company still seems to prefer &lt;a href=&#34;https://maven.apache.org/&#34;&gt;Maven&lt;/a&gt; as build tool.
You find Gradle examples created by the developer of the Karibu library.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I prefer to deploy Vaadin application with an embedded Web Server.
The approach has two advantages.
First, debugging the application is easier and snappier.
Second, the modern production environment builds on Docker images and Kubernetes.
You will never deploy more than one solution on a container instance.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Vaadin components do not hinder domain-driven design approaches.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_testing_with_karibu&#34;&gt;Testing with &lt;a href=&#34;https://github.com/mvysny/karibu-testing/&#34;&gt;Karibu&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Digital solutions are developed using agile approaches.
They are often deployed multiple times every week in production.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The unit and integration tests are run automatically before each deployment.
The successful execution of the test suite guarantees no known errors are deployed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/mvysny/karibu-testing/&#34;&gt;Karibu&lt;/a&gt; test library efficiently supports developers writing Vaadin integration or end-to-end automated tests.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Karibu testing is here to perform:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Containerless testing&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;You do not need to launch the servlet container.
Karibu creates a &lt;em&gt;Vaadin Session&lt;/em&gt;, the UI and other necessary Vaadin classes straight in the JVM, which runs your JUnit tests.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Browserless testing&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;You look up components straight from &lt;em&gt;UI.getCurrent()&lt;/em&gt;, bypassing the browser and the JavaScript bridge completely.
You directly call methods on your server-side &lt;em&gt;View&lt;/em&gt; classes and on the server-side Java Vaadin components.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_learning_vaadin&#34;&gt;Learning Vaadin&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Vaadin provides &lt;a href=&#34;https://vaadin.com/learn/training/&#34;&gt;training videos&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A &lt;a href=&#34;https://vaadin.com/learn/training/&#34;&gt;certification program&lt;/a&gt; validates your learning.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://vaadin.com/docs/latest/&#34;&gt;Extensive documentation&lt;/a&gt; and tutorials are published on their website.
The current examples emphasize the usage of &lt;a href=&#34;https://maven.apache.org/&#34;&gt;Maven&lt;/a&gt; as a build tool.
I prefer &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle Build Tool&lt;/a&gt; and had to search the Internet to find clues how to build the examples with Gradle.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Concrete examples of how to realize specific functions with Vaadin are collected in the &lt;a href=&#34;https://cookbook.vaadin.com/&#34;&gt;cookbook&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Beware of selecting examples using the current version of the framework.
Legacy code uses Vaadin 8 and is useless for modern solutions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Very cool is the &lt;a href=&#34;https://vaadin.com/student-program/&#34;&gt;student program&lt;/a&gt;.
I am currently trying to introduce computer science bachelor students to the advantages of Vaadin.
Students are bombarded with various technology stacks.
Java and Vaadin is a single Java-based approach to write more easily semester and bachelor development assignments.
The drawback is it is less sexy than &lt;em&gt;React&lt;/em&gt;, &lt;em&gt;VueJS&lt;/em&gt;, or perhaps &lt;em&gt;Angular&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Vaadin supports the latest version of Java in a timely manner
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_2&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_2&#34; title=&#34;View footnote.&#34;&gt;2&lt;/a&gt;]&lt;/sup&gt;.
I acknowledge that the Vaadin company is rather slow to adopt newer Java standards.
It took them years to acknowledge the Jakarta renaming scheme
footnot:[The renaming was necessary because Oracle screwed up. The delaying of Vaadin means you cannot use the latest version of Jetty or similar frameworks].&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.frankel.ch/why-love-vaadin/&#34;&gt;Why I (still) love Vaadin&lt;/a&gt;.
Nicolas FrÃ¤nkel. 2020.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@ankurmans/an-open-letter-to-all-enterprise-level-business-web-application-decision-makers-446527292627&#34;&gt;5 Reasons Why Enterprises Use Vaadin For Their Web Application UI Needs&lt;/a&gt;.
Ankurman Shrestha .2018.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://vaadin.com/accessibility&#34;&gt;Vaadin Accessibility&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. It is a modern user interface framework and uses Modern Java as a programming language. It easily superseeds old 4GL approaches such as dBase, Clipper, FileMaker, Visual Fox Pro, PowerBuilder, Borland Paradox, 4th Dimension, or Oracle Forms.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_2&#34;&gt;
&lt;a href=&#34;#_footnoteref_2&#34;&gt;2&lt;/a&gt;. The same can be said for the &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle Build Tool&lt;/a&gt; since it supports toolchains configuration.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
  </channel>
</rss>
