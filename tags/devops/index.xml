<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tangly Components â€“ devops</title>
    <link>https://blog.tangly.net/tags/devops/</link>
    <description>Recent content in devops on tangly Components</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 25 Oct 2022 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://blog.tangly.net/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Blog: First Steps DevOps</title>
      <link>https://blog.tangly.net/blog/2022/first-steps-devops/</link>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2022/first-steps-devops/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_first_steps_devops&#34;&gt;First Steps DevOps&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2022-12-01-head.png&#34; alt=&#34;2022 12 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;https://en.wikipedia.org/wiki/DevOps&#34;&gt;DevOps&lt;/a&gt; movement started to gather momentum with the first DevOps conference held in Ghent, Belgium in 2009
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The approach aims to shorten the system development life-cycle and to provide continuous delivery with high software quality.
DevOps is complementary with &lt;a href=&#34;https://en.wikipedia.org/wiki/Agile_software_development&#34;&gt;agile software development&lt;/a&gt; approaches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Several DevOps aspects came from the Agile method.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Seminal books [&lt;a href=&#34;#accelerate&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;#devops-handbook&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;#phoenix-project&#34;&gt;3&lt;/a&gt;, &lt;a href=&#34;#site-reliability-engineering&#34;&gt;4&lt;/a&gt;] and good practices were published around the same time.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The DevOps approach belongs to the regular instruments of professional software developers.
Major development platforms, &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;, &lt;a href=&#34;https://gitlab.com/&#34;&gt;GitLab&lt;/a&gt;, &lt;a href=&#34;https://bitbucket.org/&#34;&gt;BitBucket&lt;/a&gt;
and &lt;a href=&#34;https://azure.microsoft.com/de-de/services/devops/&#34;&gt;Microsoft Azure DevOps&lt;/a&gt; do support continuous integration, delivery and deployments for years.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The DORA metrics define a standard approach to measure the quality and efficiency of a DevOps or agile process implementation in an organization.
They were published in 2016.
The metrics for throughput are &lt;em&gt;deployment frequency, lead time for changes&lt;/em&gt;.
The metrics for stability are &lt;em&gt;mean time to recover, change failure rate&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;They define a standard approach to measure the quality and efficiency of a DevOps or agile process implementation in an organization.
An agile team shall be able to deploy a version of their digital platform multiple times per day.
Frequent and economical deployments require the full automation of integration, delivery and deployment steps.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Below, we provide a detailed possible approach to deploying DevOps concepts in your organization.
These recipes are helpful for companies with little knowledge and experience in agile and DevOps approaches for digital product development &lt;a href=&#34;#detecting-agile-bullshit&#34;&gt;[5]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_continuous_integration&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_integration/&#34;&gt;Continuous integration&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In software engineering, continuous integration &lt;em&gt;CI&lt;/em&gt; is the practice of merging all developers&amp;#39; working copies to a shared mainline &lt;strong&gt;several times&lt;/strong&gt; a day
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_2&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_2&#34; title=&#34;View footnote.&#34;&gt;2&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The workflow is:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Write some code, compile and run test locally using a script.&lt;br/&gt;
&lt;em&gt;No manual activities shall be required to compile the solution and run all tests.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Commit, push, and compile code in the continuous integration environment.&lt;br/&gt;
&lt;em&gt;A continuous integration pipeline shall be available.&lt;/em&gt;
&lt;em&gt;The environment is a clean new one each time the pipeline is triggered.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run static code analyzers, unit tests and integration in this integration environment.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Optionally, trigger continuous delivery if the earlier steps were successful&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Classical questions and answers &lt;em&gt;FAQ&lt;/em&gt; are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;qlist qanda&#34;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;How often shall a developer push new code to the shared repository?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Laggard developers should push multiple times a week.
Professional developers push multiple times a day &lt;a href=&#34;#code-as-crime-scene&#34;&gt;[4]&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;What steps are part of a continuous integration script?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The script shall at least compile the solution.
Static code checkers shall be called to validate the changes and ensure minimal code quality.&lt;br/&gt;
Modern checkers detect syntactic, semantic or security violations.
OWASP are readily available to start implementing DevSecOps.
Unit tests and if reasonable integration shall be executed automatically to verify the changes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;When should the continuous integration script be executed?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Each time a git push is registered and the repository is updated
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_3&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_3&#34; title=&#34;View footnote.&#34;&gt;3&lt;/a&gt;]&lt;/sup&gt;.
You want to guaranty that the repository is in a consistent state.&lt;br/&gt;
Any developer should be able to check out the repository and start working.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Can you add manual steps to your continuous integration script?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;No, manual steps are the death of continuous integration and automation.
It is called &lt;strong&gt;continuous&lt;/strong&gt; because it is &lt;strong&gt;automated&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_continuous_delivery&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_delivery&#34;&gt;Continuous delivery&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Continuous delivery &lt;em&gt;CD&lt;/em&gt; is a software engineering approach in which teams produce software in short cycles.
It ensures that the software can be reliably released at any time and, when releasing the software, &lt;strong&gt;without doing so manually&lt;/strong&gt;.
It aims at building, testing, and releasing software with greater speed and frequency.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The approach helps reduce the cost, time and risk of delivering changes by allowing for more incremental updates to applications in production.
A straightforward and repeatable deployment process is important for continuous delivery.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Classical questions and answers &lt;em&gt;FAQ&lt;/em&gt; are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;qlist qanda&#34;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;How can a new delivery package be generated?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Your continuous integration pipeline should have a delivery step and produce an executable artifact.
Your hosting platform provides a service to upload versioned artifacts to a repository.
Java artifacts are often stored in Maven Central.
Docker images are often uploaded to Docker Hub.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Where should we store the migration scripts?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Migration and configuration scripts are part of the delivery.
The installation process shall perform an unattended migration of the configuration and databases.
&lt;strong&gt;Manual steps are not allowed&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;When is a new delivery package created?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Upon completion of compilation, static verification, unit tests and integration tests, you should create the delivery package.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Which preferred format should you use?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For complex solutions, the preferred format is a &lt;a href=&#34;https://www.docker.com/&#34;&gt;docker&lt;/a&gt; image or a &lt;a href=&#34;https://kubernetes.io/&#34;&gt;kubernetes&lt;/a&gt; pod.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;How do you identify a specific version of a package?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://semver.org/&#34;&gt;Semantic versioning&lt;/a&gt; is the standard approach to generating legible package identifiers.
You are free to adopt another naming scheme for &lt;a href=&#34;https://en.wikipedia.org/wiki/Software_versioning&#34;&gt;software versioning&lt;/a&gt;.
Just document your approach.&lt;br/&gt;
Implement a function so that your users can find out the version of the product they are using.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_continuous_deployment&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_deployment&#34;&gt;Continuous deployment&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Continuous deployment &lt;em&gt;CD&lt;/em&gt; is a software engineering approach in which software functionalities are delivered frequently through automated deployments.
Continuous deployment contrasts with continuous delivery.
It is a similar approach in which software functionalities are also frequently delivered and deemed to be potentially capable of being deployed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;qlist qanda&#34;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Are manual steps good practice for continuous deployment?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Never&lt;/strong&gt; perform manual steps.
Continuous activities require full automation.
Manual steps can only be performed if a trained collaborator is available.
Manual activities are expensive, automated activities are cheap.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;What should you do if a deployment fails?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The environment should perform an automatic rollback to the last working configuration.
It is the reason why DORA metrics &lt;a href=&#34;#dora-metrics&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;#dora-google&#34;&gt;[2]&lt;/a&gt; measure &lt;em&gt;mean time to recover&lt;/em&gt;  and &lt;em&gt;change failure rate&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Are commercial platforms available for continuous deployment?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Major cloud services &lt;a href=&#34;https://aws.amazon.com/&#34;&gt;Amazon AWS&lt;/a&gt;, &lt;a href=&#34;https://cloud.google.com/&#34;&gt;Google Cloud&lt;/a&gt;, &lt;a href=&#34;https://azure.microsoft.com/&#34;&gt;Microsoft Azure&lt;/a&gt;,
&lt;a href=&#34;https://www.heroku.com/&#34;&gt;Heroku&lt;/a&gt;, etc. provide continuous deployment pipelines and integration with product development platforms.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_logging_and_monitoring&#34;&gt;Logging and Monitoring&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Site_reliability_engineering&#34;&gt;Site reliability engineering&lt;/a&gt;
and &lt;a href=&#34;https://en.wikipedia.org/wiki/DevOps&#34;&gt;DevOps&lt;/a&gt; practices are standard approaches in any professional organization running digital products productively.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Monitoring is used as a &lt;a href=&#34;https://en.wikipedia.org/wiki/PDCA&#34;&gt;PDCA&lt;/a&gt; loop to continuously improve the construction and delivery process of a productive solution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Classical questions and answers &lt;em&gt;FAQ&lt;/em&gt; are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;qlist qanda&#34;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;What should be logged?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The software architecture document of your solution should document how and what information you are logging.
Mapped diagnostic contexts are used to track session and user related actions and log records
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_4&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_4&#34; title=&#34;View footnote.&#34;&gt;4&lt;/a&gt;]&lt;/sup&gt;
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_5&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_5&#34; title=&#34;View footnote.&#34;&gt;5&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Should logging information be archived?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The corporate governance guidelines shall prescribe how long logging information is stored and who can access the data.&lt;br/&gt;
Logging information should be available to protect your company against legal complaints.
The information is also invaluable for security incident analysis
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_6&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_6&#34; title=&#34;View footnote.&#34;&gt;6&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Should applications be monitored?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;All productive installations should be monitored through a professional solution.
The monitoring approach should detect issues before they impede user processes.
You shall document the alarming and recovery process.
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_7&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_7&#34; title=&#34;View footnote.&#34;&gt;7&lt;/a&gt;]&lt;/sup&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_github_gitlab_bitbucket&#34;&gt;GitHub, GitLab, BitBucket&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Modern software development departments use these platforms for collaboration and implementation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock text-center&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2022-12-01-ci-vs-cd.png&#34; alt=&#34;2022 12 01 ci vs cd&#34; width=&#34;90%&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As stated on GitHub website, we have the following definitions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Automation&lt;/strong&gt; is a core principle for achieving DevOps success and CI/CD is a critical component.
CI/CD consists of continuous integration and continuous delivery or continuous deployment.
Put together, they form a &lt;em&gt;CI/CD/CD pipeline&lt;/em&gt;.
&lt;strong&gt;Automated&lt;/strong&gt; workflows that help DevOps teams cut down on manual tasks:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Continuous integration (CI) automatically builds, tests and integrates code changes within a shared repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Continuous delivery (CD) automatically delivers code changes to production-ready environments for a final approval.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Continuous deployment (CD) automatically deploys code changes to customers directly.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Multiple Toolchains&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;GitHub supports multiple toolchain installation through successive steps in the pipeline.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BitBucket can only install one toolchain for a pipeline.
Additional toolchains must be installed using package management of the operating system of your Docker image.
Beware that package managers are dependant of the used distribution.
The openjdk regular image uses, for example, &lt;em&gt;microdnf&lt;/em&gt; as package manager.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Actual Java JDK Releases&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;GitHub does not support the latest official Java releases on time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bitbucket supports all officially released Java versions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You need a platform and automatisation expert in your development team to harvest the advantages.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock important&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-important&#34; title=&#34;Important&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;odoo.sh has selected GitHub as their preferred platform.
We shall use GitHub CI/CD/CD approach as defined in odoo.sh to develop and deploy all our application development.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Github provides initial support for Security, DevOps, and agile approaches.
We shall evaluate these tools and, if relevant, use them as standard tooling for our Odoo software tailoring and development.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The CI tools of GitHub are ideal to implement DevSecOps approaches on odoo modules and internal Python application development.
The Sonar scanners verify for example compliance to OWASP vulnerabilitities.
This verification step can be executed on a repository update to remove vulnerabilities in deployed oddo instances.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_legacy_system_variations&#34;&gt;Legacy System Variations&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Legacy systems must compromise how they implement their pipelines.
Source code shall always follow the clean code and DevOps principles.
Configuration information stored in the database must often be migrated between staging areas.
Please document your &lt;strong&gt;automated&lt;/strong&gt; process and rules.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Modern systems have fully adopted the &lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_configuration_automation&#34;&gt;configuration&lt;/a&gt;
and &lt;a href=&#34;https://en.wikipedia.org/wiki/Infrastructure_as_code&#34;&gt;infrastructure as code&lt;/a&gt; approach.
Migrate your approach to automated configuration scripts to configure and initialize your products.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Incremental migration of database schema and productive data is a well-understood software engineering problem [&lt;a href=&#34;#refactoring-databases&#34;&gt;5&lt;/a&gt;] for decades.
Tools such as &lt;a href=&#34;https://flywaydb.org/&#34;&gt;FlyWay&lt;/a&gt; or &lt;a href=&#34;https://www.liquibase.org/&#34;&gt;LiquidBase&lt;/a&gt; provide enterprise grade productive solutions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;exampleblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The open ERP Odoo platform uses &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; to offer a clean DevOps process for the &lt;a href=&#34;https://www.odoo.sh/&#34;&gt;Odoo.sh&lt;/a&gt; cloud platform.
The approach has two components:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Source code and modules updates follow clean code and DevOps principles.
You create new functions in the development branches, merge them in staging branches to test them and release the changes to the production branch for deployment.
The approach is like the staging process of the Linux kernel.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Database updates are performed slightly differently between development and the other staging area.
The staging area either gets a copy of the production database or a migrated version of the previous staging area database.
This behavior can be configured.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Merging a staging branch in the production branch only merges the source code.
Any configuration changes you made in the staging databases are not passed to the production database.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you test configuration changes in staging branches, and you want them to be applied in the production, you have to either:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Write the configuration changes in XML data files overriding the default configuration or views in your branches, and then increase the version of your module in its manifest (&lt;em&gt;manifest&lt;/em&gt;.py) to trigger the update of the module when you merge your staging branch in your production branch.
This is the best practice for a better scalability of your developments as you use the Git versioning features for all your configuration changes.
Therefore, you have traceability for your changes.&lt;/strong&gt;
&lt;em&gt;This approach is compatible to clean code and DevOps&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pass them manually from your staging to your production database, by copying and pasting them.
&lt;em&gt;This approach is probably a motive to fire the developer because traceability, auditability and reproducibility are not enforced&lt;/em&gt;.
&lt;em&gt;Regular corporate governance rules are neglected and could have legal consequences in case of incidents on the production server.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When you want to test the changes of your development branches with the production data, you can either:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Merge the development branch into your staging branch, by drag and dropping it onto the desired staging branch.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Drag and dropping the development branch on the staging section title, to make it become a staging branch.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When your latest changes are ready for production, you can merge the staging branch onto your production branch to deploy in production your newest features.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The above process is documented for Odoo version 15 under &lt;a href=&#34;https://www.odoo.com/documentation/15.0/administration/odoo_sh/getting_started/branches.html&#34;&gt;branches&lt;/a&gt; section.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_unprofessional_odoo_approach&#34;&gt;Unprofessional Odoo Approach&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Beware that the odoo.sh environment does not hinder amateur developers to do foolish things with git.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The quote below is from the official website of &lt;a href=&#34;https://www.odoo.sh/&#34;&gt;Odoo.sh&lt;/a&gt;.
The statement violates all the rules of clean code, DevOps and professional software development.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I wishfully hope Odoo organization will mature and remove these misleading statements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you are bold enough, you can merge your development branches into your production branch as well.&lt;br/&gt;
It just means you skip the validation of your changes with the production data through a staging branch.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
â€” odoo.sh&lt;br/&gt;
&lt;cite&gt;2022&lt;/cite&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_professional_odoo_approach&#34;&gt;Professional Odoo Approach&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;On the bright side, odoo.sh supports and advocates the following clean code compatible workflow:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Source code is developed and tested in the development branch.
Good practice is to write unit tests and have demonstration data.
Each time you push changes, a clean instance is created, the demonstration data loaded and all unit tests are executed.&lt;br/&gt;
&lt;em&gt;odoo.sh good practices implement TDD, ATDD, and quality gates as expected from a professional approach&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once you are successful, you merge your development branch to the staging branch.
The environment will automatically provide a copy of the production database in the staging area.
You can test your new functions with production data without impeding the production server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once you are satisfied with the behavior of the new application with the copy of the production data, you can merge to production.
A new production server will be deployed.
If the deployment is unsuccessful, it will be rolled back to minimise downtime and to improve mean-time to recover.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_tips_and_tricks&#34;&gt;Tips and Tricks&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Professional developers perform only code changes in the development branches.
A development branch is often a &lt;strong&gt;feature&lt;/strong&gt; branch.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Staging and production branches are effectively deployment triggers in the &lt;em&gt;odoo.sh&lt;/em&gt; world.
Staging branches shall only be used to &lt;strong&gt;validate&lt;/strong&gt; a new version of your product.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Logically, only &lt;strong&gt;one&lt;/strong&gt; production branch is available.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;odoo.sh abuses git branches as triggers for deployment to staging and production&lt;/em&gt;.
This approach could historically be justified due to the clumsy way database changes were done in the past.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Migration scripts shall be robust and test their constraints
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_8&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_8&#34; title=&#34;View footnote.&#34;&gt;8&lt;/a&gt;]&lt;/sup&gt;.
For example, if the script expects the existence of a value or an identifier in the database, it should test this integrity rule and abort if an error happens.
The goal is to avoid inconsistent states after an update or a migration.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The new good practice is finally compatible with clean code, infrastructure as code and DevOps.
This approach is promoted in the official odoo.sh documentation.
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_9&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_9&#34; title=&#34;View footnote.&#34;&gt;9&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As stated by Odoo, you shall write the configuration changes in XML data files overriding the default configuration or views in your branches.
This is the best practice for a better scalability of your developments as you will use the Git versioning features for all your configuration changes.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_lessons_learnt&#34;&gt;Lessons Learnt&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Clean code and DevOps good practices are around for almost two decades.
Senior developers in your team should have read the seminal books in this area.
These experienced senior designers shall coach younger team members.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The InfoQ DevOps and cloud graph shows DevOps themes investigated in companies during 2022.
Your experts shall apply most or all the approaches documented in the two columns on the right side.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock text-center&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2022-12-01-devops-cloud-graph.png&#34; alt=&#34;2022 12 01 devops cloud graph&#34; width=&#34;780&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A professional organization shall have a continuous formation and training path for all collaborators.
I currently often have to answer basic questions about DevOps, clean code or Scrum.
Quite a few developers do not know basic definitions or how to use Git or GitHub.
It is time to read the documentation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock warning&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-warning&#34; title=&#34;Warning&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Please train and read the documentation.
Do not be a &lt;a href=&#34;https://en.wikipedia.org/wiki/Newbie&#34;&gt;noob&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We politely ask you to read books and documentation.
Avoid receiving a &lt;a href=&#34;https://en.wikipedia.org/wiki/RTFM&#34;&gt;RTFM&lt;/a&gt; injunction.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You need expertise in Docker, Kubernetes and in your development platform &lt;a href=&#34;#devops-sme&#34;&gt;[3]&lt;/a&gt;.
We recommend initially using GitHub.
It is the most used platform and most developers are versed how to use the provided features.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If your company is missing experienced DevOps and agile professionals, it is time to improve your recruitment process &lt;a href=&#34;#detecting-agile-bullshit&#34;&gt;[5]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All development platforms have extensive support for continuous integration, delivery and deployment.
DevOps approaches are well-supported.
Often, advanced concepts such as monitoring, DevSecOps or license management are supported.
Extensive tutorials and good practices are available.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Just use the provided tools and approaches to professionally develop and operate your digital platforms.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;dora-metrics&#34;&gt;&lt;/a&gt;[1] &lt;a href=&#34;https://devops.com/how-dora-metrics-can-measure-and-improve-performance/&#34;&gt;How DORA metrics can measure and improve performance&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;dora-google&#34;&gt;&lt;/a&gt;[2] &lt;a href=&#34;https://cloud.google.com/blog/products/devops-sre/using-the-four-keys-to-measure-your-devops-performance&#34;&gt;Using The Four Keys to Measure Your Devops Performance&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;devops-sme&#34;&gt;&lt;/a&gt;[3] &lt;a href=&#34;../../blog/2021/devops-for-small-applications/&#34;&gt;DevOps for Small Applications&lt;/a&gt;
Marcel Baumann. 2021&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;code-as-crime-scene&#34;&gt;&lt;/a&gt;[4] &lt;a href=&#34;../../2019/code-scene-as-crime-scene/&#34;&gt;Code Scene as a Crime Scene&lt;/a&gt;
Marcel Baumann, 2019&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;detecting-agile-bullshit&#34;&gt;&lt;/a&gt;[5] &lt;a href=&#34;../../2019/detecting-agile-bullshit/&#34;&gt;Detecting Agile Bullshit&lt;/a&gt;
Marcel Baumann, 2019&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_references&#34;&gt;References&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;accelerate&#34;&gt;&lt;/a&gt;[1] N. Forsgren, J. Humble, and G. Kim, &lt;em&gt;Accelerate: The Science of Lean Software and DevOps&lt;/em&gt;. IT Revolution Press [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B07B9F83WM&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B07B9F83WM&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;devops-handbook&#34;&gt;&lt;/a&gt;[2] G. Kim and N. Forsgren, &lt;em&gt;DevOps Handbook&lt;/em&gt;, Second. IT Revolution Press, 2021 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B01M9ASFQ3&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B01M9ASFQ3&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;phoenix-project&#34;&gt;&lt;/a&gt;[3] G. Kim, &lt;em&gt;The Phoenix Project a novel about IT, DevOps, and helping your business win&lt;/em&gt;. IT Revolution Press [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0988262592&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0988262592&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;site-reliability-engineering&#34;&gt;&lt;/a&gt;[4] B. Beyer, C. Jones, J. Petoff, and N. R. Murphy, &lt;em&gt;Site Reliability Engineering&lt;/em&gt;. Oâ€™Reilly Media, Inc., 2016 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/1492029505&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/1492029505&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;refactoring-databases&#34;&gt;&lt;/a&gt;[5] A. Scott and P. J. Sadalage, &lt;em&gt;Refactoring Databases&lt;/em&gt;. Addison-Wesley Professional, 2006 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B001QAP36E&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B001QAP36E&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. Development organizations had around fifteen years to practice DevOps and adapt their application lifecycle management processes.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_2&#34;&gt;
&lt;a href=&#34;#_footnoteref_2&#34;&gt;2&lt;/a&gt;. &lt;a href=&#34;https://en.wikipedia.org/wiki/Grady_Booch&#34;&gt;Grady Booch&lt;/a&gt; first proposed the term Continuous Integration &lt;em&gt;CI&lt;/em&gt; in 1991. Analyze your git logs and find out if your developers are truly merging working copies to a shared mainlines several times a day. Laggard programmers use git as a backup tool and not as a collaborative development platform.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_3&#34;&gt;
&lt;a href=&#34;#_footnoteref_3&#34;&gt;3&lt;/a&gt;. You can either use &lt;a href=&#34;https://trunkbaseddevelopment.com/&#34;&gt;trunk based development&lt;/a&gt; or configure the build trigger for all your feature branches.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_4&#34;&gt;
&lt;a href=&#34;#_footnoteref_4&#34;&gt;4&lt;/a&gt;. odoo.sh provides logging support for a deployed solution. Corporate governance often requires that log files are archived in a separate location. These files are needed when a forensic analysis of a security situation shall be investigated.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_5&#34;&gt;
&lt;a href=&#34;#_footnoteref_5&#34;&gt;5&lt;/a&gt;. odoo has an audit module supporting auditing of critical actions initiated throug user interactions or external systems. The audit module is somethat primitive. The audit configuration is performed at the database level and not at functional level. The configuration responsible needs deep understanding which modules perform specific operations on the database.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_6&#34;&gt;
&lt;a href=&#34;#_footnoteref_6&#34;&gt;6&lt;/a&gt;. The logging files and audit traces shall be stored on company premises to fulfill legal and corporate governance rules.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_7&#34;&gt;
&lt;a href=&#34;#_footnoteref_7&#34;&gt;7&lt;/a&gt;. odoo.sh provides monitoring for deployed solutions. The monitoring is currently based on &lt;a href=&#34;https://www.elastic.co/kibana/&#34;&gt;Kibana&lt;/a&gt;. All productive servers shall be monitored with a similar approach. The monitoring approach shall be tuned based on production incidents.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_8&#34;&gt;
&lt;a href=&#34;#_footnoteref_8&#34;&gt;8&lt;/a&gt;. If you write, for example, an SQL database schema migration script, you use clauses such &lt;strong&gt;DROP IF EXISTS&lt;/strong&gt;.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_9&#34;&gt;
&lt;a href=&#34;#_footnoteref_9&#34;&gt;9&lt;/a&gt;. Manual editions through copy and paste are a violation of sound engineering development practices. You lose reproducibility, versioning of a single source of truth, and auditability. Assume that you violate development guidelines and corporate governance.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Transfer a Software Project</title>
      <link>https://blog.tangly.net/blog/2022/transfer-a-software-project/</link>
      <pubDate>Mon, 15 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2022/transfer-a-software-project/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_transfer_a_software_project&#34;&gt;Transfer a Software Project&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2022-08-02-head.jpg&#34; alt=&#34;2022 08 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You developed a new digital product for an internal or external customer.
Your solution is awesome.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The product is released to delighted users.
Your users love your solution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The project is now winding down and closing activities are initiated.
The customer organization shall take ownership of all product related artifacts.
The handover is a vital part of closing a project
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Your customer paid for the development and own the produced artifacts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are legally bound to deliver source code, binary artifacts defining the executable application, credentials and documentation to your customer.
The ownership transfer is either an explicit part of your contract or implicit through the contract type you are working with.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Remember, a product development is a work contract.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Work contracts&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_2&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_2&#34; title=&#34;View footnote.&#34;&gt;2&lt;/a&gt;]&lt;/sup&gt; are a legal and rather well-defined contractual item in Europe.
Expected deliveries are already defined in legal texts or through jurisprudence.
Your customer has the right to refuse final payment until delivery.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;How can you cleanly transfer your results to your customers?
How can you document the transfer process and provide an acceptance protocol?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Which steps shall you implement to delight your clients?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_migration_steps&#34;&gt;Migration Steps&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Most development initiatives are using  &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;, &lt;a href=&#34;https://gitlab.com/&#34;&gt;GitLab&lt;/a&gt; or &lt;a href=&#34;https://bitbucket.org/&#34;&gt;Bitbucket&lt;/a&gt;.
The steps are the same for all these platforms.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You should deliver a consistent
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_3&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_3&#34; title=&#34;View footnote.&#34;&gt;3&lt;/a&gt;]&lt;/sup&gt; repository to your client.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Verify that the repository contains the final state of your solution.&lt;br/&gt;
&lt;em&gt;Talk with your developers to insure all changes are checked into the git repository&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update your licenses and copyright.&lt;br/&gt;
&lt;em&gt;Verify if you have to talk with your legal department&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Validate continuous integration and delivery pipeline.&lt;br/&gt;
&lt;em&gt;Run your CI/CD pipeline and check the deliverables&lt;/em&gt;
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_4&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_4&#34; title=&#34;View footnote.&#34;&gt;4&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Validate static documentation website creation
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_5&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_5&#34; title=&#34;View footnote.&#34;&gt;5&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;+
&lt;em&gt;Generate your static website.
Use a spellchecker for orthography, and a link checker for your links&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tag the artifacts to insure traceability between your binary delivery and the source code.&lt;br/&gt;
You still need an official acceptance form from your client.&lt;br/&gt;
&lt;em&gt;Do not forget to document your tagging conventions.
Are you using semantic versioning?&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Transfer your repository to the new organization. You should formally document the acceptance of the produced artifacts and handover of all results.
Good practice is to sign the transfer protocol.&lt;br/&gt;
&lt;em&gt;Relinquish formally ownership of the repository and responsibility to your customer&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Celebrate the successful completion of your project.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_update_your_copyrights&#34;&gt;Update Your Copyrights&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The chosen copyrights shall allow the new owner to take over and change all artifacts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Repository Copyright&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;GitHub and GitLab strongly support the definition and publishing of the license under which the whole project is published.
Examples of open source and closed source licenses are available on the Internet.
Please never write your own license text for source code or documents
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_6&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_6&#34; title=&#34;View footnote.&#34;&gt;6&lt;/a&gt;]&lt;/sup&gt;.
You are not a lawyer and your text will most certainly contain legal errors or miss required statements.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Source Code Copyright&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Beware that source code is often under similar copyright rules as books and pieces of art.
Regular infringement laws apply if you use, copy or modify source code.
Therefore, any source code file has an implicit or an explicit copyright.
Good practice is to have a banner in each source file stating the short version of your copyright.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Documentation Copyright&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Documentation, drawings and sketches are also under copyright legislation.
Please add your copyright to all your documents &lt;a href=&#34;#creative-commons&#34;&gt;[3]&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock warning&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-warning&#34; title=&#34;Warning&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Respect the licenses of the open source components you are using.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The free software foundation and similar entities consequently sue organizations cheating on open source licenses.
Avoid loosing your reputation and money for infringing copyrights.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_update_your_documentation&#34;&gt;Update Your Documentation&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I strongly suggest using actual good practice documentation as static websites to publish your documentation.
The huge gain is git based tracking to map a documentation set to a specific release of your solution.
Auditability and tracing of the documents are implicitly provided through version management system features
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_7&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_7&#34; title=&#34;View footnote.&#34;&gt;7&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock warning&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-warning&#34; title=&#34;Warning&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The transfer is more complex if your website is published under a custom domain.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You must remove your &lt;em&gt;CNAME&lt;/em&gt; redirection in your domain record.
The receiving party can create a new &lt;em&gt;CNAME&lt;/em&gt; redirection in their domain record associated with their company.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Additional steps to validate the newly configured domain and enable &lt;em&gt;SSL&lt;/em&gt; are well-described on the GitHub site.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Register your custom domain in the &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; pages repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reserve your custom domain in &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; to block other users to steel your domain if it is once down &lt;a href=&#34;#configuring-custom-domain&#34;&gt;[2]&lt;/a&gt;.
Beware you need to add a &lt;a href=&#34;https://en.wikipedia.org/wiki/TXT_record&#34;&gt;TXT&lt;/a&gt; record in your domain.
Bigger companies are quite slow to process such a request.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enable HTTPS to be compliant with good practices &lt;a href=&#34;#configuring-custom-domain&#34;&gt;[2]&lt;/a&gt;.
&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; will generate and deploy at no costs a certificate for your custom domain.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once you have created a &lt;a href=&#34;https://en.wikipedia.org/wiki/CNAME_record&#34;&gt;CNAME&lt;/a&gt; record mapping your custom domain to the GitHub pages website address, validate your custom domain in GitHub.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Test your new site to check that all configuration changes are working.
Upon successful deployment, add a redirect page on your old website to support all your users who stored an old link
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_8&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_8&#34; title=&#34;View footnote.&#34;&gt;8&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Beware that DNS modifications need up to 24 hours to propagate.
I strongly advocate performing such changes during the weekend.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here is a simple example of a redirect page for your old website.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color: #999999;font-weight: bold&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #000080&#34;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #000080&#34;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #000080&#34;&gt;&amp;lt;meta&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;http-equiv=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;refresh&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;content=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;0; URL=https://blog.tangly.net&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #000080&#34;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Redirect to Our New tangly Components Website&lt;span style=&#34;color: #000080&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #000080&#34;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #000080&#34;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #000080&#34;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This page has been moved. If you are not redirected within 3 seconds,
     click &lt;span style=&#34;color: #000080&#34;&gt;&amp;lt;a&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;href=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;https://blog.tangly.net&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #000080&#34;&gt;&amp;gt;&lt;/span&gt;Redirect to our new tangly Components website&lt;span style=&#34;color: #000080&#34;&gt;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #000080&#34;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #000080&#34;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_update_your_cicd_pipeline&#34;&gt;Update Your CI/CD Pipeline&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The continuous integration and delivery pipelines [&lt;a href=&#34;#continuous-delivery&#34;&gt;1&lt;/a&gt;] shall build all expected artifacts associated with the product.
Ideally the process shall follow DevOps good practices and be automated.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If not document thoroughly the manual steps.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_transfer_your_github_repository&#34;&gt;Transfer Your GitHub Repository&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The transfer of a repository from one organization to another one is well-supported in GitHub &lt;a href=&#34;#transferring-a-repository&#34;&gt;[1]&lt;/a&gt;.
The whole transfer process is completed in less than five minutes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You need your credentials to log into GitHub and confirm the transfer action.
The owner of the receiving organization must confirm the transfer to complete the process.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock warning&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-warning&#34; title=&#34;Warning&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Developers shall update their git repository remote definition in their local repository.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;shell&#34;&gt;  git remote &lt;span style=&#34;color: #000080&#34;&gt;-v&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
  git remote set-url origin-github git@github.com:repository-name.git &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
  git remote &lt;span style=&#34;color: #000080&#34;&gt;-v&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;List all the remotes of your local git repository.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Sets the new URL of the remote &lt;em&gt;origin-github&lt;/em&gt; using &lt;em&gt;ssh&lt;/em&gt; as transfer protocol.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Check that the changes to your remotes are correct.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now you can pull from and push to the new location.
Your remote can have a different name such as &lt;em&gt;origin&lt;/em&gt;.
Look at the URL after the remote name to identify the adequate remote.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_good_practices&#34;&gt;Good Practices&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Do not transfer a product with known security flaws to another party.
Please correct the issues.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;GitHub, SonarQube &lt;a href=&#34;#sonarqube&#34;&gt;[4]&lt;/a&gt; and other tools provide convenient ways to detect vulnerabilities.
Integrate these tools to support the delivery of an application without known vulnerabilities or OWASP smells
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_9&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_9&#34; title=&#34;View footnote.&#34;&gt;9&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_lessons_learnt&#34;&gt;Lessons Learnt&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Development teams seldom understand the legal implications of copyright infringements.
All source code files must have a clear copyright banner.
Documentation artifacts shall also have an explicit copyright notice.
Any files without a copyright will legally be handled as implicitly owned by the authors of the source code or documentation.
The whole repository shall also carry an overall license files.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock warning&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-warning&#34; title=&#34;Warning&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you are using pictures in the documentation, clarify and track the copyrights of the used images.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The copyright files for used components shall be made available in the repository as requested by the authors of these components.
Care should be taken to avoid mixing non-compatible licenses in the same product.
Beware especially of the consequences of using a GPL or AGPL library in your product.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Tools such as GitHub or GitLab increase efficiency if you are adopting DevOps practices when working with them [&lt;a href=&#34;#accelerate&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;#devops-handbook&#34;&gt;3&lt;/a&gt;, &lt;a href=&#34;#site-reliability-engineering&#34;&gt;4&lt;/a&gt;].&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;transferring-a-repository&#34;&gt;&lt;/a&gt;[1] &lt;a href=&#34;https://docs.github.com/en/repositories/creating-and-managing-repositories/transferring-a-repository&#34;&gt;Transferring a GitHub Repository&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;configuring-custom-domain&#34;&gt;&lt;/a&gt;[2] &lt;a href=&#34;https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site&#34;&gt;Configuring Custom Domain&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;creative-commons&#34;&gt;&lt;/a&gt;[3] &lt;a href=&#34;https://creativecommons.org/&#34;&gt;Creative Commons&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;sonarqube&#34;&gt;&lt;/a&gt;[4] &lt;a href=&#34;https://www.sonarqube.org/&#34;&gt;SonarQube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;dependabot&#34;&gt;&lt;/a&gt;[5] &lt;a href=&#34;https://github.com/dependabot/dependabot-core&#34;&gt;GitHub Dependabot&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_references&#34;&gt;References&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;continuous-delivery&#34;&gt;&lt;/a&gt;[1] J. Humble and D. Farley, &lt;em&gt;Continuous Delivery&lt;/em&gt;. Addison-Wesley Professional, 2010 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0321601912&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0321601912&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;accelerate&#34;&gt;&lt;/a&gt;[2] N. Forsgren, J. Humble, and G. Kim, &lt;em&gt;Accelerate: The Science of Lean Software and DevOps&lt;/em&gt;. IT Revolution Press [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B07B9F83WM&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B07B9F83WM&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;devops-handbook&#34;&gt;&lt;/a&gt;[3] G. Kim and N. Forsgren, &lt;em&gt;DevOps Handbook&lt;/em&gt;, Second. IT Revolution Press, 2021 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B01M9ASFQ3&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B01M9ASFQ3&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;site-reliability-engineering&#34;&gt;&lt;/a&gt;[4] B. Beyer, C. Jones, J. Petoff, and N. R. Murphy, &lt;em&gt;Site Reliability Engineering&lt;/em&gt;. Oâ€™Reilly Media, Inc., 2016 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/1492029505&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/1492029505&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. The handover is most of the time implied through the contract or the corporate governance processes of your customer.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_2&#34;&gt;
&lt;a href=&#34;#_footnoteref_2&#34;&gt;2&lt;/a&gt;. The German term is &lt;em&gt;Werkvertrag&lt;/em&gt;. The French term is &lt;em&gt;contrat de travail&lt;/em&gt;.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_3&#34;&gt;
&lt;a href=&#34;#_footnoteref_3&#34;&gt;3&lt;/a&gt;. The project does not contain any merge conflicts or merge requests. All development branches are merged into the main branch and closed.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_4&#34;&gt;
&lt;a href=&#34;#_footnoteref_4&#34;&gt;4&lt;/a&gt;. If your delivery and deployment pipelines still contain manual steps, please exhaustively document these steps. Include examples and check lists to reduce the risk of errors.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_5&#34;&gt;
&lt;a href=&#34;#_footnoteref_5&#34;&gt;5&lt;/a&gt;. If you are not using pages as a documentation approach, document your solution and how you tag your documentation with the corresponding source code.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_6&#34;&gt;
&lt;a href=&#34;#_footnoteref_6&#34;&gt;6&lt;/a&gt;. Use an official license reviewed by professional copyright lawyers.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_7&#34;&gt;
&lt;a href=&#34;#_footnoteref_7&#34;&gt;7&lt;/a&gt;. You should easily identify and retrieve the source code, binary artifacts and documentation for a specific release.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_8&#34;&gt;
&lt;a href=&#34;#_footnoteref_8&#34;&gt;8&lt;/a&gt;. You also need to update your Google Analytics properties if you are using Google as a site usage analysis tool.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_9&#34;&gt;
&lt;a href=&#34;#_footnoteref_9&#34;&gt;9&lt;/a&gt;. GitHub provides DependaBot &lt;a href=&#34;#dependabot&#34;&gt;[5]&lt;/a&gt; to handle dependency updates for various ecosystems including Python technology stack.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Introducing DevOps Ideas</title>
      <link>https://blog.tangly.net/blog/2022/introducing-devops-ideas/</link>
      <pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2022/introducing-devops-ideas/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_introducing_devops_ideas&#34;&gt;Introducing DevOps Ideas&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2022-04-04-head.png&#34; alt=&#34;2022 04 04 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Your organization heard of &lt;a href=&#34;https://en.wikipedia.org/wiki/DevOps&#34;&gt;DevOps&lt;/a&gt;, and your developers clamour you should adopt the approach.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Each organization I talk with has some DevOps initiative.
Often because they read that DevOps approach puts customers and end-user satisfaction at the center.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Does DevOps really improve the quality of your digital products and customer satisfaction?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Or is it only the next &lt;a href=&#34;https://en.wikipedia.org/wiki/No_Silver_Bullet&#34;&gt;silver bullet&lt;/a&gt; fad used to increase the bonus of consultants and managers?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You also find a simple way to boostrap your DevOps adoption &lt;a href=&#34;#bootstrap-devops-adoption&#34;&gt;Bootstrap Your DevOps Adoption&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_what_is_devops&#34;&gt;What is DevOps?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Wikipedia provides the following definition
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;DevOps&lt;/strong&gt; is a set of practices that combines &lt;a href=&#34;https://en.wikipedia.org/wiki/Software_development&#34;&gt;software development&lt;/a&gt; &lt;strong&gt;Dev&lt;/strong&gt; and
&lt;a href=&#34;https://en.wikipedia.org/wiki/IT_operations&#34;&gt;IT operations&lt;/a&gt; &lt;strong&gt;Ops&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It aims to shorten the &lt;a href=&#34;https://en.wikipedia.org/wiki/Systems_development_life_cycle&#34;&gt;system development life-cycle&lt;/a&gt; and provide
&lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_delivery&#34;&gt;continuous delivery&lt;/a&gt; with high &lt;a href=&#34;https://en.wikipedia.org/wiki/Software_quality&#34;&gt;software quality&lt;/a&gt;.
DevOps is &lt;strong&gt;complementary&lt;/strong&gt; with &lt;a href=&#34;https://en.wikipedia.org/wiki/Agile_software_development&#34;&gt;agile software development&lt;/a&gt;.
Several DevOps aspects came from the agile methodology.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
â€” Wikipedia
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;DevOps is intended to be a cross-functional mode of working [&lt;a href=&#34;#accelerate&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;#devops-handbook&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;#phoenix-project&#34;&gt;3&lt;/a&gt;].
Practitioners use different toolchains rather than a single one.
These toolchains are expected to fit into one or more of the following categories, reflective of key aspects of the development and delivery process.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The major software product development platforms &lt;a href=&#34;https://gitlab.com/&#34;&gt;GitLab&lt;/a&gt;, &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; or &lt;a href=&#34;https://bitbucket.org/dashboard/overview&#34;&gt;BitBucket&lt;/a&gt;
are classical examples of toolchains integration.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;DevOps teams practice daily:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;hdlist&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Coding
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;Code development and review, source code management tools, code merging [&lt;a href=&#34;#clean-code&#34;&gt;4&lt;/a&gt;, &lt;a href=&#34;#clean-architecture&#34;&gt;5&lt;/a&gt;, &lt;a href=&#34;#refactoring&#34;&gt;6&lt;/a&gt;].
Emphasize continuous development and testing.
Continuous testing can only be fully automated.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Building
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;Continuous integration tools, build status.
Emphasize continuous integration, continuous delivery, and continuous deployment [&lt;a href=&#34;#continuous-delivery&#34;&gt;7&lt;/a&gt;, &lt;a href=&#34;#continuous-delivery-pipelines&#34;&gt;8&lt;/a&gt;].&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Testing
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;Continuous testing tools that provide quick and timely feedback on business risks.
Supports continuous development activities.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Packaging
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;Artifact repository, application pre-deployment staging.
Supports the continuous delivery activities in a corporate environment.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Releasing
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;Change management, release approvals, release automation.
Supports the continuous delivery and deployment to productive servers.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Configuring
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;Infrastructure configuration and management, infrastructure as code tools.
Supports the infrastructure as a code approach.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Monitoring
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;Applications performance monitoring, end-user experience.
Emphasize continuous monitoring and alarming, optimize time to recover metric.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_development&#34;&gt;Development&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Development in an agile and DevOps environment means:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_integration&#34;&gt;Continuous integration&lt;/a&gt;, where the coding, building, integration, and testing processes are carried out.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_delivery&#34;&gt;Continuous delivery&lt;/a&gt;, which includes continuous integration but mainly focuses on product delivery.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_deployment&#34;&gt;Continuous deployment&lt;/a&gt;, which aims at automating project deliveries.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2022-04-04-Ci-pipeline.png&#34; alt=&#34;2022 04 04 Ci pipeline&#34; width=&#34;480&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Your development teams shall have automatic continuous integration.
This pipeline builds the software, runs static code analyzer and executes a reasonable set of unit and integration tests.
If not, they are pretending to do DevOps and lying to you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The next step is to configure an automatic continuous delivery.
This pipeline packages the complete solution and delivers as an installation package.
This package can be deployed in staging area without manual configuration.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Only professional DevOps teams shall dare to implement continuous delivery.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The areas that a DevOps engineer must be competent are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Version Control Systems&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Any DevOps engineerâ€™s has expertise in Git, and platforms such as GitHub, GitLab, or BitBucket.
Infrastructure as Code &lt;em&gt;IaC&lt;/em&gt; is used to build and deploy digital products.
Documentation is always synchronized with the source artifacts.
Approaches such as static websites are preferred.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_integration&#34;&gt;Continuous Integration&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_deployment&#34;&gt;Continuous Deployment&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_delivery&#34;&gt;Continuous Delivery&lt;/a&gt; (CI/CD/CD)&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;As for this one, you should look for Jenkins, TeamCity, GitHub, GitLab, or Bitbucket.
All products are built and packaged using continuous integration and continuous delivery approaches.
No manual steps are required to package a release for production.
It is important to note, however, that there are so many DevOps tools out there that it is impossible to cover them.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Testing and Automation Tools&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;One of the duties of a DevOps engineer is to speed up the delivery of software to the clients.
Most companies care about the quality of their software and testing has become an essential part of DevOps engineers&amp;#39; job.
Functional and non-functional testing techniques and tools are used to guaranty quality of the installed solutions.
It provides the obvious benefits of automation, and helps DevOps engineers save a lot of time.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Containers and Cloud Services&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Containers such as Docker and Kubernetes are used to deploy digital solutions.
Microsoft Azure, Google Cloud, Amazon Web Services are some examples.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Communication&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;DevOps is not isolated to a specific role or to a specific team in your organization.
A DevOps specialist must have well-developed empathy because their job implies communication with other people.
Conflicts are not going to help them.
Deep understanding of empiricism and transparency of all available information and measurements is a must for successful communication in an agile and DevOps environment.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Google has published exhaustive insights how they implement DevOps mindset [&lt;a href=&#34;#site-reliability-engineering&#34;&gt;9&lt;/a&gt;].&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_devsecops&#34;&gt;DevSecOps&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Security and corporate governance awareness tremendously grew during the beginning of this decade.
Systematic cyberattacks and more stringent citizen protection laws displayed lack of competence in a lot of IT departments.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2022-04-04-DevOps-SecDevOps.png&#34; alt=&#34;2022 04 04 DevOps SecDevOps&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;DevOps engineers shall always also be DevSecOps specialists and master:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Collective Responsibility&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Security is not something ephemeral whose progress and contribution cannot be measured.
Each person in the organization has their own security responsibility and must be aware of their own contribution to the organizationâ€™s security stance.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Collaboration and Integration&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Security can only be achieved through collaboration, not confrontation.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Pragmatic Implementation&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;They focus on application development to ensure safety, privacy and trust in the digital society.
Organizations shall be able to pragmatically approach security in DevOps.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Bridge the Divide between Compliance and Development&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The key to addressing the gap between compliance and development is to identify applicable controls, translating them to appropriate software measures and identifying inflection points within the software lifecycle where these controls can be automated and measured.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Automation&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Software quality can be better by improving the thoroughness, timeliness and frequency of testing.
Processes that can be automated should be automated, and the other ones should be considered for elimination.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Measurement, Monitoring, Report and Action&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The results during software development as well as post-delivery must be continuously controlled by the qualified people at the right time for DevSecOps to succeed.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;bootstrap-devops-adoption&#34;&gt;Bootstrap Your DevOps Adoption&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are already using agile approaches to develop your digital products.
You want to start your journey with DevOps.
Success requires actions in three areas.
First, your development teams must adopt automated pipelines to create a new version of your application and deploy it.
Second, you shall monitor your productive servers to infer service level agreement metrics.
Indicators are used to improve the application to changing usage patterns.
Third, a continuous improvement initiative shall continuously improve quality and effectiveness.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You shall provide at least the following capabilities for all your teams and products:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Development&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Focus on automation and repeatability.
Measure deployment frequency and deployment duration.&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Each product can be checked out locally from a git repository and built with less than five commands.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Each product is built in a continuous delivery pipeline and packaged for deployment in a staging area or on production.
Static code analysis and automated tests are executed in the pipeline.
They provide an automated, tracked and documented quality gate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Each production version is tagged in the repository including associated documentation and technical instructions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Running&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Focus is on time to repair rather than time between issues.
Measure mean-time to recovery, production failure rate and change failure rate.&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Each instance has a monitoring feature, which enabled us to provide realtime information about resource usage, heartbeat, health status and warnings.
You can rely on an automated alert and response system to troubleshoot and monitor your enterprise servers.
The developing team can quickly rectify errors or hiccups in the workflow without disturbing the operations teams.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Each instance monitor view is accessible to all involved collaborators.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Each deployed product has a set of measurable targets and the associated metrics to track them.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You have a documented process to handle security issues in a timely manner.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You have a documented process to mitigate proactively potential security, performance and governance issues.
A governance goal could be to always update libraries once a security defect is corrected.
Empiricism and data are the building block to quality and sustainable improvements.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Continual_improvement_process&#34;&gt;Continuous Improvement&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Take small steps.
Measure number of improvements, average lead time, and improvement impact.&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Each product development team has a continuous improvement initiative.
The measures for the next releases are documented and progress is tracked.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Each measure is regularly evaluated for adequacy and success.
Does the measure improve the overall quality of the product?
Do the actions measurably improve the associated metrics?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_checklist&#34;&gt;Checklist&lt;/h3&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;You give access to a product repository.
I can check out the whole project and build it locally with one command.+
&lt;em&gt;I shall install the needed development tools based on written instruction available in the repository.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You give access to a product repository.
I can initiate a complete build and delivery action in a continuous integration and delivery pipeline.+
&lt;em&gt;I shall use the CI/CD tool chosen for the product.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I can check out, build and deploy the two last releases on a staging area with less than ten commands.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You give me access to the list of all issues and changes ongoing in the repository.
The list is specific to one product.
I see the information such as priority, cycle-time of these issues and in which release the issue was fixed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You give me read-only access to the health dashboard of any test and productive server on which the product runs.
I see:&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Uptime, availability, last down events with time of occurrence, duration and explanation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Database, memory, CPU, etc. usage and trends,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;List of alarms with the involved components and resolution status.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You give a list of improvements to continuously improve the quality of the product.
For each improvement, a list of actions and their status are available.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You automate everything.
All automation solutions are documented.
Manual configuration or installation are banned.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Microsoft has published a checklist for &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/architecture/checklist/dev-ops&#34;&gt;Azure DevOps&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A vendor-agnostic checklist is &lt;a href=&#34;https://devopschecklist.com/&#34;&gt;the DevOps checklist&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here are some of the most critical DevOps metrics
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_2&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_2&#34; title=&#34;View footnote.&#34;&gt;2&lt;/a&gt;]&lt;/sup&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock text-center&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2022-04-04-elite-dora-success.png&#34; alt=&#34;2022 04 04 elite dora success&#34; width=&#34;70%&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Elite teams have tremendous overall performance when improving in the areas tracked through these metrics.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;hdlist&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Deployment Frequency
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;It analyzes how frequently you are deploying the current release of software into production.
Deployment automation is covered through &lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_deployment&#34;&gt;continuous deployment&lt;/a&gt; and
&lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_delivery&#34;&gt;continuous delivery&lt;/a&gt;.
Higher frequencies correlate with high-performance teams.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Average Lead Time
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;It identifies how long it takes to develop, examine, deliver, and deploy a brand-new requirement through &lt;a href=&#34;https://en.wikipedia.org/wiki/Lead_time&#34;&gt;lead time&lt;/a&gt; tracking.
&lt;a href=&#34;https://en.wikipedia.org/wiki/Value_stream&#34;&gt;Value stream&lt;/a&gt; approaches emphasize optimizing lead time.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Meantime To Recovery
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;Measures the time between an interruption due to deployment or system failure and full recovery through
&lt;a href=&#34;https://en.wikipedia.org/wiki/Mean_time_to_recovery&#34;&gt;mean time to recovery&lt;/a&gt; &lt;em&gt;MTTR&lt;/em&gt; tracking.
Focus is on efficient recovery and away from mean time between failure.
If your organization can recover in minutes, the failure rate is seldom critical.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Change Failure Rate
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;Indicates how often a teamâ€™s changes or hotfixes lead to failures after the code has been deployed.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Additional metrics often are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;hdlist&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Deployment Speed
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;It suggests how quickly you can deploy a new software version into the production environment.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Production Failure Rate
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;It analyses how frequently your software crashes in production for a particular period through
&lt;a href=&#34;https://en.wikipedia.org/wiki/Failure_rate&#34;&gt;failure rate&lt;/a&gt;.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_cultural_change&#34;&gt;Cultural change&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;DevOps initiatives create cultural changes in companies by transforming the way operations, developers and testers collaborate during the development and delivery processes.
Getting these groups to work cohesively is a critical challenge in enterprise adoption.
DevOps is as much about culture, the toolchains are only instruments to implement the approach.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Organizational culture is a strong predictor of IT and organizational performance.
Cultural practices such as information flow, collaboration, shared responsibilities, learning from failures and encouraging new ideas are central to DevOps.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Team-building and other employee engagement activities are often used to create an environment that fosters this communication and cultural change within an organization.
DevOps as a service approach allows developers and operations teams to take greater control of their applications and infrastructure without hindering speed.
It also transfers the onus of owning a problem on to the development team, making them much more careful in their stride.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The 2015 State of DevOps Report discovered that the top seven measures with the strongest correlation to organizational culture and successful DevOps are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Organizational investment,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Team leaders&amp;#39; experience and effectiveness,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Continuous delivery,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The ability of different disciplines &lt;em&gt;development, operations and security&lt;/em&gt; to achieve win-win outcomes,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Organizational performance,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deployment pain,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lean management practices.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_lessons_learnt&#34;&gt;Lessons Learnt&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;DevOps will only be successful if your organization adopts agile values.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Support transparency, inspection and adaption.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;These pillars are central to empiricism and lean thinking.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nurture commitment, focus, openness, respect and courage.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These are the official values of &lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Be honest with yourself.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you do not have concrete and visible initiatives in the areas of development &lt;em&gt;Dev&lt;/em&gt;, running &lt;em&gt;Ops&lt;/em&gt; and continuous improvement, you are just pretending to be a professional.
But in reality you are just an amateur.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_glossary&#34;&gt;Glossary&lt;/h3&gt;
&lt;div class=&#34;hdlist&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Continuous Integration
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;Fowler, 2006 - a software development practice where members of a team integrate their work frequently, usually at least daily.
Multiple integrations per day shall be possible.
Each integration is verified by an automated build including tests to quickly detect errors.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Pair Programming
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;Williams &amp;amp; Kessler, 2003 â€“ style of programming in which two programmers work side by side at one computer, continually collaborating on the same design, algorithm, code or test.
The &lt;strong&gt;driver&lt;/strong&gt; types and writes the design.
The &lt;strong&gt;navigator&lt;/strong&gt; observes the driver and looks for defects.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Refactoring
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;Fowler, 2014 - the process of changing a software system in such a way that it does not change the external structure of the code, only the internal.
When you refactor, you are simply improving the design of the code after it has been written.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Single Command Build
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;Biedenharn, personal communication, October 2018 - describes the goal of automating the process of turning the code into a fully functional program.
It functions with a single command, thus not requiring a multistep procedure.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Single Source Repository
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;Fowler, 2006 - allows teams to keep the main project codebase in one easy-to-access location.
This allows for easy version control; and, for any new team members to get up and running easily.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Technical Excellence
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;managing constraints on software development via techniques, individual skills, and practices as a team.
Generally, this includes test-driven development, collective code ownership, continuous integration, &lt;em&gt;ego-less programming&lt;/em&gt; (Gerald Weinberg).
Personal commitment to self-improvement in pursuit of software development as a craft is the driver for technical excellence.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Test-Driven Development
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;development driven by automated tests &lt;em&gt;published by Beck, 2014&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Red: Write a test that does not work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Green: Make the test work quickly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Refactor: Clear up all duplications made in the process to make the test work.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Unit Testing
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;testing the smallest units possible to prove what was written is true.
Unit testing frameworks are Xunit or NUnit for C# and .Net, Junit for Java, PyUnit for Python, Cppunit for C++.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;technical-debt&#34;&gt;&lt;/a&gt;[1] &lt;a href=&#34;../../2022/technical-debt/&#34;&gt;Technical Debt&lt;/a&gt;
Marcel Baumann. 2022&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;devops-sme&#34;&gt;&lt;/a&gt;[2] &lt;a href=&#34;../../2021/devops-for-small-applications/&#34;&gt;DevOps for Small Applications&lt;/a&gt;
Marcel Baumann. 2021&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;zero-defect&#34;&gt;&lt;/a&gt;[3] &lt;a href=&#34;../../2020/advocate-zero-bug-policy-in-your-projects/&#34;&gt;Advocate Zero Bug Policy in Your Projects&lt;/a&gt;
Marcel Baumann. 2020&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;legacy-system-refactoring&#34;&gt;&lt;/a&gt;[4] &lt;a href=&#34;../../2020/legacy-systems-refactoring/&#34;&gt;Legacy System Refactoring&lt;/a&gt;
Marcel Baumann. 2020&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;how-healthy-is-your-product&#34;&gt;&lt;/a&gt;[5] &lt;a href=&#34;../../2018/how-healthy-is-your-product-delivery-pipeline-check/&#34;&gt;How Healthy is Your Product Delivery Pipeline&lt;/a&gt;
Marcel Baumann. 2018&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_references&#34;&gt;References&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;accelerate&#34;&gt;&lt;/a&gt;[1] N. Forsgren, J. Humble, and G. Kim, &lt;em&gt;Accelerate: The Science of Lean Software and DevOps&lt;/em&gt;. IT Revolution Press [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B07B9F83WM&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B07B9F83WM&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;devops-handbook&#34;&gt;&lt;/a&gt;[2] G. Kim and N. Forsgren, &lt;em&gt;DevOps Handbook&lt;/em&gt;, Second. IT Revolution Press, 2021 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B01M9ASFQ3&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B01M9ASFQ3&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;phoenix-project&#34;&gt;&lt;/a&gt;[3] G. Kim, &lt;em&gt;The Phoenix Project a novel about IT, DevOps, and helping your business win&lt;/em&gt;. IT Revolution Press [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0988262592&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0988262592&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;clean-code&#34;&gt;&lt;/a&gt;[4] R. C. Martin, &lt;em&gt;Clean Code&lt;/em&gt;. Prentice Hall, 2009 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0132350882&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0132350882&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;clean-architecture&#34;&gt;&lt;/a&gt;[5] R. C. Martin, &lt;em&gt;Clean Architecture&lt;/em&gt;. Pearson, 2017 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0134494164&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0134494164&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;refactoring&#34;&gt;&lt;/a&gt;[6] M. Fowler, &lt;em&gt;Refactoring&lt;/em&gt;, Second. Addision-Wesley, 2018 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0134757599&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0134757599&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;continuous-delivery&#34;&gt;&lt;/a&gt;[7] J. Humble and D. Farley, &lt;em&gt;Continuous Delivery&lt;/em&gt;. Addison-Wesley Professional, 2010 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0321601912&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0321601912&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;continuous-delivery-pipelines&#34;&gt;&lt;/a&gt;[8] D. Farley, &lt;em&gt;Continuous Delivery Pipelines&lt;/em&gt;. 2021 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B096YGZVZ9&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B096YGZVZ9&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;site-reliability-engineering&#34;&gt;&lt;/a&gt;[9] B. Beyer, C. Jones, J. Petoff, and N. R. Murphy, &lt;em&gt;Site Reliability Engineering&lt;/em&gt;. Oâ€™Reilly Media, Inc., 2016 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/1492029505&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/1492029505&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. The first conference dedicated to DevOps themes was held in 2009 in Ghent, Belgium.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_2&#34;&gt;
&lt;a href=&#34;#_footnoteref_2&#34;&gt;2&lt;/a&gt;. The DevOps Research and assessment DORA has defined these key metrics and a strong correlation with high-performance organizations.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: DevOps for Small Applications</title>
      <link>https://blog.tangly.net/blog/2021/devops-for-small-applications/</link>
      <pubDate>Thu, 05 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2021/devops-for-small-applications/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_devops_for_small_applications&#34;&gt;DevOps for Small Applications&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-08-02-head.png&#34; alt=&#34;2021 08 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/DevOps&#34;&gt;DevOps&lt;/a&gt; is the combination of cultural philosophies, practices and tools that increase an organizationâ€™s ability to deliver at high velocity.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It evolves and improves products at a faster pace than organizations using traditional software development and infrastructure management processes.
This speed enables organizations to better serve their customers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_how_it_works&#34;&gt;How It Works&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Under a DevOps model, development and operations teams are no longer &lt;em&gt;siloed&lt;/em&gt;.
Sometimes, these two teams are merged into a single team where the engineers work across the entire application lifecycle.
The work is from development through test, deployment to operations.
The range of skills is not limited to a single function.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In some DevOps models, quality assurance and security teams may also become more tightly integrated with development and operations.
When security is the focus of everyone on a DevOps team, this is sometimes referred to as &lt;em&gt;DevSecOps&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-08-02-devops-cycle.png&#34; alt=&#34;2021 08 02 devops cycle&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These teams practice automating processes that historically have been manual and slow.
They use a technology stack and tooling, which helps them operate and evolve applications quickly and reliably.
These tools also help engineers independently carry out tasks that normally would have required help from other teams.
This increases a teamâ€™s velocity.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock important&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-important&#34; title=&#34;Important&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You will &lt;strong&gt;automate&lt;/strong&gt; every workflow in the long term to achieve speed and &lt;strong&gt;reliability&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You will merge your Scrum software development teams, quality assurance groups, operations teams and testing groups into single product teams.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_benefits&#34;&gt;Benefits&lt;/h3&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Speed&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Move at high velocity, so you can innovate for customers faster, adapt to changing markets better, and grow more efficient at driving business results.
The DevOps model enables your developers and operations teams to achieve these results.
For example, microservices and continuous delivery let teams take ownership of services and then release updates to them quicker.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Rapid Delivery&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Increase the frequency and pace of releases, so you can innovate and improve your product faster.
The quicker you can release new features and fix bugs, the faster you can respond to your customersâ€™ needs and build a competitive advantage.
Continuous integration and continuous delivery are practices that automate the software release process, from build to deploy.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Reliability&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Ensure the quality of application updates and infrastructure changes, so you can reliably deliver at a more rapid pace while maintaining a positive experience.
Use practices like continuous integration and continuous delivery to test that each change is functional and safe.
Monitoring and logging practices help you stay informed of performance in real-time.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Scale&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Operate and manage your infrastructure and development processes at scale.
Automation and consistency help you manage complex or changing systems efficiently and with reduced risk.
For example, infrastructure as code helps you manage your development, testing and production environments in a repeatable and more efficient manner.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Improved Collaboration&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Build more effective teams under a DevOps cultural model, which emphasizes values such as ownership and accountability.
Developers and operations teams collaborate closely, share many responsibilities, and combine their workflows.
This reduces handover inefficiencies and diminishes cycle-time.
It reduces, for example, handover periods between developers and operations, writing code that takes into account the environment in which it is run.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Security&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Move quickly while retaining control and preserving compliance.
You can adopt a DevOps model without sacrificing security by using automated compliance policies.
For example, using infrastructure as code and policy as code, you can define and then track compliance at scale.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_devops_adoption&#34;&gt;DevOps Adoption&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Transitioning to DevOps requires a change in culture and mindset.
At its simplest, DevOps is about removing the barriers between two traditionally siloed teams, development and operations.
In some organizations, there may not even be separate development and operations teams; engineers may do both.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With DevOps, the two teams work together to optimize both the productivity of developers and the reliability of operations.
They strive to communicate frequently, increase efficiencies, and improve the quality of services they provide to customers.
They take full ownership for their services, often beyond where their stated roles or titles have traditionally been scoped.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Quality assurance and security teams may also become tightly integrated with these teams.
Organizations using a DevOps model have teams that view the entire development and infrastructure lifecycle as part of their responsibilities.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_devops_practices&#34;&gt;DevOps Practices&lt;/h3&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_integration&#34;&gt;Continuous Integration&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Continuous integration is a software development practice where developers regularly merge their code changes into a central repository.
Automated builds and tests are run upon changes in the repository.
The key goals of continuous integration are to find and address bugs quicker, improve software quality, and reduce the time it takes to validate software updates.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_delivery&#34;&gt;Continuous Delivery&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Continuous delivery is a software development practice where code changes are automatically built, tested, and prepared for a release to production.
It expands upon continuous integration by deploying all code changes to a testing environment or a production environment after the build stage.
When continuous delivery is implemented properly, developers will always have a deployment-ready build artifact.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Modular Systems and Microservices&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The microserviceâ€™s architecture is a design approach to build a single application as a set of small services.
Each service runs in its own process and communicates with other services through a well-defined interface using a lightweight mechanism.
Microservices are built around business capabilities; each service is scoped to a single purpose.
You can use different frameworks or programming languages to write microservices and deploy them independently, as a single service, or as a group of services.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Infrastructure_as_code&#34;&gt;Infrastructure as Code&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Infrastructure as code is a practice in which infrastructure is provisioned and managed to use code and software development techniques.
Examples are version control and continuous integration.
The cloudâ€™s API-driven model enables developers and system administrators to interact with infrastructure programmatically.
They do need to interact manually set up and configure resources.
Engineers can interface with infrastructure using code-based tools and treat infrastructure in a manner similar to how they treat application code.
Because they are defined by code, infrastructure and servers can quickly be deployed using standardized patterns, updated with the latest patches and versions.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Monitoring and Logging&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Organizations monitor metrics and logs to see how application and infrastructure performance impacts the experience of their productâ€™s end user.
By capturing, categorizing, and then analyzing data and logs generated by applications and infrastructure, organizations understand how changes or updates impact users, shedding insights into the root causes of problems or unexpected changes.
Active monitoring becomes increasingly important as services must be available 24/7 and as application and infrastructure update frequency increases.
Creating alerts or performing real-time analysis of these data also helps organizations more proactively monitor their services.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Communication and Collaboration&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Increased communication and collaboration in an organization is one of the key cultural aspects of DevOps.
The use of DevOps tooling and automation of the software delivery process establishes collaboration by physically bringing together the workflows and responsibilities of development and operations.
Building on top of that, these teams set strong cultural norms around information sharing and facilitating communication through the use of chat applications, issue or project tracking systems, and wikis.
This helps speed up communication across developers, operations, and even other teams like marketing or sales, allowing all parts of the organization to align more closely on goals and projects.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_devops_tools&#34;&gt;DevOps Tools&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A DevOps toolchain is a set or combination of tools that aid in the delivery, development, and management of software applications throughout the system development life cycle, as coordinated by an organisation that uses DevOps practices.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image center&#34;&gt;&lt;img src=&#34;../pics/2021-08-02-ci-cd-pipeline.png&#34; alt=&#34;2021 08 02 ci cd pipeline&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Generally, DevOps tools fit into one or more activities, which support specific DevOps initiatives: Plan, Create, Verify, Package, Release, Configure, Monitor, and Version Control.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_what_is_java_devops&#34;&gt;What is Java DevOps?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Java DevOps is simply applying DevOps practices and philosophies to Java app development.
That means that compartmentalized teams are no longer needed when creating Java applications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You should understand these principles:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_integration&#34;&gt;Continuous integration&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;This practice requires developers to periodically merge the code that they have written into a central repository.
After the merge, tests and automated builds are executed.
This allows a team to find issues and quickly quash out bugs, improve the applicationâ€™s quality and then cut the time needed to validate your apps.
Often the step of &lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_delivery&#34;&gt;Continuous Delivery&lt;/a&gt; is added to the pipeline.&lt;br/&gt;
&lt;em&gt;Use a platform such as gitLab, gitHub, BitBucket, or Azure DevOps.
Use Gradle as your build tool.&lt;/em&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_deployment&#34;&gt;Continuous delivery&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;This practice requires your team to release into production all code changes after it is written and then automatically built, and tested.
If continuous integration puts your code changes onto a testing environment, continuous delivery puts it into a production environment.
What does this mean?
You will always have a production-ready Java application!&lt;br/&gt;
&lt;em&gt;Use Gradle to create your application.
Use Docker, Ansible to deploy.&lt;/em&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Microservices&#34;&gt;Microservices&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;DevOps make use of microservices.
Instead of having one big monolithic Java application, your application is made up of smaller and independent applications.&lt;br/&gt;
&lt;em&gt;Use domain driven design DDD as your architecture method.
Prefer standalone applications embedding your application server.&lt;/em&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Infrastructure_as_code&#34;&gt;Infrastructure as a code&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;This practice means that infrastructure is allocated and then managed by using code and development techniques.
Cloud services can help your development and operations teams interact with infrastructure at a scale they are comfortable with.
With infrastructure as a code, servers and infrastructure are deployed fast, automatically patched and can easily be duplicated.&lt;br/&gt;
&lt;em&gt;Use Docker and Ansible to automate your deployment.&lt;/em&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_lessons_learnt&#34;&gt;Lessons Learnt&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The motivations for what has become modern &lt;em&gt;DevOps&lt;/em&gt; and several standard DevOps practices, such as automated build and test, continuous integration, and continuous delivery originated in the Agile world, which dates to the 1990s.
Agile development teams using methods such as &lt;a href=&#34;http://www.extremeprogramming.org/&#34;&gt;eXtreme Programming&lt;/a&gt; could not &lt;em&gt;satisfy the customer through early and continuous delivery of valuable software&lt;/em&gt; unless they subsumed the operation responsibilities associated with their applications, many of which they automated.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Because &lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt; emerged as the dominant Agile framework in the early 2000s, and it omitted the engineering practices that were part of many Agile teams, the movement to automate operations functions splintered from Agile and expanded into what has become modern DevOps &lt;a href=&#34;#accelerate&#34;&gt;[1]&lt;/a&gt;.
Today, DevOps focuses on the deployment of developed software, whether it is developed via Agile or other methodologies.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To practice DevOps effectively, software applications have to meet a set of architecturally significant requirements such as: deployability, modifiability, testability, and monitorability.
You must continuously monitor your infrastructure, network and application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock caution&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-caution&#34; title=&#34;Caution&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You need a cultural change to implement successfully DevOps workflows.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Bigger companies often have trouble with the changes.
Command and control cultures always fail.
It boils down if your culture trusts your collaborators - often called &lt;a href=&#34;https://en.wikipedia.org/wiki/Theory_X_and_Theory_Y&#34;&gt;Theory X and Theory Y&lt;/a&gt; beliefs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Interestingly, the DevOps transformation is similar to an agile transformation.
The approaches, recipes and failures are similar.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Smaller organizations are often more affine with trust.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Although it is possible to practice DevOps with any architectural style, the microservices architectural style is becoming the standard for building continuously deployed systems.
Small size service allows the architecture of an individual service to emerge through continuous refactoring &lt;a href=&#34;#continuous-delivery&#34;&gt;[4]&lt;/a&gt;  hence reducing the need for a big upfront design, allows for releasing the software early[citation needed] and continuously.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_literature&#34;&gt;Literature&lt;/h3&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;accelerate&#34;&gt;&lt;/a&gt;[1] &lt;a href=&#34;https://www.amazon.com/dp/B07B9F83WM&#34;&gt;Accelerate: Building and Scaling High Performing Technology Organizations&lt;/a&gt;.
Nicole Forsgren &amp;amp; Jez Humble &amp;amp; Gene Kene.
IT Revolution. 2018&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;devops-handbook&#34;&gt;&lt;/a&gt;[2]  &lt;a href=&#34;https://www.amazon.com/dp/B01M9ASFQ3&#34;&gt;The DevOps Handbook: How to create World-Class Agility, Reliability, Security in Technology
Organizations&lt;/a&gt;.
Gene Kim &amp;amp; Jez Humble &amp;amp; Patrick Debois &amp;amp; John Willis.
IT Revolution. 2016&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;phoenix-project&#34;&gt;&lt;/a&gt;[3] &lt;a href=&#34;https://www.amazon.com/dp/0988262592&#34;&gt;The Phoenix Project: A Novel about IT, DevOps, and Helping Your Business Win&lt;/a&gt;.
Gene Kim &amp;amp; Kevin Behr. 2013&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;continuous-delivery&#34;&gt;&lt;/a&gt;[4] &lt;a href=&#34;https://www.amazon.com/dp/0321601912&#34;&gt;Continuous Delivery: Reliable Software Releases through Build, Test and Deployment
Automation&lt;/a&gt;.
Jez Humble &amp;amp; David Farley. 2011&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Gitlab for Bachelor Students</title>
      <link>https://blog.tangly.net/blog/2021/gitlab-for-bachelor-students/</link>
      <pubDate>Mon, 18 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2021/gitlab-for-bachelor-students/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_gitlab_for_bachelor_students&#34;&gt;Gitlab for Bachelor Students&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-01-03-head.jpg&#34; alt=&#34;720&#34; width=&#34;480&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Computer science students shall be proficient with a basic set of software development techniques.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Technical excellence&lt;/em&gt; is a mandatory skill for all software developers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Agile development approaches&lt;/em&gt; are state of the industry and used in almost all software development initiatives.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;DevOps&lt;/em&gt; approaches are used in modern organizations.
They predate agile development approaches.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Technical schools should provide an in-depth experience in these areas to prepare their students for their future activities after completing their bachelor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The below mind map consolidates concepts, tools and approaches based on the &lt;a href=&#34;https://about.gitlab.com/&#34;&gt;GitLab&lt;/a&gt; tooling established in some universities.
The approach emphasizes &lt;strong&gt;agile&lt;/strong&gt; and &lt;strong&gt;DevOps&lt;/strong&gt; concepts and approaches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/students-proficiencies.svg&#34; alt=&#34;students proficiencies&#34; width=&#34;1317&#34; height=&#34;943&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Italic terms identify concrete tools.
Green font marks Gitlab features.
Light blue background concepts map to technical university guidelines.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You should develop software applications using agile and DevOps techniques.
You shall put your source code under a version management system.
The actual industrial standard is &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt;, a distributed version control system - &lt;a href=&#34;https://en.wikipedia.org/wiki/Distributed_version_control&#34;&gt;DVCS&lt;/a&gt; -.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;More sophisticated source code management systems based on git with additional agile and DevOps functionalities are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; is a closed source solution and most well-known solution.
Microsoft acquired them in 2020.
Some Swiss technical universities - ZHAW, University of Bern - use the academic GitHub campus program.
CI and CD pipelines are not part of the GitHub product and must be installed separately.
The academic program means you receive GitHub licenses.
Your organization is responsible for running the software on the premises.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://about.gitlab.com/&#34;&gt;Gitlab&lt;/a&gt; is an open source solution and strong contender to GitHub.
CI and CD pipelines are part of the product.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/dashboard/overview&#34;&gt;Bitbucket&lt;/a&gt; is a closed source solution of Atlassian.
CI and CD pipelines are part of the product.
Atlassian also owns JIRA, Confluence and Trello.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://azure.microsoft.com/en-us/services/devops/&#34;&gt;Azure Devops&lt;/a&gt; is a closed source solution and Microsoft answers to .NET development.
CI and CD pipelines access is under definition by Microsoft.
They slowly open their product to additional development stacks such as Java, Python.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gitea.io/&#34;&gt;Gitea&lt;/a&gt; is a community-managed lightweight code hosting solution written in Go.
The project is hosed on GitHub.
It is published under the MIT license.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gogs.io/&#34;&gt;Gogs&lt;/a&gt; is a painless self-hosted Git service.
The project is hosed on GitHub.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gitolite.com/&#34;&gt;Gitolite&lt;/a&gt; allows you to set up git hosting on a central server.
It has fine-grained access control and many more powerful features.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Schools often select &lt;a href=&#34;https://about.gitlab.com/&#34;&gt;GitLab&lt;/a&gt; due to his open source license and the tremendous DevOps functionality.
The gitlab solution supports source code versioning, DevOps pipelines, agile development approaches, and quality insurance for the produced artifacts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The technical university of Lucerne &lt;a href=&#34;https://www.hslu.ch/en/&#34;&gt;HSLU&lt;/a&gt; has selected &lt;a href=&#34;https://about.gitlab.com/&#34;&gt;the GitLab&lt;/a&gt; platform as the standard DevOps environment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Well-known companies in Switzerland such as Roche Diagnostics, UBS&lt;a href=&#34;#ubs-gitlab&#34;&gt;[1]&lt;/a&gt;, Siemens&lt;a href=&#34;#siemens-gitlab&#34;&gt;[2]&lt;/a&gt; have also standardized on this platform.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Our students can more easily bridge between academical teachings and industrial practices and acquire deeper understanding of DevOps and agile practices.
Semester and bachelor theses are easier to realize through the use of known software development tool chains.
Students can concentrate on the content of their thesis.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_basic_git_knowledge_for_students&#34;&gt;Basic Git Knowledge for Students&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Studying the history of software development practices shows the raise and fall of &lt;a href=&#34;https://en.wikipedia.org/wiki/Source_Code_Control_System&#34;&gt;SCCS&lt;/a&gt;,
&lt;a href=&#34;https://en.wikipedia.org/wiki/Concurrent_Versions_System&#34;&gt;CVS&lt;/a&gt;, ClearCase, Visual Source Safe, or
&lt;a href=&#34;https://en.wikipedia.org/wiki/Apache_Subversion&#34;&gt;Subversion&lt;/a&gt;.
The current most popular and used tool is &lt;a href=&#34;https://en.wikipedia.org/wiki/Git&#34;&gt;Git&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Any software developer or web designer can create a git hosted project with a few commands in the shell.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Linux distributions often include the git application.
If not use the package manager to download and install the git tools.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MacOS users should use &lt;a href=&#34;https://brew.sh/&#34;&gt;homebrew&lt;/a&gt; as a package manager.
Homebrew can download and install a huge set of Unix packages.To install git, you just have to execute &lt;em&gt;brew install git&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The huge advantage of package managers is the update function to install new versions of your applications without any configuration activities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are a Windows user you can find a Windows package on the &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;git home page&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Git has 3 different &lt;em&gt;areas&lt;/em&gt; for your code:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Working directory&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The area that you will be doing all of your work in (creating, editing, deleting, and organizing files).&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Staging area&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The area where you will list the changes that you have made to the working directory.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Repository&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Where Git permanently stores the changes you have made as different versions of the project.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;shell&#34;&gt;git init &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
git clone https://gitlab.enterpriselab.ch/tangly/tangly-os.git &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;

git add README.md &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
git add &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;(4)&lt;/b&gt;

git commit &lt;span style=&#34;color: #000080&#34;&gt;-m&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;commit message, should be clear and legible&amp;#34;&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;5&#34;&gt;&lt;/i&gt;&lt;b&gt;(5)&lt;/b&gt;
git push &lt;i class=&#34;conum&#34; data-value=&#34;6&#34;&gt;&lt;/i&gt;&lt;b&gt;(6)&lt;/b&gt;
git pull &lt;i class=&#34;conum&#34; data-value=&#34;7&#34;&gt;&lt;/i&gt;&lt;b&gt;(7)&lt;/b&gt;

git status &lt;i class=&#34;conum&#34; data-value=&#34;8&#34;&gt;&lt;/i&gt;&lt;b&gt;(8)&lt;/b&gt;
git remote &lt;i class=&#34;conum&#34; data-value=&#34;9&#34;&gt;&lt;/i&gt;&lt;b&gt;(9)&lt;/b&gt;
git &lt;span style=&#34;color: #000080&#34;&gt;--version&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;10&#34;&gt;&lt;/i&gt;&lt;b&gt;(10)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Create&lt;/strong&gt; a new repository for the root folder of your project, the folder &lt;em&gt;.git&lt;/em&gt; is created and contains all the git tracking information.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Clone&lt;/strong&gt; the repository &lt;em&gt;tangly-os&lt;/em&gt; and copy all files into the current folder.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Add the README file to git.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Add all files to git.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;5&#34;&gt;&lt;/i&gt;&lt;b&gt;5&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Commit files.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;6&#34;&gt;&lt;/i&gt;&lt;b&gt;6&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Push files to the remote repository you cloned in step 2.
Your changes are now public and available to other developers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;7&#34;&gt;&lt;/i&gt;&lt;b&gt;7&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Pull files from the remote repository you cloned in step 2.
Your local repository contains the last public changes of other developers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;8&#34;&gt;&lt;/i&gt;&lt;b&gt;8&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Returns status information about your local project.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;9&#34;&gt;&lt;/i&gt;&lt;b&gt;9&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Returns the list of remote repositories your project is connected to.
Often you have just one remote to synchronize with.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;10&#34;&gt;&lt;/i&gt;&lt;b&gt;10&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Displays the version of your git installation.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;See our blog &lt;a href=&#34;../../2017/git-local-repositories-for-the-impatient&#34;&gt;Git Local Repositories For the Impatient&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;See our blog &lt;a href=&#34;../../2016/git-branches-for-the-impatient&#34;&gt;Git Branches for the Impatient&lt;/a&gt; for more advanced commands.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_ci_pipelines_for_students&#34;&gt;CI Pipelines for Students&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-01-03-cicd_pipeline.png&#34; alt=&#34;720&#34; width=&#34;480&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The minimal gradle build file of a Java project is very simple and compact&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;gradle&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;apply&lt;/span&gt; &lt;span style=&#34;color: #990000;font-weight: bold&#34;&gt;plugin:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;java&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Multi-module Gradle build file requires an additional &lt;em&gt;gradle.settings&lt;/em&gt; file identifying your modules.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;gradle&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;include&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;net.tangly.bdd&amp;#39;&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;include&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;net.tangly.bus&amp;#39;&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;include&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;net.tangly.commons&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The initial build file for each module is the same as for a minimal gradle project.
You can now compile, test and check your application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;shell&#34;&gt;gradle build &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
gradle &lt;span style=&#34;color: #0086B3&#34;&gt;test &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
&lt;/span&gt;gradle check &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
gradle clean &lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;(4)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Compile the simple or multi-module Java project.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Execute the unit tests of the project.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Perform static analysis checks if you define them.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Clean the output folders and delete all generated files.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are now ready to create a complete continuous integration pipeline of your project in gitlab.
A complete &lt;em&gt;.gitlab-ci.yml&lt;/em&gt; configuration for a gradle project would be:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;openjdk:15&lt;/span&gt;

&lt;span style=&#34;color: #008080&#34;&gt;variables&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;

&lt;span style=&#34;color: #008080&#34;&gt;before_script&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;export GRADLE_USER_HOME=`pwd`/.grade&lt;/span&gt;

&lt;span style=&#34;color: #008080&#34;&gt;stages&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;build&lt;/span&gt;
  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;test&lt;/span&gt;

&lt;span style=&#34;color: #008080&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #008080&#34;&gt;stage&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;build&lt;/span&gt;
  &lt;span style=&#34;color: #008080&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;./gradlew --build-cache assemble&lt;/span&gt;
  &lt;span style=&#34;color: #008080&#34;&gt;cache&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$CI_COMMIT_REF_NAME&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;policy&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;push&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;paths&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;build&lt;/span&gt;
      &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;.gradle&lt;/span&gt;

&lt;span style=&#34;color: #008080&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #008080&#34;&gt;stage&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;test&lt;/span&gt;
  &lt;span style=&#34;color: #008080&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;./gradlew check&lt;/span&gt;
  &lt;span style=&#34;color: #008080&#34;&gt;cache&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$CI_COMMIT_REF_NAME&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;policy&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;pull&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;paths&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;build&lt;/span&gt;
      &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;.gradle&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_java_development_environment&#34;&gt;Java Development Environment&lt;/h3&gt;
&lt;div class=&#34;admonitionblock warning&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-warning&#34; title=&#34;Warning&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Please prefer workstation powered with Linux or macOS if you are developing in Java, Groovy or Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You will be more efficient and avoid all the problems related to virus scanners, missing packages or arcane path length problems.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Install the latest LTS JDK and the latest JDK on your workstation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install IntelliJ IDEA IDE.
Students can request a student license and work with the Ultimate edition.
The community edition is free for everybody.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the static analysis function of the IntelliJ IDEA has a static analysis feature.&lt;/p&gt;
&lt;div class=&#34;olist loweralpha&#34;&gt;
&lt;ol class=&#34;loweralpha&#34; type=&#34;a&#34;&gt;
&lt;li&gt;
&lt;p&gt;Select the file or package to inspect in the project view.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click the right mouse button to display the context menu and select the menu item &lt;em&gt;Analyze/Inspect Codeâ€¦â€‹&lt;/em&gt;.
The findings will teach you how to write better Java code and eliminate common errors.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Gradle to build your application&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;IntelliJ IDEA environment provides all the tools to work efficiently locally.
All the tools identified in the above mindmap are supported in IDE and associated plugins.
Students can work offline and learn the tools in a gentle manner.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The students can use the &lt;a href=&#34;https://www.jetbrains.com/help/idea/running-inspections.html&#34;&gt;IDEA Static Code Analyzer&lt;/a&gt; without any additional configuration.
The quality is good enough and the feature empowers junior developers to learn modern and correct Java code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;More advanced scenarios use &lt;a href=&#34;https://spotbugs.github.io/&#34;&gt;SpotBugs&lt;/a&gt; and the associated IDEA plugin.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_how_to_write_unit_tests_for_a_java_application&#34;&gt;How to Write Unit Tests for a Java Application&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You should write unit and integration tests for your Java application using:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://junit.org/junit5/&#34;&gt;JUnit 5&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://site.mockito.org/&#34;&gt;Mockito&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://assertj.github.io/doc/&#34;&gt;AssertJ&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_how_to_document_your_project&#34;&gt;How to Document Your Project&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Static code generators are becoming the standard approach for technical documentation.
One huge advantage is you can check the whole documentation into your git repository.
You have a synchronisation between a released version of your application and the corresponding documentation.
Both are stored in the same repository and can be marked with a version label You can use:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.markdownguide.org/&#34;&gt;Markdown&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://asciidoc.org/&#34;&gt;AsciiDoc&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;IntelliJ has native support for markdown and an excellent plugin for Asciidoc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Gitlab provides the &lt;a href=&#34;https://docs.gitlab.com/ee/user/project/pages/&#34;&gt;Pages&lt;/a&gt; concept to create and publish a complete documentation of a product.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_diagrams&#34;&gt;Diagrams&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-01-03-diagrams.png&#34; alt=&#34;720&#34; width=&#34;480&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://plantuml.com/&#34;&gt;PlantUML&lt;/a&gt; is a simple and powerful tool for diagramming.
The tool is compatible with git philosophy and static website generators.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The IntelliJ Asciidoc is used to write technical documentation and to display embedded PlantUML diagrams.
Asciidoc format has native support for PlantUML diagrams.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Students have training in technical notation such as UML, BPNM, C4 and others.
They can now apply these notations to their projects using plantUML.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_agile_and_scrum&#34;&gt;Agile and Scrum&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Students have training in agile development and the Scrum framework.
Gitlab allows them to apply these &lt;a href=&#34;https://about.gitlab.com/solutions/agile-delivery/&#34;&gt;Agile Delivery Concepts&lt;/a&gt; to their semester and bachelor projects.
Lecturers have access to the agile and Scrum artifacts and can qualify the quality of the work.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_advanced_git_for_complex_team_development&#34;&gt;Advanced Git for Complex Team Development&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once you master the basic commands, consider learning advanced commands like:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_merge&#34;&gt;Merge&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Merge your branch &lt;em&gt;my-branch&lt;/em&gt; back into &lt;em&gt;trunk&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;shell&#34;&gt;git commit â€“m &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;Some commit message&amp;#34;&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
git checkout trunk &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;git merge my-branch &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Develop some code and commit it in the currently selected my-branch.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Switched to branch &lt;em&gt;trunk&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Merge the branch &lt;em&gt;my-branch&lt;/em&gt; into &lt;em&gt;trunk&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_rebase&#34;&gt;Rebase&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Rebase trunk into your branch &lt;em&gt;my-branch&lt;/em&gt;.
Note that after a rebase, the commit ids of the rebased branch are new.
A rebase is not simply a moving of commits around in history.
Git actually creates brand-new commits with new commit ids and permanently deletes the old commits.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You should prefer to rebase only with local branches.
Avoid rebasing shared branches.
If you rebase a branch that was pulled from GitHub or GitLab, and then push it back, the server will reject it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;shell&#34;&gt;git rebase my-branch trunk&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_squash&#34;&gt;Squash&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Git squash is a technique that helps you to take a series of commits and condense it to a few commits.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So letâ€™s see how to squash the last three commits to a single commit.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;shell&#34;&gt;git rebase &lt;span style=&#34;color: #000080&#34;&gt;-i&lt;/span&gt; HEAD~3&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The following content will be shown:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;shell&#34;&gt;pick 474bfdc2 3rd last commit
pick 1bffc15c 2nd last commit
pick 474bf0c2 last commit&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For the commits that you want to squash, replace the pick instruction with fixup, so it becomes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;shell&#34;&gt;fixup 474bfdc2 3rd last commit
fixup 1bffc15c 2nd last commit
pick 474bf0c2 last commit&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_cherry_picking&#34;&gt;Cherry Picking&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Cherry-picking in Git means choosing a commit from one branch and applying it onto another.
This is in contrast with other ways such as &lt;em&gt;merge&lt;/em&gt; and &lt;em&gt;rebase&lt;/em&gt; which normally apply many commits onto another branch.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can display the hashes of your commits in the &lt;em&gt;trunk&lt;/em&gt; with the command:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;shell&#34;&gt;git log &lt;span style=&#34;color: #000080&#34;&gt;--oneline&lt;/span&gt; trunk&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now you can cherry-pick the commit you are interested in and apply it into your branch.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;shell&#34;&gt;git checkout my-branch
git cherry-pick &amp;lt;commit-hash&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_local_and_remote_branch&#34;&gt;Local and Remote Branch&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Read the post &lt;a href=&#34;../../2016/git-branches-for-the-impatient&#34;&gt;Git Branches for the Impatient&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_pull_request&#34;&gt;Pull Request&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Read the documentation of GitLab, BitBucket or GitHub.
You will use pull requests if you are working in a team for a project.
Sadly, students rareley work teams during their studies.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2017/git-local-repositories-for-the-impatient&#34;&gt;Git Local Repositories for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2016/git-branches-for-the-impatient&#34;&gt;Git Branches for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2020/creating-a-technical-website-with-hugo-and-asciidoc&#34;&gt;Creating a Technical Website with Hugo and AsciiDoc&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2020/support-comments-for-static-hugo-website&#34;&gt;Support Comments For Static Hugo Website&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;ubs-gitlab&#34;&gt;&lt;/a&gt;[1] &lt;a href=&#34;https://www.inside-it.ch/de/post/ubs-schliesst-den-umzug-in-die-devcloud-ab-20210813&#34;&gt;UBS schliesst Umzug auf GitLab&lt;/a&gt;.
&lt;a href=&#34;https://www.inside-it.ch/&#34;&gt;inside-it&lt;/a&gt;. 2021-08-13.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;siemens-gitlab&#34;&gt;&lt;/a&gt;[2] &lt;a href=&#34;https://about.gitlab.com/customers/siemens/&#34;&gt;Siemens GitLab&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
  </channel>
</rss>
