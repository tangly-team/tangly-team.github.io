<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tangly Components – series-students</title>
    <link>https://blog.tangly.net/tags/series-students/</link>
    <description>Recent content in series-students on tangly Components</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 01 Oct 2023 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://blog.tangly.net/tags/series-students/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Blog: Agile Visual Tools</title>
      <link>https://blog.tangly.net/blog/2023/agile-visual-tools/</link>
      <pubDate>Sun, 01 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2023/agile-visual-tools/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_agile_visual_tools&#34;&gt;Agile Visual Tools&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2023-10-01-head.png&#34; alt=&#34;2023 10 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Why is visibility so important for any agile or &lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt; team?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When you are running an agile product development initiative, your ultimate goal is customer satisfaction with the delivered solution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The project coordination responsibilities are, however, not limited to this single goal.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The product owner shall nurture the vision, roadmap, the release plan and customer journey.
You must coordinate the workflow of your team, refine the product backlog, control identified risks, and track deadlines.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The development team shall inform about progress, incremental deliveries, technical debt, impediments and risks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_why_visual_tools&#34;&gt;Why Visual Tools?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Various practices exist to forecast product development progress, like burn-downs, burn-ups, cumulative flow, or velocity diagrams.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;While proven useful, these do not replace the importance of &lt;strong&gt;empiricism&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In complex environments, what will happen is unknown.
Only what has already happened may be used for forward-looking decision-making.
Visual aids optimally support the Scrum pillars of &lt;em&gt;transparency&lt;/em&gt;, &lt;em&gt;inspection&lt;/em&gt; and &lt;em&gt;adaptation&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Most of these diagrams naturally provide the time dimension necessary for forecasting.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You cannot manage what you cannot measure.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Peter Drucker
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Criticism and critics are welcome.
Bring and sell better solutions.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Marcel Baumann
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_scrum_visual_aids&#34;&gt;Scrum Visual Aids&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2023-10-01-visibility-accountability.png&#34; alt=&#34;2023 10 01 visibility accountability&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Visibility ensures that trust, reliability and accountability exist in a team.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Diagrams are information radiators.
They provide easy and legible access to progress information.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If your team, Scrum Master, Product Owner or stakeholders cannot see what the team is doing, it creates the impression that you are doing lots of &lt;em&gt;nothing&lt;/em&gt;.
Or do lots of things completely &lt;em&gt;wrong&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These doubts are one of the fastest ways to find yourself in a quagmire of unfinished work.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Making your work visible raises expectation, and luckily, it raises opinions of you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The time wasted extracting progress status out of a teammate or following up on interdependent tasks &lt;strong&gt;will&lt;/strong&gt; make you risk failing your sprint.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Working at a sustainable pace can only be achieved if you make proper use of the time available.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Your team and anyone else for that matter cannot trust someone who keeps progress hidden.
They are in the dark, &lt;em&gt;which leads to uncertainty&lt;/em&gt;.
They tend to assume something is either being done or not being done and either get stuck into it themselves.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;How reliable you are depends on how transparent you are about what you have taken responsibility for.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And how much your team can trust you to handle it to completion without causing stress to the team.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The agile community experiments with various approaches to visualize what is going on.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2023-10-01-burndown-diagrams.png&#34; alt=&#34;2023 10 01 burndown diagrams&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Burn-down and burn-up diagrams are available for sprints, epics, releases and products.
This is not a measure of work done but work which is &lt;strong&gt;still to be done&lt;/strong&gt;.
It is a valuable tool to use as a thermometer or symptom checker.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Flat-lining is a symptom of a few things:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You are working on too many stories at a time.
You are doing lots of nothing, progress gets done very slowly.
We recommend introducing &lt;a href=&#34;https://en.wikipedia.org/wiki/Work_in_process&#34;&gt;WIP&lt;/a&gt; limits.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your team hast too many started but unfinished stories at the end of the sprint.
We recommend institutionalizing &lt;a href=&#34;https://en.wikipedia.org/wiki/Pair_programming&#34;&gt;pair programming&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Mob_programming&#34;&gt;mob programming&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your tasks are not granular enough.
Progress is slow and initial estimation does not reflect effective effort.
One of the things which we tried is not to accept any six-hour tasks and on agreeing to decompose these tasks further.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Because of its appealing visual format, your team members can understand this chart easily.
It is used to summarize a thorough description of a feature from an end-user perspective.
That is why you can update the chart only after the completion of a user story.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Sprint Burndown Chart&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The sprint burndown charts depict how many stories are completed and how much work remains in the ongoing sprint.
Sprint burndown chart displays user stories, which are selected by the team in the sprint planning session.&lt;br/&gt;
&lt;em&gt;You measure finished stories providing value to the customer.
You shall not track hours or task completion.&lt;/em&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Product Burndown Chart&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Product burndown charts can visualize the entire project; in short, it looks at the big picture.
It shows how much work is remaining for your team to match the product goals.
The vertical axis displays the product backlog items in the product burndown chart, while the horizontal axis implies the sprint numbers.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Release Burndown Chart&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;This burndown chart is responsible for tracking all the progress made by your scrum team during reaching a release point.
The vertical axis of the chart depicts the stories.
The horizontal axis represents the time your team members spent.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Cumulative flow diagrams&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The diagrams are available for sprints, epics, releases, and products.
These diagrams show the bottlenecks due to team member specializations or dependencies to external actors.&lt;br/&gt;
&lt;em&gt;Lean approaches request to identify and implement corrective measures to remove identified bottlenecks.&lt;/em&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Velocity visualization&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Business can envision and calculate when they can potentially release a product or subset of a product based on how fast the team is working.
If the backlog has been estimated and refinement done properly, the number of story points it contains should be comparable to the velocity the team has been achieving sprint after sprint.&lt;br/&gt;
Remember estimation cannot be a single value.
It must be a set of values with a success probability for each value.
You did learn gaussian curves during your school time.&lt;br/&gt;
An average velocity can be applied to the total of story points in the backlog.
With this information, business can plan on tentative release dates.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;openblock float-group float-group&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2023-10-01-cumulative-diagrams-scrum.jpg&#34; alt=&#34;2023 10 01 cumulative diagrams scrum&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock right&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2023-10-01-cumulative-diagrams.jpg&#34; alt=&#34;2023 10 01 cumulative diagrams&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Experienced teams sometimes use additional visual aids to improve effectivity:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Effective work effort per Sprint&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Issues flow diagrams&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cycle-time of stories or cycle-time of errors&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_devops_visual_aids&#34;&gt;DevOps Visual Aids&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;DORA diagrams are similar visual aids focused on &lt;a href=&#34;https://en.wikipedia.org/wiki/DevOps&#34;&gt;DevOps&lt;/a&gt; activities&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock text-center&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2023-10-01-dora-metrics.png&#34; alt=&#34;2023 10 01 dora metrics&#34; width=&#34;80%&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Deployment frequency (DF).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Lead_time&#34;&gt;Lead time&lt;/a&gt; for changes (LT), you can also compute the average age of issues and cumulative flow diagrams for issues.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Change failure rate (CFR).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Mean_time_to_recovery&#34;&gt;Meantime to Recovery&lt;/a&gt; &lt;em&gt;MTTR&lt;/em&gt;.
&lt;em&gt;Called time to restore service in the above dashboard&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_github_tools&#34;&gt;GitHub Tools&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt; is a web development platform that is inspired by your work style.
It enables you to handle software development projects side-by-side with 40 million developers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The main features are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The tool features built-in review options for hosting code and review changes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Integrate with apps you can find in GitHub Marketplace.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Coordinate tasks, stay tuned, and optimize output whatever the size of the team.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Write up comprehensive documents specifying all the awesome features of the software you develop.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Store all your code in one place.
The platform with its 100+ million hosted projects provides repositories equipped with tools to help you host, version and release private, public, or open-source code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The updated projects functions better support agile approaches such as Scrum or Kanban.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Various addons are available for more complex diagrams and visualizations.
Start small, learn and adapt your development tools.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_lessons_learnt&#34;&gt;Lessons Learnt&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Visual aids improve your understanding of your product state.
They support teams to take improvements as a regular activity.
&lt;a href=&#34;https://en.wikipedia.org/wiki/PDCA&#34;&gt;PDCA&lt;/a&gt; is easier to implement with realtime visual checks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Lean approaches strongly advocate visual aids to display process state and identify areas of improvements.
Time-based diagrams show changes over time.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A picture is worth a thousand words.
The visualization of facts often helps to identify improvement potential.
The same diagrams measure the success of specific improvement measures.
One well-documented successful approach are the four DORA metrics and associated graphs.
Experienced teams can improve effectivity and efficiency with more advanced technique [&lt;a href=&#34;#site-reliability-engineering&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;#devops-handbook&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;#your-code-as-crime-scene&#34;&gt;3&lt;/a&gt;, &lt;a href=&#34;#software-design-x-rays&#34;&gt;4&lt;/a&gt;]&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;scrum-guide&#34;&gt;&lt;/a&gt;[1] &lt;a href=&#34;https://scrumguides.org/scrum-guide.html&#34;&gt;Scrum Guide&lt;/a&gt;.
Ken Schwaber and Jeff Sutherland. 2020.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;devops-ideas&#34;&gt;&lt;/a&gt;[2] &lt;a href=&#34;../../2022/introducing-devops-ideas/&#34;&gt;Introducing DevOps Ideas&lt;/a&gt;.
Marcel Baumann. 2022.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_references&#34;&gt;References&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;site-reliability-engineering&#34;&gt;&lt;/a&gt;[1] B. Beyer, C. Jones, J. Petoff, and N. R. Murphy, &lt;em&gt;Site Reliability Engineering&lt;/em&gt;. O’Reilly Media, Inc., 2016 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/1492029505&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/1492029505&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;devops-handbook&#34;&gt;&lt;/a&gt;[2] G. Kim and N. Forsgren, &lt;em&gt;DevOps Handbook&lt;/em&gt;, Second. IT Revolution Press, 2021 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B01M9ASFQ3&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B01M9ASFQ3&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;your-code-as-crime-scene&#34;&gt;&lt;/a&gt;[3] A. Tornhill, &lt;em&gt;Your Code as a Crime Scene&lt;/em&gt;. O’Reilly Media [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B00ZB5XWBI&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B00ZB5XWBI&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;software-design-x-rays&#34;&gt;&lt;/a&gt;[4] A. Tornhill, &lt;em&gt;Software Design X-Rays&lt;/em&gt;. Pragmatic Bookshelf [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B07BVRLZ87&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B07BVRLZ87&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Semantic Commits for the Impatient</title>
      <link>https://blog.tangly.net/blog/2023/semantic-commits-for-the-impatient/</link>
      <pubDate>Thu, 28 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2023/semantic-commits-for-the-impatient/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_semantic_commits_for_the_impatient&#34;&gt;Semantic Commits for the Impatient&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2023-12-02-head.png&#34; alt=&#34;2023 12 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;strong&gt;conventional commits&lt;/strong&gt; specification is a lightweight convention on top of commit messages.
The additional information classifies the type of work performed in the commit.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A developer infers the importance of the task by looking to the type of the commit.
The message communicates the nature of changes to teammates, the public, and other stakeholders.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Contributors of project repositories know that a well-designed Git commit message is the best way to communicate the context about a change to other developers.
And in fact, they help themselves in the future.
A diff will tell you what has changed, but only the confirmation message can say why.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It provides an easy set of rules for creating an explicit commit history which makes it easier to write automated tools on top of.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The development team can use scripts to filter and aggregate commit information based on the tags in the commit message.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This convention dovetails with &lt;a href=&#34;http://semver.org/&#34;&gt;SemVer&lt;/a&gt;, by describing the features, fixes, and breaking changes made in commit messages.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_structure&#34;&gt;Structure&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The commit message should be structured as follows:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;[&lt;/span&gt;optional scope]: &amp;lt;description&amp;gt;           &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
[optional body]

[optional footer(s)]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Use the body to explain what and why.
Do not explain how.
That is the code.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The commit contains the following structural elements to communicate intent to the consumers of your library:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;fix&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;a commit of the type fix patches a bug in your codebase.
This correlates with &lt;strong&gt;PATCH&lt;/strong&gt; in Semantic Versioning.
It is used to identify production changes related to backward-compatible bug fixes.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;feature&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;a commit of the type feat introduces a new feature to the codebase.
It is used to identify production changes related to new backward-compatible abilities or functionality.
This correlates with &lt;strong&gt;MINOR&lt;/strong&gt; in Semantic Versioning.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;BREAKING CHANGE&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;a commit that has a footer BREAKING CHANGE:, or appends a ! after the type/scope, introduces a breaking API change.
This correlates with &lt;strong&gt;MAJOR&lt;/strong&gt; in Semantic Versioning.
A BREAKING CHANGE can be part of commits of any type.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Other types are allowed, for example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;build&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The build type is used to identify development changes related to the build system.
They involve scripts, configurations or tools, and package dependencies.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;ci&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The ci type is used to identify development changes related to the continuous integration and deployment system.
They involve scripts, configurations or tools.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;doc&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The doc type is used to identify documentation changes related to the project.
Whether intended externally for the end users (in case of a library) or internally for the developers.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;refactor&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The refactor type is used to identify development changes related to modifying the codebase, which neither adds a feature nor fixes a bug.
Examples are removing redundant code, simplifying the code, or renaming variables.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;test&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The test type is used to identify development changes related to tests.
chore:
Activities not adding new features or fixing a fault.
This type is used when you do not know which other tag you could use.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;footers other than BREAKING CHANGE: &amp;lt;description&amp;gt; may be provided and follow a convention similar to git trailer format.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_how_to_create_a_semantic_commit_with_git&#34;&gt;How to Create a Semantic Commit with Git&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The command line for a complex git commit message is simple:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;git commit -m &amp;#34;fix(core): remove deprecated and defunct wtf* apis&amp;#34;                              &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt; &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
           -m &amp;#34;These apis have been deprecated in v8, so they should stick around till v10.&amp;#34;
           -m &amp;#34;PR Close #33949&amp;#34;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;We use multiple &lt;em&gt;-m&lt;/em&gt; in order to concatenate paragraphs instead of simple lines.
The header and body are supposed to be separated by a blank line.
That is distinctly true due to the paragraphs.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Summary in present tense.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Your IDE probably provides a comfortable user interface to create a commit message as a set of paragraphs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Simply use your preferred IDE to write semantic commits with multiple blocks.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_thoughts&#34;&gt;Thoughts&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Please start with a small list and extend it if needed.
I suggest: feature, refactor, fix, build, chore
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Ask yourself if identifying the subsystem where the changes were performed makes sense for your application.
Often changes are not local to a specific component.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Some teams put a ticker number instead of the subsystem name.
It makes sense if your platform transforms the ticket number into a link to the ticket content.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I use the tags &lt;em&gt;feature&lt;/em&gt;, &lt;em&gt;refactor&lt;/em&gt;, &lt;em&gt;build&lt;/em&gt;, and &lt;em&gt;chore&lt;/em&gt;.
I do not put component or ticket information in the parenthesis after the tag.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I put the ticket number in the summary of the commit message.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I seldom use the footer for breaking change information.
I handle this information through semantic versioning in tags.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2016/git-branches-for-the-impatient/&#34;&gt;Git Branches for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2017/git-local-repositories-for-the-impatient/&#34;&gt;Git Local Repositories for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2023/git-rebase-and-merge-for-the-impatient/&#34;&gt;Git Rebase and Merge for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2023//git-tag-for-the-impatient/&#34;&gt;Git Tag for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2023/semantic-commits-for-the-impatient/&#34;&gt;Semantic Commits for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. I never needed the &lt;em&gt;doc&lt;/em&gt; tag. Feel free to use it if you find it useful for your product.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Git Tag for the Impatient</title>
      <link>https://blog.tangly.net/blog/2023/git-tag-for-the-impatient/</link>
      <pubDate>Wed, 27 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2023/git-tag-for-the-impatient/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_git_tag_for_the_impatient&#34;&gt;Git Tag for the Impatient&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2023-09-04-head.png&#34; alt=&#34;2023 09 04 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The development software team has reached a milestone.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A working application with a set of features is available.
All tests are green.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The application can potentially be shipped to internal or external customers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;How can you mark this event in the git repository of the application?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Use tags to recognize this state in the list of changes of your shared &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; repository.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_listing_your_tags&#34;&gt;Listing Your Tags&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Listing the existing tags in Git is straightforward.
Just type git tag (with optional -l or --list):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;git tag
&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;v1.0
v2.0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This command lists the tags in alphabetical order; the order in which they are displayed has no real importance.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_creating_tags&#34;&gt;Creating Tags&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Git supports two types of tags: lightweight and annotated.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Annotated tags, however, are stored as full objects in the Git database.
They have a check sum.
They contain the tagger name, email, and date.
THey have a tagging message, and can be signed and verified with GNU Privacy Guard (GPG).
It is generally recommended that you create annotated tags, so you can have all this information; but if you want a temporary tag or for some reason do not want to keep the other information, lightweight tags are available too.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Annotated Tags Creating an annotated tag in Git is simple.
The easiest way is to specify -a when you run the tag command:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;git tag &lt;span style=&#34;color: #116329&#34;&gt;-a&lt;/span&gt; v1.4.0 &lt;span style=&#34;color: #116329&#34;&gt;-m&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;1.4.0 (2020.2)&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;git tag
&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;v0.1
v1.3.1
v1.4.0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;em&gt;-m&lt;/em&gt; specifies a tagging message, which is stored with the tag.
If you do not specify a message for an annotated tag, Git launches your editor, and you can type it in.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_sharing_tags&#34;&gt;Sharing Tags&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;By default, the git push command does not transfer tags to remote servers.
You will have to explicitly push tags to a shared server after you have created them.
This process is just like sharing remote branches you can run:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git push origin --tags&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want to correct an error from a tagged version, you should create a branch.
If you simply check out the tag, you are in a detached head mode.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git checkout -b v2-fixex v2.0.0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_thoughts&#34;&gt;Thoughts&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can find a lot of information on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/git&#34;&gt;Stack Overflow&lt;/a&gt;.
Beware when reading the answers on Stack Overflow that Git commands have changed over time.
Select new posts to find the best answers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The nifty-gritty details can be found in the official &lt;a href=&#34;https://git-scm.com/book/en/v2&#34;&gt;Git documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;em&gt;Pro Git&lt;/em&gt; book can be downloaded from &lt;a href=&#34;https://git-scm.com&#34;&gt;Git SCM&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2016/git-branches-for-the-impatient/&#34;&gt;Git Branches for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2017/git-local-repositories-for-the-impatient/&#34;&gt;Git Local Repositories for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2023/git-rebase-and-merge-for-the-impatient/&#34;&gt;Git Rebase and Merge for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2023//git-tag-for-the-impatient/&#34;&gt;Git Tag for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2023/semantic-commits-for-the-impatient/&#34;&gt;Semantic Commits for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Git Rebase and Merge for the Impatient</title>
      <link>https://blog.tangly.net/blog/2023/git-rebase-and-merge-for-the-impatient/</link>
      <pubDate>Tue, 26 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2023/git-rebase-and-merge-for-the-impatient/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_git_rebase_and_merge_for_the_impatient&#34;&gt;Git Rebase and Merge for the Impatient&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2023-09-03-head.png&#34; alt=&#34;2023 09 03 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Both the rebase and merge commands provide similar functionalities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;They combine the work of multiple developers into a single entity, integrating changes between branches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;That about sums up their similarities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The operation &lt;em&gt;git merge&lt;/em&gt; is a way of combining changes from one source branch into another target branch.
The operation leaves commit messages in the history.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The operation &lt;em&gt;git rebase&lt;/em&gt; is a way of moving the changes from one branch onto another branch.
The operation does not leave any commit message in the history.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A simple and powerful approach governing the use of these commands is:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Local branches shall be updated using rebase.
The commit history of the branch stays clean.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Local feature branches shall be regularly synchronized against the default remote branch.
Therefore, team members will have less merge conflicts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remote branches shall be updated using merge.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Before a merge request is created, you can clean up your commit history with an interactive rebase.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Feature branches should be short-lived.&lt;br/&gt;
The implementation of a feature shall be shorter than a Scrum sprint, meaning less than two weeks.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_regular_rebase&#34;&gt;Regular Rebase&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Rebasing a branch in &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; is a way to move the entirety of a branch to another point in the tree.
The simplest example is moving a branch further up in the tree.
As a developer, you want to regularly integrate the latest changes from the default branch into your feature branch&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In Git, a rebase updates your feature branch with the contents of another branch.
This step is important for Git-based development strategies.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Use a rebase to confirm that your branch’s changes do not conflict with any changes added to your target branch after you created your feature branch.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When you rebase:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Git imports all the commits submitted to your target branch after you initially created your feature branch from it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Git stacks the commits you have in your feature branch on top of all the commits it imported from that branch:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock center&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2023-09-03-rebase.png&#34; alt=&#34;2023 09 03 rebase&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To rebase, make sure you have all the commits you want in the rebase in your main branch.
Check out the branch you want to rebase and type&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Standard rebase replays the previous commits on a branch without changes, stopping only if merge conflicts occur.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Fetch the latest changes from main:&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git fetch origin main&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check out your feature branch:&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git checkout my-feature&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rebase it against main:&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git rebase origin/main&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Force push to your remote branch with:&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git push --force-with-lease origin my-feature   &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
git push --force origin my-feature              &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;lease option preserves any new commits added to the remote branch by other people.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;force does not preserve any new commits added to the remote branch by other people.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If there are merge conflicts, Git prompts you to fix them before continuing the rebase.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git rebase main                                 &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;main&lt;/em&gt; branch is the branch you want to rebase on.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock caution&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-caution&#34; title=&#34;Caution&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;git rebase rewrites the commit history.
It can be harmful to do it in shared branches.
It can cause complex and hard to resolve merge conflicts.
In these cases, instead of rebasing your branch against the default branch, consider pulling it with &lt;em&gt;git pull origin main&lt;/em&gt;.
Pulling has similar effects with less risk of compromising the work of your contributors.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_merge&#34;&gt;Merge&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The git merge command will merge any changes that were made to the code base on a separate branch to your current branch as a new commit.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For example, if you are currently working in a branch named dev and would like to merge any new changes that were made in a branch named new-features, you would issue the following command:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git merge new-features&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If there are any uncommitted changes on your current branch, Git will not allow you to merge until all changes in your current branch have been committed.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To handle those changes, you can temporarily stash them:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git stash                                       &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
git merge new-feature                           &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
git stash pop                                   &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;add them to the stash&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;do your merge&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;get the changes back into your working tree&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_interactive_rebase&#34;&gt;Interactive Rebase&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Use an interactive rebase (the --interactive flag, or -i) to simultaneously update a branch while you modify how its commits are handled.
For example, to edit the last five commits in your branch (HEAD~5), run:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git rebase -i HEAD~5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Git opens the last five commits in your terminal text editor, the oldest commit first.
Each commit shows the action to take on it, the SHA, and the commit title:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;pick 111111111111 Second round of structural revisions
pick 222222222222 Update inbound link to this changed page
pick 333333333333 Shifts from H4 to H3
pick 444444444444 Adds revisions from editorial
pick 555555555555 Revisions continue to build the concept part out

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;Rebase 111111111111..222222222222 onto zzzzzzzzzzzz &lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;5 commands&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;Commands:
&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;p, pick &amp;lt;commit&amp;gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; use commit
&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;r, reword &amp;lt;commit&amp;gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; use commit, but edit the commit message
&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;e, edit &amp;lt;commit&amp;gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; use commit, but stop &lt;span style=&#34;color: #cf222e&#34;&gt;for &lt;/span&gt;amending
&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;s, squash &amp;lt;commit&amp;gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; use commit, but meld into previous commit
&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;f, fixup &lt;span style=&#34;color: #0550ae&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;-C&lt;/span&gt; | &lt;span style=&#34;color: #116329&#34;&gt;-c&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;]&lt;/span&gt; &amp;lt;commit&amp;gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; like &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;squash&amp;#34;&lt;/span&gt; but keep only the previous&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;After the list of commits, a commented-out section shows some common actions you can take on a commit:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Pick&lt;/strong&gt; a commit to use it with no changes.
The default option.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Reword&lt;/strong&gt; a commit message.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Edit&lt;/strong&gt; a commit to use it, but pause the rebase to amend (add changes to) it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Squash&lt;/strong&gt; multiple commits together to simplify the commit history of your feature branch.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Replace the keyword pick according to the operation you want to perform in each commit.
To do so, edit the commits in your text editor.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_force_push&#34;&gt;Force push&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Complex operations in Git require you to force an update to the remote branch.
Operations like squashing commits, resetting a branch, or rebasing a branch rewrite the history of your branch.
Git requires a forced update to help safeguard against these more destructive changes from happening accidentally.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Force pushing is not recommended on shared branches, as you risk destroying the changes of others.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;--force-with-lease flag&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The &lt;em&gt;--force-with-lease&lt;/em&gt; flag force pushes.
Because it preserves any new commits added to the remote branch by other people, it is safer than &lt;em&gt;--force&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git push --force-with-lease origin my-feature&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;--force flag&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The &lt;em&gt;--force flag&lt;/em&gt; forces pushes, but does not preserve any new commits added to the remote branch by other people.
To use this method, pass the flag &lt;em&gt;--force&lt;/em&gt; or &lt;em&gt;-f&lt;/em&gt; to the push command:&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git push --force origin my-feature&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_thoughts&#34;&gt;Thoughts&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Both &lt;em&gt;git merge&lt;/em&gt; and &lt;em&gt;git rebase&lt;/em&gt; are very useful commands.
One is not better than the other.
However, there are some very important differences between the two commands that you and your team should take into consideration.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Whenever &lt;em&gt;git merge&lt;/em&gt; is run, an extra merge commit is created.
Whenever you are working in your local repository, having too many merge commits can make the commit history look confusing.
One way to avoid the merge commit is to use &lt;em&gt;git rebase&lt;/em&gt; instead.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;git rebase&lt;/em&gt; is a very powerful feature.
It is risky as well if it is not used in the right way.
The command alters the commit history, so use it with care.
If rebasing is done in the remote repository, then it can create a lot of issues when other developers try to pull the latest code changes.
Remember to only run &lt;em&gt;git rebase&lt;/em&gt; in a local repository.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can find a lot of information on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/git&#34;&gt;Stack Overflow&lt;/a&gt;.
Beware when reading the answers on Stack Overflow that Git commands have changed over time.
Select new posts to find the best answers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The nifty-gritty details can be found in the official &lt;a href=&#34;https://git-scm.com/book/en/v2&#34;&gt;Git documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;em&gt;Pro Git&lt;/em&gt; book can be downloaded from &lt;a href=&#34;https://git-scm.com&#34;&gt;Git SCM&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2016/git-branches-for-the-impatient/&#34;&gt;Git Branches for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2017/git-local-repositories-for-the-impatient/&#34;&gt;Git Local Repositories for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2023/git-rebase-and-merge-for-the-impatient/&#34;&gt;Git Rebase and Merge for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2023//git-tag-for-the-impatient/&#34;&gt;Git Tag for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2023/semantic-commits-for-the-impatient/&#34;&gt;Semantic Commits for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Are Certifications Useful?</title>
      <link>https://blog.tangly.net/blog/2023/are-certifications-useful/</link>
      <pubDate>Fri, 01 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2023/are-certifications-useful/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_are_certifications_useful&#34;&gt;Are Certifications Useful?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2023-09-01-head.jpg&#34; alt=&#34;2023 09 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are several benefits to getting an IT certification, and several associated costs too.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Certifications can give you the chance to learn needed skills, and be a quick way to show employers you have those skills.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;On the other hand, certifications can require studying or coursework.
You will invest a significant amount of time to master the material.
They cost up to several hundred dollars to take.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So how do you know that the benefits will outweigh the costs for you?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Certification or no certification, in the end, what matters most is your actual ability to do the job.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here are a few things to consider as you decide whether to get an IT certification.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_java_certifications&#34;&gt;Java Certifications&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you are a young and ambitious Java developer, ypu must acquire the Oracle certified Java developer certification [&lt;a href=&#34;#ocp-java-17&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;#ocp-java-11&#34;&gt;2&lt;/a&gt;].
I do not think you will be a better programmer after getting a certificate.
The certification program will push you to learn the details of the programming language and the details of the standard libraries.
This knowledge is the difference between a professional engineer and an amateur one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The question is if you want to update your certification each time a new long-term solution is delivered.
Over the years, I acquired the certification for Java 2, 7,8, and 11 releases.
The exam objectives certainly forced me to learn the new features of the language and libraries.
I also discovered some arcane idioms I never used in productive code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I think a young developer should be certified for her main programming language and technology stack she is using daily.
I also acquired the &lt;a href=&#34;https://vaadin.com/learn?version=v14&#34;&gt;Vaadin certification&lt;/a&gt; because I regularly developed full-stack applications with Java and &lt;a href=&#34;https://vaadin.com/&#34;&gt;Vaadin&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_software_architecture_certifications&#34;&gt;Software Architecture Certifications&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A software architect certainly should possess a certification showing his architectural capabilities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The TOGAF standard is still the seminal reference for all software enterprise architecture activities.
On the bright side, the steward &lt;a href=&#34;https://www.opengroup.org/togaf&#34;&gt;Open Group&lt;/a&gt; of the TOGAF certification &lt;a href=&#34;#togaf-certification&#34;&gt;[7]&lt;/a&gt; has realized that agile is the way to develop digital products &lt;a href=&#34;#togaf-certification&#34;&gt;[7]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The iSAQB certification is well-known in Europe and especially in the German-speaking countries.
The foundation now also provides training in agile software architecture in their advanced track &lt;a href=&#34;#agile-architecture&#34;&gt;[6]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Another approach is a master degree in software engineering or computer science.
The curriculum should teach modern ideas [&lt;a href=&#34;#modern-software-engineering&#34;&gt;3&lt;/a&gt;, &lt;a href=&#34;#continuous-delivery&#34;&gt;4&lt;/a&gt;, &lt;a href=&#34;#building-evolutionary-architectures-2nd&#34;&gt;5&lt;/a&gt;, &lt;a href=&#34;#domain-driven-design&#34;&gt;6&lt;/a&gt;].&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_agile_certifications&#34;&gt;Agile Certifications&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Agile approaches and Scrum framework are the regular approach to successfully developer software and digital products.
I expect a professional software developer to have a formal training how to apply correctly the Scrum approach [&lt;a href=&#34;#professional-product-owner&#34;&gt;7&lt;/a&gt;, &lt;a href=&#34;#mastering-professional-scrum&#34;&gt;8&lt;/a&gt;].&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The two biggest Scrum associations &lt;a href=&#34;https://www.scrumalliance.org/&#34;&gt;Scrum Alliance&lt;/a&gt; and &lt;a href=&#34;https://www.scrum.org/&#34;&gt;Scrum.org&lt;/a&gt; provide similar certification paths for Scrum.
For each role, you can progress from beginner, over advanced and finally reach the professional certification level.
You should at least pursue the beginner and advanced level to reflect your professionalism.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I often suggest pursuing the certifications of &lt;a href=&#34;https://www.scrum.org/&#34;&gt;Scrum.org&lt;/a&gt; because you do need to renew them.
&lt;a href=&#34;https://www.scrumalliance.org/&#34;&gt;Scrum Alliance&lt;/a&gt; requests you to renew your certification every two years and provide proof of continuous training.
This approach is similar to PMI.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can find more information in these articles about Scrum master &lt;a href=&#34;#scrum-master-certification&#34;&gt;[1]&lt;/a&gt;, product owner &lt;a href=&#34;#product-owner-certification&#34;&gt;[2]&lt;/a&gt; and developer
&lt;a href=&#34;#developer-certification&#34;&gt;[3]&lt;/a&gt; certification paths.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I strongly advocate to avoid &lt;a href=&#34;https://www.scaledagileframework.com/&#34;&gt;SAFe&lt;/a&gt; trainings because this approach is flawed.
I recognize that sadly &lt;a href=&#34;https://www.scaledagileframework.com/&#34;&gt;SAFe&lt;/a&gt; is very popular in big companies.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you are interested in scaling agile, please consider first a formation and certification in &lt;a href=&#34;https://less.works/&#34;&gt;LeSS&lt;/a&gt;.
I strongly recommend to first master Scrum and lean approaches before tackling scaling approaches in software product development.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_other_certifications&#34;&gt;Other Certifications&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The PMI-ACP &lt;a href=&#34;#pmi-acp-certification&#34;&gt;[4]&lt;/a&gt; is the agile certification from the project management institute.
It has value in North America.
It is quite unknown in Europe.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_thoughts&#34;&gt;Thoughts&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A certification is a proof that a professional software engineer invested in his continuous formation.
Consider acquiring a certification to show your commitment to a specific field in our industry.
But it cannot replace a formal bachelor or master level education in computer science or software engineering.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock caution&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-caution&#34; title=&#34;Caution&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Certifications are quite meaningful for junior engineers.
They learnt the theory and proved they understood the concepts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Experienced engineers are seldom challenged when learning for a certification.
It is more of a memorization exercise and less of learning new techniques.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Training on the job is nice and efficient.
A few lecture days before taking a multiple choice test and receiving a nice certificate is also worth the time.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It definitively cannot replace university level formation.
No country in the world would accept only training on the job for a physician, a surgeon, or a structural engineer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Why does our industry still believe you can work as a professional developer without any formal training?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;scrum-master-certification&#34;&gt;&lt;/a&gt;[1] &lt;a href=&#34;../../2021/scrum-master-formation/&#34;&gt;Scrum Master Certification&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;product-owner-certification&#34;&gt;&lt;/a&gt;[2] &lt;a href=&#34;../../2021/product-owner-formation/&#34;&gt;Product Owner Certification&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;developer-certification&#34;&gt;&lt;/a&gt;[3] &lt;a href=&#34;../../2021/scrum-developer-formation/&#34;&gt;Scrum Developer Certification&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;pmi-acp-certification&#34;&gt;&lt;/a&gt;[4] &lt;a href=&#34;../../2016/pmi-acp-certification/&#34;&gt;PMI ACP Certification&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;java-certification&#34;&gt;&lt;/a&gt;[5] &lt;a href=&#34;../../2023/java-certification/&#34;&gt;Java Certification&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;agile-architecture&#34;&gt;&lt;/a&gt;[6] &lt;a href=&#34;../../2021/agile-software-architecture-is-mainstream/&#34;&gt;Agile Software Architecture is Mainstream&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;togaf-certification&#34;&gt;&lt;/a&gt;[7] &lt;a href=&#34;https://www.opengroup.org/certifications/togaf-certification-portfolio&#34;&gt;TOGAF Certification&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_references&#34;&gt;References&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;ocp-java-17&#34;&gt;&lt;/a&gt;[1] J. Boyarsky and S. Selikoff, &lt;em&gt;OCP Oracle Certified Professional Java SE 17 Study Guide&lt;/em&gt;. Wiley &amp;amp; Sons, Limited, John, 2022 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B09WJP11JL&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B09WJP11JL&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;ocp-java-11&#34;&gt;&lt;/a&gt;[2] J. Boyarsky and S. Selikoff, &lt;em&gt;OCP Oracle Certified Professional Java SE 11 Developer Complete Study Guide&lt;/em&gt;. Wiley &amp;amp; Sons, Incorporated, John, 2020 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B08DF4R2V9&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B08DF4R2V9&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;modern-software-engineering&#34;&gt;&lt;/a&gt;[3] D. Farley, &lt;em&gt;Modern Software Engineering&lt;/em&gt;. Pearson Education, Limited, 2022 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B09GG6XKS4&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B09GG6XKS4&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;continuous-delivery&#34;&gt;&lt;/a&gt;[4] J. Humble and D. Farley, &lt;em&gt;Continuous Delivery&lt;/em&gt;. Addison-Wesley Professional, 2010 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0321601912&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0321601912&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;building-evolutionary-architectures-2nd&#34;&gt;&lt;/a&gt;[5] N. Ford, R. Parsons, and P. Kua, &lt;em&gt;Building Evolutionary Architectures: Automated Software Governance&lt;/em&gt;, Second. O’Reilly Media, 2023 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B0BN4T1P27&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B0BN4T1P27&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;domain-driven-design&#34;&gt;&lt;/a&gt;[6] E. Evans, &lt;em&gt;Domain-driven design&lt;/em&gt;. Addison-Wesley, 2004 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0321125215&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0321125215&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;professional-product-owner&#34;&gt;&lt;/a&gt;[7] D. McGreal and R. Jocham, &lt;em&gt;The Professional Product Owner&lt;/em&gt;. Addison-Wesley Professional [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B07D5ZPJBY&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B07D5ZPJBY&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;mastering-professional-scrum&#34;&gt;&lt;/a&gt;[8] S. Ockerman and S. Reindl, &lt;em&gt;Mastering Professional Scrum&lt;/em&gt;. Addison Wesley, 2019 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B07XTLNPTC&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B07XTLNPTC&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Onboarding Software Developers in Your agile Team</title>
      <link>https://blog.tangly.net/blog/2023/onboarding-software-developers-in-your-agile-team/</link>
      <pubDate>Sat, 01 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2023/onboarding-software-developers-in-your-agile-team/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_onboarding_software_developers_in_your_agile_team&#34;&gt;Onboarding Software Developers in Your agile Team&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2023-07-01-head.png&#34; alt=&#34;2023 07 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now that you have gone through the long and tedious process of hiring a talented developer with vetting and interview activities, it is easy to think that the hard part is done
&lt;a href=&#34;#evaluate-cv&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;#technical-interviews&#34;&gt;[2]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There is no doubt that hiring good people is challenging and competitive, but it is a mistake to think that the challenge ends when you hired a new collaborator.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Onboarding software developers is just as important for getting the most out of the hiring process.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Too many companies neglect this phase to their own detriment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_why_onboarding_matters&#34;&gt;Why onboarding matters?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Onboarding, the process of bringing new employees to a point where they are fully integrated into the company and working at full capacity is a &lt;em&gt;make it or break it&lt;/em&gt; process for companies wanting to compete in the tech world.
Whether you are a startup with only a few employees, or an established company with hundreds of employees, the onboarding process is the first opportunity you have to set up new employees for long-term success.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It can cost employers anywhere from 30-50% of an employee’s yearly salary to replace a developer that leaves.
So when an organization loses employees to a bad onboarding process, the company feels it.
And if there is an insufficient onboarding process, new hires will leave.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One of the most important aspects of onboarding is the timeline.
On the one hand, the practical aspects of onboarding should happen pretty quickly, as outlined below.
On the other hand, it is important to understand that onboarding an employee meaning getting them to a place where they feel fully immersed and capable at your company takes months.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock caution&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-caution&#34; title=&#34;Caution&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Your organization is serious about professional onboarding if you have a formal process description and checklists for the whole onboarding process.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Each phase is described, and each new collaborator has a contact person for onboarding questions.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So what is a realistic expectation for how long it takes to onboard a software engineer?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_how_long_should_it_take&#34;&gt;How long should it take?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Before diving into how long the onboarding process should take, it is important to note that there are different types of onboarding and each requires a different approach and timeline.
There is practical, cultural, and skill onboarding.
All are necessary to successfully onboard a software developer into your company.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_practical_onboarding_1_week&#34;&gt;Practical onboarding (1 week)&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Practical onboarding involves things like benefits signups, company-wide training videos, HR requirements, equipment setup and account access
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2023-07-01-software-engineer.jpg&#34; alt=&#34;2023 07 01 software engineer&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anything essential for the new employee to get paid, access benefits, and function as an employee in the company.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This onboarding should happen anywhere from a day to a week of being hired, depending on the size of the company and the complexity of the practical requirements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This part may seem obvious as a part of onboarding, but this is often the first impression a new employee has of your company, so the way it happens matters.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Do everything you can to make the practical aspect of onboarding seamless, efficient, and even fun &lt;a href=&#34;#macbook&#34;&gt;[3]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If there is a way to gather information from the employee before their start date, even better.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_skill_onboarding_3_6_months&#34;&gt;Skill onboarding (3 – 6 months)&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Just like the practical side of onboarding, skill onboarding should start on the first day for a new employee.
You want the software developer to be well versed in your code base, processes, and systems, so the earlier they can get access to it, the better.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One of the best ways to do this is to require new employees to push out an actual piece of code within the first week of being hired.
Make sure there are safeguards in place, so they cannot do any damage to the code itself, but make sure it is significant enough to give them a complete look at the codebase and the process in place for pushing out code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is also a great opportunity to employ pair programming.
Pair programming sets a new developer up with an experienced developer within the company to work together to complete tickets.
Although the entire team should be available to answer questions, this will give the new employee a single point of contact as they are getting up to speed on how your company works.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For larger companies, this process should involve multiple points of contact, from a senior managerial level to a peer.
Even smaller companies should try and pair new employees with a few different colleagues.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If there are any step-by-step processes expected for developers for coding, communication, and workflow, be sure to have them in writing and readily available.
New employees should not need to go searching for the same information over and over again.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Skill onboarding should take anywhere from 3 to 6 months, with monthly reviews every month to gauge progress
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_2&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_2&#34; title=&#34;View footnote.&#34;&gt;2&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_cultural_onboarding_6_months_1_year&#34;&gt;Cultural onboarding (6 months – 1 year)&lt;/h4&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2023-07-01-cultural-onboarding.jpg&#34; alt=&#34;2023 07 01 cultural onboarding&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Cultural onboarding is often the most overlooked aspect of onboarding, but arguably the most important piece &lt;a href=&#34;#agile-company&#34;&gt;[4]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Developers that stick around do so because they enjoy their work environment, believe in what they are doing, and feel like they belong and matter to the overall company
&lt;a href=&#34;#detecting-agile-bullshit&#34;&gt;[5]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Of course, some aspects of cultural onboarding will happen in tandem with skill onboarding, as the new employee is working directly with teams and individuals within the company to accomplish a common goal.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;However, that in and of itself is not enough to truly translate company culture to a new employee.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Within the first week, there should be some form of communication from the executive management on the larger values of the organization.
The big picture of what the company is trying to accomplish, and a way to interact with the team members should be discussed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you are a small company, this can be as simple as a lunch or coffee with the founder.
For mid-size or large companies, it may need to be more formal
[&lt;a href=&#34;#corporate-culture-and-perfromance&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;#corporate-culture-survival-guide&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;#organizational-culture-and-leadership&#34;&gt;3&lt;/a&gt;].
However, if at all possible, this should happen in person, even for remote workers &lt;a href=&#34;#agile-company&#34;&gt;[4]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We always suggest that new employees do their first two to four weeks of employment on site, if possible.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you are working with a near source team and flying them up to headquarters is not realistic, then make a plan to spend a week or two with the new employees.
Cultural onboarding is about relationship building, and doing so in-person makes a difference.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_best_practices_for_onboarding&#34;&gt;Best practices for onboarding&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As a rule, companies of any size should see the first six months as an employees onboarding period.
Helping employees get acclimated is a necessary step to seeing the return on the sizable investment made in hiring a software developer in the first place.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here are a few simple practices for successful onboarding:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Give them an early coding assignment that matters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Give them access to process, practices, systems, and people right away.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get them connected to peers through pair programming, mob programming, and coding dojos.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Give them a feedback loop through regular reviews.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Give them time to reach their potential.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_lessons_learnt&#34;&gt;Lessons Learnt&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Train your collaborators.
Our company is an agile software boutique with Java and C++ technical stacks.
Our collaborators shall be experts in Scrum &lt;a href=&#34;#scrum-master-formation&#34;&gt;[6]&lt;/a&gt; &lt;a href=&#34;#product-owner-formation&#34;&gt;[7]&lt;/a&gt; &lt;a href=&#34;#scrum-developer-formation&#34;&gt;[8]&lt;/a&gt; and Java &lt;a href=&#34;#java-certification&#34;&gt;[9]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It is a benefit for us if the collaborator is also a professional C++ developer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Walk the talk.
Be an agile company [&lt;a href=&#34;#agile-management&#34;&gt;4&lt;/a&gt;].
Competent engineers find out early if you are really being agile or just pretending to do agile.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Advanced approaches can reduce training and improve cultural match.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;InnerSource &lt;a href=&#34;#inner-source&#34;&gt;[10]&lt;/a&gt; &lt;a href=&#34;#inner-source-patterns&#34;&gt;[11]&lt;/a&gt; is a software development strategy that applies open source best practices to proprietary code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;InnerSource can help establish an open source culture within an organization while retaining software for internal use.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Teams use InnerSource to increase visibility, strengthen collaboration, and break down silos.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;evaluate-cv&#34;&gt;&lt;/a&gt;[1] &lt;a href=&#34;../../2022/evaluate-technical-cvs/&#34;&gt;Evaluate Technical CVs&lt;/a&gt;.
Marcel Baumann. 2022.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;technical-interviews&#34;&gt;&lt;/a&gt;[2] &lt;a href=&#34;../../2023/technical-interviews/&#34;&gt;Technical Interviews&lt;/a&gt;.
Marcel Baumann. 2023.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;macbook&#34;&gt;&lt;/a&gt;[3] &lt;a href=&#34;../../2023/my-new-macbookpro/&#34;&gt;My New MacBook Pro&lt;/a&gt;.
Marcel Baumann. 2023.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;agile-company&#34;&gt;&lt;/a&gt;[4] &lt;a href=&#34;../../2016/what-is-an-agile-company/&#34;&gt;What is an Agile Company?&lt;/a&gt;.
Marcel Baumann. 2016.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;detecting-agile-bullshit&#34;&gt;&lt;/a&gt;[5] &lt;a href=&#34;../../2019/detecting-agile-bullshit/&#34;&gt;Detecting Agile Bullshit&lt;/a&gt;.
Marcel Baumann. 2019.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;scrum-master-formation&#34;&gt;&lt;/a&gt;[6] &lt;a href=&#34;../../2021/scrum-master-formation&#34;&gt;Scrum Master Formation&lt;/a&gt;.
Marcel Baumann. 2021.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;product-owner-formation&#34;&gt;&lt;/a&gt;[7] &lt;a href=&#34;../../2021/product-owner-formation&#34;&gt;Product Owner Formation&lt;/a&gt;.
Marcel Baumann. 2021.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;scrum-developer-formation&#34;&gt;&lt;/a&gt;[8] &lt;a href=&#34;../../2021/scrum-developer-formation&#34;&gt;Scrum Developer Formation&lt;/a&gt;.
Marcel Baumann. 2021.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;java-certification&#34;&gt;&lt;/a&gt;[9] &lt;a href=&#34;../../2021/certified-java-developer/&#34;&gt;Certified Java Developer&lt;/a&gt;.
Marcel Baumann. 2021.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;inner-source&#34;&gt;&lt;/a&gt;[10] &lt;a href=&#34;https://about.gitlab.com/topics/version-control/what-is-innersource/&#34;&gt;What is Inner Source?&lt;/a&gt;.
Gitlab. 2022.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;inner-source-patterns&#34;&gt;&lt;/a&gt;[11] &lt;a href=&#34;https://patterns.innersourcecommons.org/&#34;&gt;Inner Source Patterns&lt;/a&gt;.
Gitlab. 2022.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_references&#34;&gt;References&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;corporate-culture-and-perfromance&#34;&gt;&lt;/a&gt;[1] J. P. Kotter, &lt;em&gt;Corporate Culture and Performance&lt;/em&gt;. Simon &amp;amp; Schuster, Limited, 2008 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B0033C58EU&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B0033C58EU&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;corporate-culture-survival-guide&#34;&gt;&lt;/a&gt;[2] E. H. Schein and P. Schein, &lt;em&gt;Corporate Culture Survival Guide&lt;/em&gt;. Wiley &amp;amp; Sons, Incorporated, John, 2019 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/1119212286&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/1119212286&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;organizational-culture-and-leadership&#34;&gt;&lt;/a&gt;[3] E. H. Schein, &lt;em&gt;Organizational Culture and Leadership&lt;/em&gt;. Jossey-Bass, 2004 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B01MSYH6K8&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B01MSYH6K8&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;agile-management&#34;&gt;&lt;/a&gt;[4] A. Medinilla, &lt;em&gt;Agile Management&lt;/em&gt;. Springer London, Limited, 2012 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/3642289088&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/3642289088&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. Invest in a smooth IT setup. I too often encounter organizations needing months until the new collaborator can finally access all needed applications and resources. Such a cumbersome process demotivates your employees. I am a professional software developer. I really love to have a 4K display, a US keyboard, a quality mouse, and a fast SSD. I will use these tools 8 hours a day for the next years.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_2&#34;&gt;
&lt;a href=&#34;#_footnoteref_2&#34;&gt;2&lt;/a&gt;. Skill onboarding can require formal training. Budget shall be available for books, online and classroom courses.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Teaching Clojure II</title>
      <link>https://blog.tangly.net/blog/2023/teaching-clojure-ii/</link>
      <pubDate>Fri, 09 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2023/teaching-clojure-ii/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_teaching_closure_ii&#34;&gt;Teaching Closure II&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2023-06-02-head.jpg&#34; alt=&#34;2023 06 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Functional programming is hype for the last ten years.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All popular programming languages have added support to functional concepts for years.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Not all developers are embracing the new approach and using the provided constructs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I often have to read source code which uses only idioms defined in the last millennium.
I cringed and asked myself why developers are writing such awkward code?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What does it mean to code with functional paradigms?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I have an interesting test to decide if your code is embracing functional programming approaches:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;You are using library methods with formal parameters being functions or lambda expressions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You use the map, filter, reduce and apply operations instead of conditional control blocks.
Loops and conditional statements are almost disappearing in your code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You declared in your own methods functions as formal parameters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You declared in at least one of your methods a return type being a function.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Clojure is a very nice language to learn functional programming idioms &lt;a href=&#34;#clojure-1&#34;&gt;[1]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_functional_thinking&#34;&gt;Functional Thinking&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The key functional concepts of Clojure [&lt;a href=&#34;#programming-clojure&#34;&gt;1&lt;/a&gt;] are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;All data structures are per default immutable.
Lists, vectors, maps, sets, records are all immutable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Functions are &lt;a href=&#34;https://en.wikipedia.org/wiki/First-class_function&#34;&gt;first-class functions&lt;/a&gt;.
You can also state that functions are first-class citizens.
This means that functions have the same functionality as objects.
For example, they can be assigned to variables, passed in as arguments, or returned from a function.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;defrecord&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;Person&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;firstname&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;lastname&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;])&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;       &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;aPerson&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;-&amp;gt;Person&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;John&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;Doe&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                         &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
&lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; or (def aPerson (Person. &amp;#34;John&amp;#34; &amp;#34;Doe&amp;#34;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;:firstname&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;aPerson&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                          &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; =&amp;gt; &amp;#34;John&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;:lastname&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;aPerson&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                           &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; =&amp;gt; &amp;#34;Doe&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;anotherPerson&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;assoc&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;aPerson&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;:firstname&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;Jane&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;         &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
&lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; =&amp;gt; Jane doe&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Define a new record &lt;em&gt;Person&lt;/em&gt; with two string properties &lt;em&gt;firstname&lt;/em&gt; and &lt;em&gt;lastname&lt;/em&gt;.
The string type is only a hint and not enforce.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Create a new record instance with firstname &lt;em&gt;John&lt;/em&gt; and lastname &lt;em&gt;Doe&lt;/em&gt; and associate it with reference &lt;em&gt;aPerson&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Create a new record instance with the values of &lt;em&gt;aPerson&lt;/em&gt; and the new value &lt;em&gt;Jane&lt;/em&gt; for the &lt;em&gt;firstname&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;defn&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;factorial-loop&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;BigDecimal&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;loop&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;prod&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
      &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;prod&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
      &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;recur&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;dec&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;prod&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)))))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                           &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;defn&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;factorial-tail-recursion&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;BigDecimal&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;letfn&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;result&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;result&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;recur&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;result&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;dec&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))))]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                       &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;recur&lt;/em&gt; expression evaluates the new values for all loop variables and restarts the loop with these values.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;recur&lt;/em&gt; expression evaluates the new values for all function parameters and restarts the function without adding a new stack frame.
This mechanism provides tail-recursion call optimization.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;defn&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;greet&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                                   &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
     &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;([]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;greet&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;you&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
     &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;([&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;greet&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                                       &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; =&amp;gt; Hello you&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;greet&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;World&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                               &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; =&amp;gt; Hello World&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;defn&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;greet&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;rest&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;rest&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;          &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;greet&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;Yan&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;Darryl&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;John&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;Tom&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                          &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; =&amp;gt; Hello Yan (Darryl John Tom)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Define a multi-arity function.
The first declaration is without parameter, the second one has one parameter.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Define a variadic function with a variable number of parameters as the last formal parameter.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_advanced_functional_constructs&#34;&gt;Advanced Functional Constructs&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The regular mapping, filtering, reducing and applying functions are fully supported in Clojure.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Partial_application&#34;&gt;Partial application&lt;/a&gt; to reduce the arity of a function is supported with the &lt;em&gt;apply&lt;/em&gt; construct.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Memoization&#34;&gt;Memoization&lt;/a&gt; is also provided.
Beware of the tradeoff between processing improvement versus memory consumption.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;inc&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;])&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                         &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;;=&amp;gt; (2 3 4 5 6)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;even?&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;range&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                     &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;;=&amp;gt; (0 2 4 6 8)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;reduce&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;])&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                        &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;;=&amp;gt; 15&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;apply&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;str&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;str1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;str2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;str3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;])&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                            &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;;=&amp;gt; &amp;#34;str1str2str3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; partial application on the add function&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;defn&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;adder&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;partial&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;adder&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                                     &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; =&amp;gt; 6&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; memoization of function calls&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
 &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;memoized-fibonacci&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;memoize&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;fn&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
             &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;condp&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
               &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
               &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
               &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;memoized-fibonacci&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;dec&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;memoized-fibonacci&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)))))))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;memoized-fibonacci&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; &amp;#34;Elapsed time: 0.593208 msecs&amp;#34;  =&amp;gt; 37889062373143906&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;memoized-fibonacci&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; &amp;#34;Elapsed time: 0.022459 msecs&amp;#34;  =&amp;gt; 37889062373143906&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_synchronization_concepts&#34;&gt;Synchronization Concepts&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Concurrency is built into the language.
Rich Hickey designed Clojure to specifically address the problems that develop from shared access to mutable state.
Clojure embodies a very clear conception of state that makes it inherently safer for concurrency than most popular programming languages.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Three concepts shall cover all your concurrency needs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Atoms&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;&lt;a href=&#34;https://clojure.org/reference/atoms&#34;&gt;Atoms&lt;/a&gt; provide a way to manage shared, synchronous, independent state.
Atom allows you to endow a succession of related values with an identity.
Atoms are an efficient way to represent some state that will never need to be coordinated with any other, and for which you wish to make synchronous changes&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Refs and Transactions&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;&lt;a href=&#34;https://clojure.org/reference/refs&#34;&gt;Refs&lt;/a&gt; allow you to update the state of multiple identities using transaction semantics.
These transactions have three features:&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;They are atomic, meaning that all refs are updated or none of them are.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;They are consistent, meaning that the refs always appear to have valid states.
A sock will always belong to a dryer or a gnome, but never both or neither.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;They are isolated, meaning that transactions behave as if they executed serially.
If two threads are simultaneously running transactions that alter the same ref, one transaction will retry.
This is similar to the compare-and-set semantics of atoms.&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You might recognize these as the &lt;em&gt;A&lt;/em&gt;, &lt;em&gt;C&lt;/em&gt;, and &lt;em&gt;I&lt;/em&gt; in the &lt;em&gt;ACID&lt;/em&gt; properties of database transactions.
You can think of refs as giving you the same concurrency safety as database transactions, only with in-memory data.
Clojure uses software transactional memory &lt;em&gt;STM&lt;/em&gt; to implement this behavior.&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Agents&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;&lt;a href=&#34;https://clojure.org/reference/agents&#34;&gt;Agents&lt;/a&gt; are a mechanism for sequencing operations on a particular instance of a data structure.
Agents provide independent, asynchronous change of individual locations.
Agents are bound to a single storage location for their lifetime, and only allow mutation of that location (to a new state) to occur as a result of an action.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; Atoms&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;state&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;atom&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;{}))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                         &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;swap!&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;state&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;assoc&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;:x&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                     &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;state&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                              &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
&lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; @state is equivalent to (deref state) =&amp;gt; {:x 42}&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; References&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;account-a&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;ref&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                     &lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;(4)&lt;/b&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;account-b&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;ref&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;defn&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;transfer!&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;amount&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;from&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;dosync&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                                     &lt;i class=&#34;conum&#34; data-value=&#34;5&#34;&gt;&lt;/i&gt;&lt;b&gt;(5)&lt;/b&gt;
   &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;from&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;amount&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
     &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;do&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
       &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;alter&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;from&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;amount&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                  &lt;i class=&#34;conum&#34; data-value=&#34;6&#34;&gt;&lt;/i&gt;&lt;b&gt;(6)&lt;/b&gt;
       &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;alter&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;amount&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)))))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;transfer!&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;account-a&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;account-b&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;account-a&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;account-b&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                               &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; 80 120&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; Agents&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;agent&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                             &lt;i class=&#34;conum&#34; data-value=&#34;7&#34;&gt;&lt;/i&gt;&lt;b&gt;(7)&lt;/b&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;defn&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;increment&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;send&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;increment&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                          &lt;i class=&#34;conum&#34; data-value=&#34;8&#34;&gt;&lt;/i&gt;&lt;b&gt;(8)&lt;/b&gt;
&lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; @x -&amp;gt; 5&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;send&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;increment&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; @x -&amp;gt; 15&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Declare an atom.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Update the value of the atom.
The expression passed as parameter to &lt;em&gt;swap!&lt;/em&gt; is applied to the current value of the atom.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Gets the current value of the atom.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Declare a reference.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;5&#34;&gt;&lt;/i&gt;&lt;b&gt;5&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Define the transactional parenthesis grouping multiple modifications of references.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;6&#34;&gt;&lt;/i&gt;&lt;b&gt;6&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The behavior of alter is:
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Reach outside the transaction and read the reference’s current state.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compare the current state to the state the ref started with within the transaction.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the two differ, make the transaction retry.
Otherwise, commit the altered ref state.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;7&#34;&gt;&lt;/i&gt;&lt;b&gt;7&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Declare an agent.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;8&#34;&gt;&lt;/i&gt;&lt;b&gt;8&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Send the expression to the agent.
The expression is executed asynchronously using a thread pool.
The first parameter of the expression will be the agent value.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Atoms&lt;/strong&gt; allow multiple threads to apply transformations to a single value and guarantee the transformations are atomic.
&lt;em&gt;swap!&lt;/em&gt; takes the atom and a function expecting the current value of the atom.
The result of calling that function with the current value is stored in the atom. multiple calls to swap! may interleave, but each call will run in isolation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Refs&lt;/strong&gt; allow multiple threads to update multiple values in a co-ordinated way.
All updates to all refs inside a sync will complete or none will.
You &lt;strong&gt;must&lt;/strong&gt; write your code such that transaction retries are catered for.
There are a few potential performance tweaks if you can relax the ordering of operations, which &lt;strong&gt;may&lt;/strong&gt; reduce the chance of transaction retry.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_embrace_modern_java&#34;&gt;Embrace Modern Java&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Modern Java adds functional approaches [&lt;a href=&#34;#functional-programming-java&#34;&gt;2&lt;/a&gt;] to the Java language.
I will certainly not pretend that Java is a functional language.
You still can go a long way and write more functional and legible code using the provided mechanisms.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The major constructs are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Lambda Functions and Java Functional Idioms&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Streams and Monoids&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Algebraic Data Types and Pattern Matching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Structured Concurrency and Virtual Threads&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Functional Java means no more &lt;em&gt;for&lt;/em&gt;, &lt;em&gt;while&lt;/em&gt;, and &lt;em&gt;do&lt;/em&gt; loops
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Functional Java means no more checks if a value has the value &lt;em&gt;null&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Virtual Threads means no more asynchronous programming.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock caution&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-caution&#34; title=&#34;Caution&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Java still does not support tail optimization.
This constraint limits the use of recursive constructs in your solution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Partial application is painful in Java due to the type declarations implied with the single abstract method interface approach for lambdas.
Try using &lt;em&gt;var&lt;/em&gt; as much as possible.
Otherwise, you need to type very lengthy type declarations.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_lessons_learnt&#34;&gt;Lessons Learnt&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Clojure is an ideal language to learn and better understand functional programming approaches [&lt;a href=&#34;#functional-thinking&#34;&gt;3&lt;/a&gt;].&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You will probably not use it in a commercial product development.
None of the functional languages such as Clojure, List, F# has taken over the world of programmers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The principles you learnt shall often be applicable to your technology stack.
Your code will certainly be simpler, more legible and maintainable.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Some advanced concepts exist to better integrate Clojure with Java and provide object-oriented features to the language.
I would recommend using Java to teach these concepts and restrict Clojure teaching to functional programming aspects.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I wish you happy coding in the functional world of Clojure.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;clojure-1&#34;&gt;&lt;/a&gt;[1]  &lt;a href=&#34;../../2023/teaching-clojure-i/&#34;&gt;Teaching Clojure I&lt;/a&gt;.
Marcel Baumann. 2023.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_references&#34;&gt;References&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;programming-clojure&#34;&gt;&lt;/a&gt;[1] S. D. Halloway, &lt;em&gt;Programming Clojure&lt;/em&gt;. 2012 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B07BN4C92X&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B07BN4C92X&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;functional-programming-java&#34;&gt;&lt;/a&gt;[2] V. Subramaniam, &lt;em&gt;Functional Programming In Java Harnessing The Power Of Java 8 Lambda Expressions&lt;/em&gt;. The Pragmatic Programmers, 2014 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B00J8W0OTI&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B00J8W0OTI&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;functional-thinking&#34;&gt;&lt;/a&gt;[3] N. Ford, &lt;em&gt;Functional Thinking: Paradigm Over Syntax&lt;/em&gt;. O’Reilly Media [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B00LEX6SP8&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B00LEX6SP8&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. Recursion is sufficient to have a Turing complete language. Loops are not required.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Teaching Clojure I</title>
      <link>https://blog.tangly.net/blog/2023/teaching-clojure-i/</link>
      <pubDate>Thu, 01 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2023/teaching-clojure-i/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_teaching_closure_i&#34;&gt;Teaching Closure I&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2023-06-01-head.jpg&#34; alt=&#34;2023 06 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Functional programming is hype for the last ten years.
You find a lot of blogs and videos stating object-oriented languages are doomed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Almost all the most popular languages have added support to functional concepts in the last years.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Java introduced lambda expressions and single abstract method interfaces &lt;em&gt;SAM&lt;/em&gt; with Java 8 in March 2014.
Java developers are empowered to write functional code for almost ten years.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Other languages such as Python, C++ or C# added their own functional extensions in newer revisions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Lisp_(programming_language)&#34;&gt;Lisp&lt;/a&gt; dialects fully supported functional paradigms since the sixties of the last century.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The theory behind functional model is \$lambda\$ &lt;em&gt;calculus&lt;/em&gt;.
&lt;a href=&#34;https://en.wikipedia.org/wiki/Alonzo_Church&#34;&gt;Alonso Church&lt;/a&gt; formulated the &lt;a href=&#34;https://en.wikipedia.org/wiki/Lambda_calculus&#34;&gt;lambda calculus&lt;/a&gt; theory in the thirties of the last century and millennium.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Why are functional programming paradigms suddenly so popular?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Functional languages have the following properties:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Functions are first-class objects.
That is, functions can be created at runtime, passed around, returned, and in general, used like any other datatype.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Data is immutable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Functions are pure; that is, they have no side effects.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;OO &lt;em&gt;Object Orientation&lt;/em&gt; makes code understandable by encapsulating moving parts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;FP &lt;em&gt;Functional Programming&lt;/em&gt; makes code understandable by minimizing moving parts.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Michael Feathers
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For many tasks, functional programs are easier to understand, less error-prone, and much easier to reuse.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_clojure_development_environment&#34;&gt;Clojure Development Environment&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Clojure [&lt;a href=&#34;#programming-clojure&#34;&gt;1&lt;/a&gt;] is a splendid approach to learn functional programming idioms.
The language is well-documented.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The integration in the Java ecosystem and virtual machine is well-done.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Purely functional programs typically operate on immutable data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Instead of altering existing values, altered copies are created and the original is preserved.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Since the unchanged parts of the structure cannot be modified, they can often be shared between the old and new copies, which saves memory.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The IntelliJ plugin &lt;a href=&#34;https://cursive-ide.com/&#34;&gt;Cursive&lt;/a&gt; hugely simplifies writing code and testing it
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.
&lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;IntelliJ IDEA&lt;/a&gt; is probably the most popular IDE for Java developers
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_2&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_2&#34; title=&#34;View footnote.&#34;&gt;2&lt;/a&gt;]&lt;/sup&gt;.
People are familiar with its functions and do not need to learn a new tool.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_declarations&#34;&gt;Declarations&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can define values and functions:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;defn&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;square&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;param&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;param&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;param&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                         &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;list&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                   &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;computed&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;square&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                              &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Define a square function &lt;em&gt;defn&lt;/em&gt; with one parameter and return the square value of the parameter.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Define a list &lt;em&gt;def&lt;/em&gt; with five elements and store it the reference named &lt;em&gt;data&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Apply the square method on all items of the &lt;em&gt;data&lt;/em&gt; list.
The computed list is stored in the reference named &lt;em&gt;computed&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Clojure provides extensions to validate type information.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;defn&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;square&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;Number&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;param&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                  &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;:pre&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;number?&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;param&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)]}&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                    &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;param&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;param&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Define an optional type hint for the parameter with &lt;em&gt;^Number&lt;/em&gt; to state &lt;em&gt;param&lt;/em&gt; must be a number.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Declare an optional precondition validating parameter values when the function is called.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The equivalent constructs for local value and function declarations inside a function are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;defn&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;function-1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;let&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;local-variable-1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;local-variable-value-1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;              &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;body-of-let-block&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;defn&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;function-2&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;letfn&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;do-local&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                         &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;do-local&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;let&lt;/em&gt; expression declares local values in the scope of the function.
Use it to minimize global name pollution.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;letfn&lt;/em&gt; expression declares local functions in the scope of the function.
Use it to minimize global name pollution.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_conditional_statements&#34;&gt;Conditional Statements&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You still need to write selection code.
The usual constructs are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;defn&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;is-small?&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;number&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;number&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;yes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;no&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;      &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;when&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                       &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;defn&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;pos-neg-or-zero&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;Determines whether or not n is positive, negative, or zero&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;cond&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                                       &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;negative&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;positive&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;:else&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;zero&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;if&lt;/em&gt; expression evaluates a boolean expression.
If true returns the first expression, if false returns the optional second expression or nil if not defined.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;when&lt;/em&gt; expression is an &lt;em&gt;if&lt;/em&gt; expression with only the true path.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;cond&lt;/em&gt; expression evaluates boolean conditions until the first one returning true is found.
The associated expression is evaluated and the result returned.
If no expression evaluates to true, the else expression is evaluated and returned or nil if not defined.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_some_definitions&#34;&gt;Some Definitions&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Symbols are identifiers that are normally used to refer to something else.
They can be used in program forms to refer to function parameters, let bindings, class names, and global vars.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Keywords are symbolic identifiers that evaluate to themselves.
They provide very fast equality tests.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;char?&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                             &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; true&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;char?&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;s&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                                    &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; false&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;string?&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;This is a string&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                  &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; true&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;symbol?&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;aSymbol&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                            &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; true&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;symbol?&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;symbol&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;aSymbol&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                  &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; false&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;keyword?&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;:aKeyword&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                          &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; true&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;keyword?&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;keyword&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;aKeyword&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                               &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_arithmetic&#34;&gt;Arithmetic&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Clojure supports all the number types of the Java language.
Here are some examples:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;aLong&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;aDouble&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;42.42&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;aBigInteger&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;aBigDecimal&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;42.42&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;M&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;aRatio&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;22&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;/7&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                             &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; =&amp;gt; 22/7&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 20%;&#34;/&gt;
&lt;col style=&#34;width: 40%;&#34;/&gt;
&lt;col style=&#34;width: 40%;&#34;/&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Operator&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Description&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;even?&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Returns true if n is even&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;div class=&#34;content&#34;&gt;&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;(even? 2)&lt;/em&gt; returns true&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;+&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Addition of two operands&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;div class=&#34;content&#34;&gt;&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;(+ 1 2)&lt;/em&gt; returns 3&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;−&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Subtracts second operand from the first&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;div class=&#34;content&#34;&gt;&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;(- 2 1)&lt;/em&gt; returns 1&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;*&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Multiplication of both operands&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;div class=&#34;content&#34;&gt;&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;(* 2 2)&lt;/em&gt; returns 4&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;/&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Division of numerator by denominator&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;div class=&#34;content&#34;&gt;&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;(float (/ 3 2))&lt;/em&gt; returns 1.5&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;inc&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Increment the value of an operand by 1&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;div class=&#34;content&#34;&gt;&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;(inc 5)&lt;/em&gt; returns 6&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;dec&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Decrement the value of an operand by 1&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;div class=&#34;content&#34;&gt;&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;(dec 5)&lt;/em&gt; returns 4&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;max&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Returns the largest of its arguments&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;div class=&#34;content&#34;&gt;&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;(max 1 2 3)&lt;/em&gt; returns 3&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;min&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Returns the smallest of its arguments&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;div class=&#34;content&#34;&gt;&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;(min 1 2 3)&lt;/em&gt; returns 1&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;quot&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Returns the rounded division&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;div class=&#34;content&#34;&gt;&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;(quot 10 3)&lt;/em&gt; returns 3&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;rem&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Remainder of division&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;div class=&#34;content&#34;&gt;&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;(rem 3 2)&lt;/em&gt; returns 1&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Study the documentation, more arithmetic and logical operators are available.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_collections&#34;&gt;Collections&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;aList&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;list&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                  &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; =&amp;gt; (1 2 3 4 5)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;aList&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                      &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; =&amp;gt; (1 2 3 4 5)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;aList&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;cons&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;cons&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;cons&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;cons&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;cons&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;()))))))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;   &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; =&amp;gt; (1 2 3 4 5)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;first&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;aList&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                                 &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; =&amp;gt; 1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;rest&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;aList&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                                  &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; =&amp;gt; (2 3 4 5)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;aMap&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;Fred&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1400&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;Bob&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1240&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;})&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                          &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; =&amp;gt; {&amp;#34;Fred&amp;#34; 1400, &amp;#34;Bob&amp;#34; 1240}&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;assoc&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;aMap&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;Sally&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                        &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; =&amp;gt; {&amp;#34;Fred&amp;#34; 1400, &amp;#34;Bob&amp;#34; 1240, &amp;#34;Sally&amp;#34; 0}&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;dissoc&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;aMap&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;Fred&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                          &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; =&amp;gt; {&amp;#34;Bob&amp;#34; 1240, &amp;#34;Sally&amp;#34; 0}&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;aMap&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;Bob&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                              &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; =&amp;gt; 1240&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;aMap&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;Bob&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                                  &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; =&amp;gt; 1240&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;aSet&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;set&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;:a&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;:b&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;:c&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;:d&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; #{:a ;b :c :d}&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;aSet&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;:a&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;:b&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;:c&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;:d&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;})&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                     &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; #{:a ;b :c :d}&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;count&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;aSet&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                                  &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; 4&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;aSet&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;:b&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;                                                     &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;;; :b&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All the Clojure collections are immutable and persistent.
The Clojure collections support efficient creation of &amp;#39;modified&amp;#39; versions, by utilizing structural sharing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The collections are efficient and inherently thread-safe.
Collections are represented by abstractions, and there may be one or more concrete realizations.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_references&#34;&gt;References&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;programming-clojure&#34;&gt;&lt;/a&gt;[1] S. D. Halloway, &lt;em&gt;Programming Clojure&lt;/em&gt;. 2012 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B07BN4C92X&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B07BN4C92X&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. The plugin is free upon registration for students, open source developers and personal use. Please buy a license for commercial development. The company shall have a stream of income to continue developing this awesome environment.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_2&#34;&gt;
&lt;a href=&#34;#_footnoteref_2&#34;&gt;2&lt;/a&gt;. IDEA has a free community edition. The Ultimate edition is free for students, teachers, and open source developers. Please buy a license for commercial development. The price is very reasonable. The company shall have a stream of income to continue developing this awesome integrated development environment.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Java 20</title>
      <link>https://blog.tangly.net/blog/2023/java-20/</link>
      <pubDate>Mon, 01 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2023/java-20/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_java_20&#34;&gt;Java 20&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2023-05-01-head.png&#34; alt=&#34;2023 05 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Java 20 was released on time to the public.
The release is available for download since 21&lt;sup&gt;st&lt;/sup&gt; March 2023.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Interestingly, the new Java release contains only incubating or preview &lt;a href=&#34;https://openjdk.org/jeps/0&#34;&gt;JEP&lt;/a&gt; proposals.
No final improvements are part of this version.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are a Java developer, you should always install the latest JDK and try it out.
Most of the time, all your products will compile and run on the new release without any changes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You get new features, performance improvements, and better security for free.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As soon as you have to write code, you will enjoy higher productivity thanks to the new features.
Your source code will be quite different from functional equivalent source code written with an older Java version.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The projects Amber, Loom and Panama provide the improvements provided in JDK 20.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The project &lt;a href=&#34;https://openjdk.org/projects/amber/&#34;&gt;Amber&lt;/a&gt; provided improvements in pattern matching features.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://openjdk.org/jeps/432&#34;&gt;Record Patterns&lt;/a&gt; &lt;em&gt;Second Preview&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://openjdk.org/jeps/433&#34;&gt;Pattern Matching for Switch&lt;/a&gt; &lt;em&gt;Fourth Preview&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The project &lt;a href=&#34;https://openjdk.org/projects/loom/&#34;&gt;Loom&lt;/a&gt; provided refinements in virtual threads and structured concurrency.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://openjdk.org/jeps/429&#34;&gt;Scoped Values&lt;/a&gt; &lt;em&gt;Incubator&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://openjdk.org/jeps/436&#34;&gt;Virtual Threads&lt;/a&gt; &lt;em&gt;Second Preview&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://openjdk.org/jeps/437&#34;&gt;Structured Concurrency&lt;/a&gt; &lt;em&gt;Second Incubator&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The project &lt;a href=&#34;https://openjdk.org/projects/panama/&#34;&gt;Panama&lt;/a&gt; refined the access to functions and data provided by external libraries written in non-JVM languages.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://openjdk.org/jeps/434&#34;&gt;Foreign Functions and Memory API&lt;/a&gt; &lt;em&gt;Second Preview&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://openjdk.org/jeps/438&#34;&gt;Vector API&lt;/a&gt; &lt;em&gt;Fifth Incubator&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_algebraic_types_and_pattern_matching&#34;&gt;Algebraic Types and Pattern Matching&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Brian Goetz and his team are adding syntactic sugar constructs to the language.
Step by step the &lt;a href=&#34;https://en.wikipedia.org/wiki/Algebraic_data_type&#34;&gt;algebraic data types&lt;/a&gt; with records &lt;a href=&#34;#java-immutability&#34;&gt;[5]&lt;/a&gt; and sealed types and the pattern matching tools move Java to more complete functional programming approaches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The sum of small improvements finally empowers us to write more legible source code.
The switch expression is an elegant and compact solution for conditional selection.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The next JDK will hopefully again improve the legibility of the code.
The proposed improvements are anonymous variables in deconstruction expressions and support of primitive types in switch expressions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_virtual_threads_and_structured_concurrency&#34;&gt;Virtual Threads and Structured Concurrency&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Death to complex asynchronous programming and nightly debugging sessions.
The structure of the code visualizes the concurrency flow in your application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Loom project is the kid on the block.
The &lt;a href=&#34;https://en.wikipedia.org/wiki/Structured_concurrency&#34;&gt;structured concurrency&lt;/a&gt; approach has the promise to tremendously simplify concurrent programming.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Work is under way to provide &lt;a href=&#34;https://openjdk.org/jeps/8304357&#34;&gt;scoped values&lt;/a&gt; and deprecate thread local storage.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I hope that Loom will deliver another promise and give us optimized tail recursion in the near future.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_interfaces_to_external_libraries_and_memory_structures&#34;&gt;Interfaces to external libraries and memory structures&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Java is &lt;strong&gt;not&lt;/strong&gt; an island.
We want to interface to external digital systems and powerful libraries.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Java_Native_Interface&#34;&gt;JNI&lt;/a&gt; solution is obsolete.
Panama project provides way better approaches to interface with external libraries.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_thoughts&#34;&gt;Thoughts&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Java is steadily improving &lt;a href=&#34;#modern-java-development&#34;&gt;[7]&lt;/a&gt; if sometimes slowly
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The project &lt;a href=&#34;https://openjdk.org/projects/amber/&#34;&gt;amber&lt;/a&gt; is a powerful driver for regular Java improvements.
The next goodies for JDK LTS 21 should be &lt;a href=&#34;https://openjdk.org/jeps/431&#34;&gt;Sequenced Collections&lt;/a&gt; and &lt;a href=&#34;https://openjdk.org/jeps/430&#34;&gt;String Templates&lt;/a&gt;.
Especially the string templates will simplify quite a few lines of our code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The tools are also getting better.
For example, IntelliJ IDEA and Gradle provide timely updates for newer Java versions&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Support for newer features in regular libraries is catastrophic.
The Java community emphasizes backward compatibility and sacrifices elegance
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_2&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_2&#34; title=&#34;View footnote.&#34;&gt;2&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Seminal works [&lt;a href=&#34;#effective-java-3rd&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;#functional-programming-java&#34;&gt;2&lt;/a&gt;] provides examples how to write modern and expressive Java code.
Cool products &lt;a href=&#34;#vaadin&#34;&gt;[1]&lt;/a&gt; allow the creation of digital products and user interfaces using only the Java stack.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;An introductory book [&lt;a href=&#34;#java-by-comparison&#34;&gt;3&lt;/a&gt;] helps newcomers to the Java language.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The diagram shows the hot topics in the Java ecosystem.
The adoption takes time before a majority of development organizations jump on the train.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The adoption of the Java 17 LTS edition is still in the early adoption phase after two years, as stated in the below diagram.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We should rather state that the majority of Java teams are laggards, also called more politely &lt;em&gt;late majority&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock text-center&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2023-05-01-java-trends.png&#34; alt=&#34;2023 05 01 java trends&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;vaadin&#34;&gt;&lt;/a&gt;[1]  &lt;a href=&#34;../../2022/vaadin/&#34;&gt;Vaadin&lt;/a&gt;.
Marcel Baumann. 2022.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;java-19&#34;&gt;&lt;/a&gt;[2] &lt;a href=&#34;../../2021/jdk-17/&#34;&gt;Java 17&lt;/a&gt;.
Marcel Baumann. 2021.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;java-16&#34;&gt;&lt;/a&gt;[3] &lt;a href=&#34;../../2021/jdk-16/&#34;&gt;Java 16&lt;/a&gt;.
Marcel Baumann. 2021.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;java-10&#34;&gt;&lt;/a&gt;[4] &lt;a href=&#34;../../2018/java-10-aka-18.3-changes/&#34;&gt;Java 10 aka 18.3 Changes&lt;/a&gt;.
Marcel Baumann. 2018.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;java-immutability&#34;&gt;&lt;/a&gt;[5] &lt;a href=&#34;../../2022/immutability-in-java/&#34;&gt;Immutability in Java&lt;/a&gt;.
Marcel Baumann. 2022.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;modern-java-construcdts&#34;&gt;&lt;/a&gt;[6] &lt;a href=&#34;../../2022/modern-java-constructs/&#34;&gt;Modern Java Constructs&lt;/a&gt;.
Marcel Baumann. 2022&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;modern-java-development&#34;&gt;&lt;/a&gt;[7] &lt;a href=&#34;../../2021/modern-java-development/&#34;&gt;Modern Java Development&lt;/a&gt;.
Marcel Baumann. 2021.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_references&#34;&gt;References&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;effective-java-3rd&#34;&gt;&lt;/a&gt;[1] J. Bloch, &lt;em&gt;Effective Java&lt;/em&gt;, Third. Addison-Wesley Professional, 2017 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B078H61SCH&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B078H61SCH&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;functional-programming-java&#34;&gt;&lt;/a&gt;[2] V. Subramaniam, &lt;em&gt;Functional Programming In Java Harnessing The Power Of Java 8 Lambda Expressions&lt;/em&gt;. The Pragmatic Programmers, 2014 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B00J8W0OTI&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B00J8W0OTI&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;java-by-comparison&#34;&gt;&lt;/a&gt;[3] S. Harrer, J. Lenhard, and L. Dietz, &lt;em&gt;Java By Comparison&lt;/em&gt;. Pragmatic Bookshelf, 2018 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B07CLFTVZS&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B07CLFTVZS&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. I am waiting since 2018 that Brian Goetz proposal of concise method bodies is implemented in a JDK.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_2&#34;&gt;
&lt;a href=&#34;#_footnoteref_2&#34;&gt;2&lt;/a&gt;. I advocate that libraries should target the latest LTS version of Java. This approach ensures that a library is at most two years behind the latest Java release.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Software Developer Assumptions</title>
      <link>https://blog.tangly.net/blog/2023/software-developer-assumptions/</link>
      <pubDate>Sat, 01 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2023/software-developer-assumptions/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_software_developer_assumptions&#34;&gt;Software Developer Assumptions&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2023-04-01-head.jpg&#34; alt=&#34;2023 04 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here are some software development topics I have learnt to like after 40 years in the industry.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I worked at quite a few industrial and commercial digital product development initiatives.
I truly enjoyed creating successful solutions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Over the years, I encountered similar architecture and design patterns when creating source code for these applications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I started programming with languages such as &lt;a href=&#34;https://en.wikipedia.org/wiki/Ada_(programming_language)&#34;&gt;Ada&lt;/a&gt;, Portal, and &lt;a href=&#34;https://en.wikipedia.org/wiki/C_(programming_language)&#34;&gt;C&lt;/a&gt;.
I embraced object-oriented languages with first &lt;a href=&#34;https://en.wikipedia.org/wiki/C%2B%2B&#34;&gt;C++&lt;/a&gt; and later &lt;a href=&#34;https://en.wikipedia.org/wiki/Java_(programming_language)&#34;&gt;Java&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The rise of agile approaches quite increased the fun and motivation in digital product development.
The &lt;a href=&#34;https://agilemanifesto.org/&#34;&gt;Agile Manifesto&lt;/a&gt; and the cited &lt;a href=&#34;https://agilemanifesto.org/principles.html&#34;&gt;12 Agile Manifesto Principles&lt;/a&gt; still ring as worthy ideas to create better products.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Again and again, our teams had to find ways to learn, tackle complexity, improve cohesion, and master coupling.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Modern engineers create increasingly complex and sophisticated systems.
So as well as focusing on learning and modern engineering, we need to focus on managing complexity.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We need to focus our tools, techniques and mindset on dealing with the complexity
[&lt;a href=&#34;#modern-software-engineering&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;#building-evolutionary-architectures-2nd&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;#clean-architecture&#34;&gt;3&lt;/a&gt;].&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_strongly_agree&#34;&gt;Strongly Agree&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I strongly agree with these statements:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Typed languages are better when you are working on a team of people with various experience levels.
The bigger your application, the more helpful is compiler support.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stand-ups are actually useful for keeping an eye on the newbies.
They help to detect a team member stuck in a loop.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sprint retrospectives have their place so long as they are for actual improvements.
They are the &lt;em&gt;holy shit, well, that went poorly!&lt;/em&gt;, and not some awful scrum master driven waste of everyone’s time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Developers should not be isolated or left to just code.
Bypassing traditional product managers and agile product owners, they should talk directly to the customer.
It always reveals more about the problem, in less time, and with higher accuracy.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Software architecture matters probably more than anything else.
A shitty implementation of a good abstraction causes no net harm to the code base.
A bad abstraction or missing layer causes everything to rot.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Java is quite a cool language.
Modern Java with streams, modules, pattern matching, or structured concurrency is fun to use.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clever code is not usually good code.
Clarity trumps all other concerns.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bad code can be written in any paradigm. Programmers steadily writing bad code should be fired.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;So-called &lt;em&gt;best practices&lt;/em&gt; are contextual and not broadly applicable.
Call them &lt;em&gt;good practices&lt;/em&gt;.
Blindly following them makes you a fool.
The agile community recognized the dangers.
They only advocate &lt;em&gt;good practices&lt;/em&gt; and emphasize the importance of the context in which they are applied.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Designing scalable systems when you do not need to make you a bad engineer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Static analysis is actually useful.
Scanners like SpotBugs or SonarLint regularly find errors and smells.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Don%27t_repeat_yourself&#34;&gt;DRY&lt;/a&gt; is about avoiding a specific problem, not an end goal unto itself.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In general, RDBMS are better and simpler than NoSql solutions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Functional programming is another tool, not a panacea.
The real world has objects and often classes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_positive_experiences&#34;&gt;Positive Experiences&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I learnt to appreciate these approaches:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it&#34;&gt;YAGNI&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/SOLID&#34;&gt;SOLID&lt;/a&gt;,
&lt;a href=&#34;https://en.wikipedia.org/wiki/Don%27t_repeat_yourself&#34;&gt;DRY&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/KISS_principle&#34;&gt;KISS&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pencil and paper are the best design and programming tools and vastly underused.
Better are whiteboards to exchange ideas in a team.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Trading purity in exchange for practicality is usually a good call.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adding more technology in response to a minor problem is rarely a good call.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Design is driven from requirements [&lt;a href=&#34;#domain-driven-design&#34;&gt;4&lt;/a&gt;].
Building anything beyond those requirements puts you into the world of speculative, self-indulgent invention.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;90%, maybe 95%, of project managers, could probably disappear tomorrow to either no effect or a net gain in efficiency [&lt;a href=&#34;#large-scale-scrum&#34;&gt;5&lt;/a&gt;].&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After performing over 2000 interviews, I can say that standard human resources interviewing is thoroughly broken.
Technical interviewing and peer interviewing work way better and are more accurate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agile approaches are more successful and more fun.
Waterfall approaches suck
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DevOps advantages are worth the effort.
Deliver frequently and automate.
Each project should have a continuous integration, continuous delivery, and continuous deployment pipeline.
The deployment can also be triggered manually.
The deployment steps shall still be fully automated.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Static websites written in &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; and using site generators such as &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; are the solution how to document your architecture and technical product
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_2&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_2&#34; title=&#34;View footnote.&#34;&gt;2&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_old_beliefs&#34;&gt;Old Beliefs&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I still think these statements should be applied in current teams:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A software developer shall have formal training in computer science and software engineering.
She should hold at least a bachelor’s degree.
A software developer should understand theory such as e.g., &lt;a href=&#34;https://en.wikipedia.org/wiki/CAP_theorem&#34;&gt;CAP theorem&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Big_O_notation&#34;&gt;big O notation&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A junior Java developer shall pursue a formal Java programmer certification.
The learning effect is not always huge, but as a team member, I have security that they know all basic concepts.&lt;br/&gt;
Modern Java supports such concepts as &lt;a href=&#34;https://en.wikipedia.org/wiki/Algebraic_data_type&#34;&gt;algebraic data types&lt;/a&gt;,
&lt;a href=&#34;https://en.wikipedia.org/wiki/Functional_programming&#34;&gt;functional programming&lt;/a&gt;,
&lt;a href=&#34;https://en.wikipedia.org/wiki/Monad_(functional_programming)&#34;&gt;monads&lt;/a&gt;,
&lt;a href=&#34;https://en.wikipedia.org/wiki/Structured_concurrency&#34;&gt;structured concurrency&lt;/a&gt;.
A professional developer shall apply them in her daily work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;People who stress over code style, linting rules, or another minutia are insane weirdos.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Code coverage has absolutely nothing to do with code quality.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Monoliths are pretty good in most circumstances.
The key is to write &lt;strong&gt;modular&lt;/strong&gt; monoliths.
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_3&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_3&#34; title=&#34;View footnote.&#34;&gt;3&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Micro-services require justification.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_references&#34;&gt;References&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;modern-software-engineering&#34;&gt;&lt;/a&gt;[1] D. Farley, &lt;em&gt;Modern Software Engineering&lt;/em&gt;. Pearson Education, Limited, 2022 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B09GG6XKS4&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B09GG6XKS4&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;building-evolutionary-architectures-2nd&#34;&gt;&lt;/a&gt;[2] N. Ford, R. Parsons, and P. Kua, &lt;em&gt;Building Evolutionary Architectures: Automated Software Governance&lt;/em&gt;, Second. O’Reilly Media, 2023 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B0BN4T1P27&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B0BN4T1P27&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;clean-architecture&#34;&gt;&lt;/a&gt;[3] R. C. Martin, &lt;em&gt;Clean Architecture&lt;/em&gt;. Pearson, 2017 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0134494164&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0134494164&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;domain-driven-design&#34;&gt;&lt;/a&gt;[4] E. Evans, &lt;em&gt;Domain-driven design&lt;/em&gt;. Addison-Wesley, 2004 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0321125215&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0321125215&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;large-scale-scrum&#34;&gt;&lt;/a&gt;[5] C. Larman, &lt;em&gt;Large-scale scrum&lt;/em&gt;. 2017 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0321985710&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0321985710&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. It is time to retire the V-Model, Hermes method, and similar geriatric methodologies. They have served their time. They can rest in peace. The same could be said about SAFe.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_2&#34;&gt;
&lt;a href=&#34;#_footnoteref_2&#34;&gt;2&lt;/a&gt;. The huge gain is always current documentation and free versioning of the documentation with the source code.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_3&#34;&gt;
&lt;a href=&#34;#_footnoteref_3&#34;&gt;3&lt;/a&gt;. The spring framework finally recognized that with &lt;a href=&#34;https://spring.io/projects/spring-modulith&#34;&gt;Modulith&lt;/a&gt;.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Measurements and Units</title>
      <link>https://blog.tangly.net/blog/2022/measurements-and-units/</link>
      <pubDate>Sun, 01 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2022/measurements-and-units/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_measurements_and_units&#34;&gt;Measurements and Units&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2022-05-01-head.png&#34; alt=&#34;2022 05 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;JSR-385 could have saved Mars Climate Orbiter&lt;a href=&#34;#mars-climate-orbiter&#34;&gt;[2]&lt;/a&gt; in year 1999.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Accidents in computer applications happen again and again due to calculation errors.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The International System of Units &lt;em&gt;SI&lt;/em&gt;, commonly known as the metric system, is the international standard for measurement.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;https://en.wikipedia.org/wiki/Metre_Convention&#34;&gt;International Treaty of the Mete&lt;/a&gt; was signed in Paris on May 20, 1875, by seventeen countries, including the United States.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In May 2019, the system of units was updated.
All units are defined by constants of nature.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Still various countries use alternate conventions to complicate our lives.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here some well-documented and expensive catastrophes originating from wrong approaches to measurements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Patriot Missile&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The cause here was an inaccurate calculation of the time that has passed since the start due to arithmetic errors in the computer system.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Ariane 5 Explosion&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;A floating point number was converted, which then had a larger value than could be stored using the available 16-bit signed integer value.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;US Air Machine&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;A US airliner nearly crashed on a flight between the United States and Canada, in the Great Lakes area and the greater Chicago area.
Here, when refueling the machine, the US gallon and British gallon volume units for liquid and fuel were mixed up.
The actual amount of kerosene available was significantly reduced.
The machine ending up on the holding pattern on approach without sufficient fuel.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Numerous, sometimes fatal, incorrect dosages of medication.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_definitions&#34;&gt;Definitions&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2022-05-01-si-units.png&#34; alt=&#34;2022 05 01 si units&#34; width=&#34;200&#34; height=&#34;200&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Java classes defined in the &lt;a href=&#34;https://unitsofmeasurement.github.io/&#34;&gt;JSR-385&lt;/a&gt; specification are not limited to science, physics or math alone.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As a result, the terms quantity and unit of measure should be used in their general terminology, such as physical quantity or physical unit of measure, unless otherwise specified.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This generalization holds true even if the Units of Measurement API was originally designed with scientific or physical quantities as the primary goal.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The names and terms used in the specification are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Dimension&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Dimension is one of the fundamental aspects of quantity, including length, mass, time or combinations thereof.
The concept of measure expresses a characteristic without any concept of size.
So we can talk about length without any implication.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Quantity&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Any kind of quantitative property or attribute of a thing.
Mass, time, distance, heat, longitude or latitude are among the familiar examples of quantitative properties.&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;No unit of measure is required to express a quantity, nor does one need specific arithmetic to do so.
Alice can quantify the size of her shoes by picking them up.
Alice can add the mass of her left shoe and the mass of her right shoe by placing them both in the bowl of a scale.
Quantities can be measurable or dimensionless: the number of Alice’s shoes is a dimensionless quantity.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Units of measure are required to represent measurable quantities on a computer, on paper, on a network, device, etc.
Two or more of these specifications do not mandate the use of a particular quantity as a standard unit of measure.
Therefore, SI (System-International) is usually used so that the standard system of units of measurement is suitable for most applications.
According to the JSR-385 API specification, 7 quantities should be acceptable if they have the same dimensions so that they can be compared with one another in a meaningful way.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Unit&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;A unit, or unit of measure, is a quantity that is assumed to be the standard with a unique value that can be used to express.
The same type units of measurement are used as a comparison value.
For example, one foot corresponds to a quantity of 0.3048 meters.
Regardless of how this came about, a unit of measure can be expressed as the quantity of other units of measure of the same kind.&lt;/p&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Base-Unit&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The base unit is a well-defined unit of measurement that is defined as being dimensionally independent of other basic units of measurement.
The SI system defines only 7 basic units of measurement (including meters, kilograms and seconds) from which all other SI units of measurement are derived.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Derived-Unit&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Derived-Unit is a unit of measurement formed as the product of the results of basic units of measurement.
Some derived units of measurement have been given a special name and a symbol for convenience and ease of use.
In the SI system, special name derived units of measurement include &lt;a href=&#34;https://en.wikipedia.org/wiki/Hertz&#34;&gt;Hertz&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Newton_(unit)&#34;&gt;Newtons&lt;/a&gt;
and &lt;a href=&#34;https://en.wikipedia.org/wiki/Volt&#34;&gt;Volts&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;System-of-Units&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;A system of units is a set of basic and derived units of measure chosen as standards for specifying measures.
Examples are the SI (metric) and the imperial (English) system.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Prefix (multiplier)&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;A prefix is a leading word that can be applied to a unit of measure to form a decimal multiplication or decrease of the unit of measure.
Prefixes are used in the SI system, which includes kilo-, centi-, mili- etc.
Other cultures and regions use multiplier systems of a similar type, some of which differ from the SI system.
Examples are the separate use of multipliers such as Lakh- (100,000) or Crore- (10 million) in countries like India or parts of the Middle East.
This can be attributed to the fact that different currency systems exist.
It can also be traced back to historical number systems, which differ from the Latin or Arabic origin of today’s western systems in some areas or are absent in these in the same form.
On the other hand, the use of others, such as a dozen, is almost unknown there.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_measurement&#34;&gt;Measurement&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In May 2019, all units are defined by constants of nature in the world-wide &lt;a href=&#34;https://en.wikipedia.org/wiki/International_System_of_Units&#34;&gt;international system of units&lt;/a&gt;.
These changes are incorporated in the newer version of the RFC and the reference implementation.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_how_to_use_the_api&#34;&gt;How to Use the API&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;JSR-385 defines the API 2.x.
Historically, JSR-363 defined the API 1.0 and is now superseded by the newer definitions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt;    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;implementation&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;javax.measure:unit-api:2.1.3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;implementation&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;tech.units:indriya:2.1.3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;implementation&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;tec.units:unit-ri:1.0.3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;    &lt;span style=&#34;color: #953800&#34;&gt;Quantity&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;Length&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;distance&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Quantities&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;getQuantity&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;MILLI&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;Units&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;METRE&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;));&lt;/span&gt;

    &lt;span style=&#34;color: #953800&#34;&gt;Quantity&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;Volume&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;cubicMetre&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Quantities&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;getQuantity&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Units&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;CUBIC_METRE&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color: #953800&#34;&gt;Quantity&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;Volume&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;litres&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Quantities&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;getQuantity&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1000&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Units&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;LITRE&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;);&lt;/span&gt;

    &lt;span style=&#34;color: #953800&#34;&gt;ComparableQuantity&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;Volume&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;cubicMetre&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Quantities&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;getQuantity&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Units&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;CUBIC_METRE&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color: #953800&#34;&gt;ComparableQuantity&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;Volume&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;litres&lt;/span&gt;  &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Quantities&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;getQuantity&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1000&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Units&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;LITRE&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;assertTrue&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;cubicMetre&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;compareTo&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;litres&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;);&lt;/span&gt;

    &lt;span style=&#34;color: #953800&#34;&gt;Quantity&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;Speed&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;velocity&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Quantities&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;getQuantity&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Units&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;METRE&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;
                                         &lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;divide&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;Quantities&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;getQuantity&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Units&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;SECOND&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;))&lt;/span&gt;
                                         &lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;asType&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;Speed&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The power of the approach is in the object-oriented abstractions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;WaterTank&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;setCapacityMeasure&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;Quantity&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;Volume&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;capacityMeasure&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;WaterTankTest&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #8250df&#34;&gt;@Test&lt;/span&gt;
    &lt;span style=&#34;color: #cf222e&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;givenQuantity_whenGetUnitAndConvertValue_thenSuccess&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #953800&#34;&gt;WaterTank&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;waterTank&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;WaterTank&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;waterTank&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;setCapacityMeasure&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;Quantities&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;getQuantity&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;9.2&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;LITRE&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;));&lt;/span&gt;
        &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;assertEquals&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;LITRE&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;waterTank&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;getCapacityMeasure&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;getUnit&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;());&lt;/span&gt;

        &lt;span style=&#34;color: #953800&#34;&gt;Quantity&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;Volume&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;waterCapacity&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;waterTank&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;getCapacityMeasure&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color: #cf222e&#34;&gt;double&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;volumeInLitre&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;waterCapacity&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;getValue&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;doubleValue&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;assertEquals&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;9.2&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;volumeInLitre&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;0.0f&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color: #8250df&#34;&gt;@Test&lt;/span&gt;
    &lt;span style=&#34;color: #cf222e&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;conversionTest&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #cf222e&#34;&gt;double&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;volumeInMilliLitre&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;waterCapacity&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;MetricPrefix&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;MILLI&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;LITRE&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;))&lt;/span&gt;
                                                 &lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;getValue&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;doubleValue&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;assertEquals&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;9200.0&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;volumeInMilliLitre&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;0.0f&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The abstractions allow compilation time detection of errors.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;    &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;waterCapacity&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;MetricPrefix&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;MILLI&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;KILOGRAM&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;));&lt;/span&gt;         &lt;span style=&#34;color: #6e7781&#34;&gt;// compilation error&lt;/span&gt;

    &lt;span style=&#34;color: #953800&#34;&gt;Unit&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;Length&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Kilometer&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;MetricPrefix&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;KILO&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;METRE&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color: #953800&#34;&gt;Unit&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;Length&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Centimeter&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;MetricPrefix&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;CENTI&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;LITRE&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;);&lt;/span&gt;    &lt;span style=&#34;color: #6e7781&#34;&gt;// compilation error&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_recommendations&#34;&gt;Recommendations&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Keep your unit definitions in a single place.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Encapsulate your own &lt;em&gt;Quantities&lt;/em&gt; by delegation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create converters when storing units into a JPA-based persistent store.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In any case, if a unit does not exist in the system of units, you can create new units with new symbols: — &lt;em&gt;AlternateUnit&lt;/em&gt; is a new unit with the same dimension but different symbol and nature. — &lt;em&gt;ProductUnit&lt;/em&gt; is a new unit created as the product of rational powers of other units.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;units-of-measurement&#34;&gt;&lt;/a&gt;[1] &lt;a href=&#34;https://unitsofmeasurement.github.io/&#34;&gt;Units of Measurement&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;mars-climate-orbiter&#34;&gt;&lt;/a&gt;[2] &lt;a href=&#34;https://en.wikipedia.org/wiki/Mars_Climate_Orbiter&#34;&gt;Mars Climate Orbiter&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Java, Groovy, Clojure</title>
      <link>https://blog.tangly.net/blog/2022/java-groovy-clojure/</link>
      <pubDate>Tue, 05 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2022/java-groovy-clojure/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_three_jvm_languages_java_groovy_clojure&#34;&gt;Three JVM Languages: Java, Groovy, Clojure&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2022-04-01-head.png&#34; alt=&#34;2022 04 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Professional software developers shall master their primary technology stack and programming language.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I am a proficient and experienced programmer in Java.
I have written production code in Java for the last twenty years.
I decided to study the language in depth and acquired various Java developer certifications.
I truly love the modern Java language and the available development environments.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I want to understand the strengths and weaknesses of Java.
Knowing the weaknesses of my technology stack empowers me to select alternative design approaches to mitigate the drawbacks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;An exploring approach is to learn more about Groovy and Clojure.
I want to understand the various strengths of different programming languages.
I still want to stay in the Java ecosystem to better apply my learnings.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Groovy and Clojure are available on the Java virtual machine and have good interoperability with it.
One major interest is the functional programming approach [&lt;a href=&#34;#functional-thinking&#34;&gt;1&lt;/a&gt;] and how it impacts design and development activities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_clojure&#34;&gt;Clojure&lt;/h3&gt;
&lt;div class=&#34;imageblock text-center&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2022-04-01-clojure.png&#34; alt=&#34;2022 04 01 clojure&#34; width=&#34;240&#34; height=&#34;240&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Clojure is a functional programming language and a Lisp(1) dialect [&lt;a href=&#34;#programming-clojure&#34;&gt;2&lt;/a&gt;].
The language compiles to and runs on the JVM and interfaces nicely with Java and API libraries.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It is better to have 100 functions operate on one data structure than to have 10 functions operate on 10 data structures.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Alan J. Perlis
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Clojure is a Lisp dialect not constrained by backward compatibility.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Extends the code-as-data paradigm to maps, sets and vectors&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Defaults to immutability&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Core data structures are extensible abstractions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Provides approaches to concurrent programming&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Embraces the JVM platform&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_expressions_and_statements&#34;&gt;Expressions and Statements&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Expressions are as expected in a programming language.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;em&gt;and&lt;/em&gt; and &lt;em&gt;or&lt;/em&gt; operators provide shortcut evaluation.
Beware that they are implemented as macros and do not always behave as functions.
You will realize it when you try to pass them as function parameters.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;; binds a name to a value. If value is an expression, it is first evaluated.&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;; binds a name to a function.&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;defn&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[{&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&amp;lt;parameter&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;&amp;lt;expression&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;; else is optional, if not present the expression returns null in the false case&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;&amp;lt;condition&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;&amp;lt;true-expression&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;&amp;lt;false-expression&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;; conceptually when is an if with only a true path&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;when&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;&amp;lt;condition&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;&amp;lt;true-expression&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;; conceptually when not is an if with only a false path&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;when-not&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;&amp;lt;condition&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;&amp;lt;false-expression&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;; cond process on condition after another, the expression of the first condition being true is executed and the expression completes.&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;cond&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;&amp;lt;condition-1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;expression-1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;condition-2&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;expression-2&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;:else&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;expression-else&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
 &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&amp;lt;value-1&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&amp;lt;expression&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
 &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&amp;lt;value-2&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&amp;lt;expression&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
 &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&amp;lt;expression-else&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;loop&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;&amp;lt;expression-loop&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;do&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&amp;lt;expression&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The truth axioms in Clojure are a refreshing view of the programming world.
The numerical tower and implicit type conversions are well-thought and minimize boilerplate code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Languages with implicit conversion function support have similar quality.
Sadly, Java does not support an extensible numerical tower or implicit type conversions.
The dreadful way to use &lt;em&gt;BigInteger&lt;/em&gt;, &lt;em&gt;BigDecimal&lt;/em&gt;, and the missing complex type are proofs.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_functions_and_closures&#34;&gt;Functions and Closures&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Functions are a key construct for a functional language.
You can define functions and closures using:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;fn&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;&amp;lt;expressions&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;defn&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;&amp;lt;expression&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;let&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[{&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&amp;lt;expression&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;}]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;&amp;lt;expression&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;letfn&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[{(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;fn&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&amp;lt;parameters&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;&amp;lt;expression&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;))}]&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #8250df&#34;&gt;&amp;lt;expression&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect4&#34;&gt;
&lt;h5 id=&#34;_higher_order_functions_and_sequences&#34;&gt;Higher-order Functions and Sequences&lt;/h5&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Sequence abstraction permeates the design and API of Clojure.
Functional programming and &lt;a href=&#34;https://clojure.org/guides/higher_order_functions&#34;&gt;higher order functions&lt;/a&gt; emphasize the design of functions working on generic data structures.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;predicate&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;collection&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;collection&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;c1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;c2&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;c1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;c2&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;c3&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;c1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;c2&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;c3&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;collections&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;reduce&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;collection&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;reduce&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;collection&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;

&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;apply&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;apply&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;apply&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;apply&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;arguments&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;; &lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;(4)&lt;/b&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Returns a lazy sequence of the items in coll for which (predicate item) returns logical true. predicate must be free of side effects.
Returns a transducer when no collection is provided.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Returns a lazy sequence consisting of the result of applying f to the set of first items of each collection, followed by applying f to the set of second items in each collection, until any one of the collections is exhausted.
Any remaining items in other collections are ignored.
Function f should accept number-of-collections arguments.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;f should be a function of 2 arguments.
If value is not supplied, returns the result of applying f to the first 2 items in coll, then applying f to that result and the 3rd item, etc.
If collection contains no items, f must accept no arguments as well, and reduce returns the result of calling f with no arguments.
If collection has only 1 item, it is returned and f is not called.
If value is supplied, returns the result of applying f to val and the first item in collection, then applying f to that result and the 2nd item, etc.
If collection contains no items, returns value and f is not called.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Applies fn f to the argument list formed by prepending intervening arguments to args.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The powerful advantage of dynamic typed language is that algorithms just work with various parameters.
As long as the parameters support the required functions, there is no need to provide a specific interface.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect4&#34;&gt;
&lt;h5 id=&#34;_recursion_tail_recursion_currying_memoization_destructuring&#34;&gt;Recursion, Tail Recursion, Currying, Memoization, Destructuring&lt;/h5&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Recursion is implemented as expected.
Recursion is preferred over loops.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can explicitly optimize tail recursion with the &lt;a href=&#34;https://clojuredocs.org/clojure.core/recur&#34;&gt;operator recur&lt;/a&gt;.
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Currying&#34;&gt;Currying&lt;/a&gt; approach is the &lt;a href=&#34;https://clojuredocs.org/clojure.core/partial&#34;&gt;partial&lt;/a&gt; operator.
The operator maps a set of parameters to value and return a function which arity is the number of free parameters.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Memoization is provided with the &lt;a href=&#34;https://clojuredocs.org/clojure.core/memoize&#34;&gt;memoize&lt;/a&gt; operator wrapping the function in need of.
The documentation is very shallow about the costs of memoization and the behavior of the cache.
No functions are provided to influence or clear the cached data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://clojure.org/guides/destructuring&#34;&gt;Destructuring&lt;/a&gt; is well-supported for sequences, structures, and in keyword arguments.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_thoughts&#34;&gt;Thoughts&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Clojure provides &lt;a href=&#34;https://clojure.org/reference/java_interop&#34;&gt;type hints&lt;/a&gt; to help the compiler to find the correct method.
This feature is necessary to cleanly interface with Java and support edge cases.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Clojure has a &lt;a href=&#34;https://clojure.org/guides/spec&#34;&gt;spec&lt;/a&gt; library to express constraints on the parameters and return types.
This approach allows you to define a dynamic type system over your abstractions.
You are in charge of maintaining and verifying the coherence of this type system.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;I prefer to delegate such verification and validation to the compiler.&lt;/em&gt;
&lt;em&gt;I would postulate that if your type system grows in complexity, it is type to reflect and start using object-orientation and object modelization.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_java&#34;&gt;Java&lt;/h3&gt;
&lt;div class=&#34;imageblock text-center&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2022-04-01-java.png&#34; alt=&#34;2022 04 01 java&#34; width=&#34;240&#34; height=&#34;240&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Java is the work horse for implementing enterprise and departmental software solutions.
The language and libraries are regularly improved and a new version is currently delivered every six months [&lt;a href=&#34;#ocp-java-17&#34;&gt;3&lt;/a&gt;].
Early adaptor distributions are provided to smooth the migration of your code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Too many Java developers did not realize that their programming language is evolving.
They still write archaic and plainly suboptimal code instead of using the new syntax and constructs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_expressions_and_statements_2&#34;&gt;Expressions and Statements&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The newer and rediscovered features are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;boolean&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;expression&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;expression&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;expression&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;

&lt;span style=&#34;color: #cf222e&#34;&gt;switch&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;value&lt;/span&gt;  &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;    &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
    &lt;span style=&#34;color: #cf222e&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;expression&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color: #cf222e&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;instanceof&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Type&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;boolean&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;condition&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;expression&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color: #cf222e&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;instanceof&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Type&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;expression&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color: #cf222e&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;expression&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The ternary operator always provided a conditional expression in the Java language.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The switch expression return a value upon completion.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A better idiom for &lt;em&gt;equals&lt;/em&gt; without any conditional statement is now recommended:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;    &lt;span style=&#34;color: #8250df&#34;&gt;@Override&lt;/span&gt;
    &lt;span style=&#34;color: #cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;Object&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;obj&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #cf222e&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;obj&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;instanceof&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;MyType&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;o&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;o&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Objects&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;someValue&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;o&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;someValue&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;());&lt;/span&gt;
    &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_functions_and_lambdas&#34;&gt;Functions and Lambdas&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Lambda expressions are well-supported in Java.
The &lt;em&gt;java.util.function&lt;/em&gt; package provides the expected abstractions.
Function composition is supported through the provided abstractions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Transparent support of functions as a first-class citizen is still not completed.
The concise method bodies proposal is still not implemented in year 2022.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect4&#34;&gt;
&lt;h5 id=&#34;_higher_order_functions_and_streams&#34;&gt;Higher-order Functions and Streams&lt;/h5&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Lambdas and streams were introduced in Java 8 and released in March 2014.
The newer versions of Java have refined the abstractions and added methods to simplify frequent use cases.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The stream library is a well-implemented approach to manipulate sequences with higher-order functions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect4&#34;&gt;
&lt;h5 id=&#34;_recursion_tail_recursion_currying_memoization_destructuring_2&#34;&gt;Recursion, Tail Recursion, Currying, Memoization, Destructuring&lt;/h5&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Recursion is well-supported in Java.
The environment still does not support tail recursion optimization.
I almost feel sorry that a modern programming language is missing such a well-known optimization.
The Java community somewhat promised us that in the future we could get this optimization through the project &lt;a href=&#34;https://openjdk.java.net/projects/loom/&#34;&gt;Loom&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Currying is cumbersome to implement in Java.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Memoization and destructuring are currently not supported.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_thoughts_2&#34;&gt;Thoughts&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Java roots are object-orientation and mutability.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Lambda and stream features are the first serious effort to support functional programming idioms.
The approach is well-designed and powerful enough to handle all algorithms manipulating sequences and collections.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Functions and expressions are still not handled as first-class citizens.
The current improvements in the switch expression acknowledge the cliff.
These improvements also slowly empower us to write a more functional code.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_groovy&#34;&gt;Groovy&lt;/h3&gt;
&lt;div class=&#34;imageblock text-center&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2022-04-01-groovy.png&#34; alt=&#34;2022 04 01 groovy&#34; width=&#34;240&#34; height=&#34;240&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Of course, Groovy is not a perfect tool for every application.
Great in script-like, Groovy is not necessarily equally useful in normal, production coding.
While dynamic typing gives you a productivity boost, it slows down refactoring afterwards when writing code.
That is a huge drawback if you have dozens of classes in a project tangled by dependencies.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_expressions_and_statements_3&#34;&gt;Expressions and Statements&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One cool feature of Groovy is the support of operators as syntactic sugar.
I would welcome this feature in Java.
I dream of writing legible expressions with &lt;em&gt;BigInt&lt;/em&gt; or &lt;em&gt;BigDecimal&lt;/em&gt; types.
The current method call approach destroys the legibility of the source code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;assert&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;3.2&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;1.2&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;G&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;G&lt;/span&gt;   &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
&lt;span style=&#34;color: #cf222e&#34;&gt;assert&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;10.1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;g&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;0.1&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;G&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;To create a BigDecimal, we can use the &lt;em&gt;G&lt;/em&gt; suffix.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_functions_and_lambdas_2&#34;&gt;Functions and Lambdas&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://groovy-lang.org/closures.html&#34;&gt;Closures&lt;/a&gt; are built-in abstractions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect4&#34;&gt;
&lt;h5 id=&#34;_higher_order_functions_and_sequences_2&#34;&gt;Higher-order Functions and Sequences&lt;/h5&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.groovy-lang.org/docs/next/html/documentation/#_working_with_collections&#34;&gt;Sequences and higher-order functions&lt;/a&gt; are built-in constructs.
Groovy syntax is certainly groovy and less verbose than Java.
But Groovy is not functional style friendly.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect4&#34;&gt;
&lt;h5 id=&#34;_recursion_tail_recursion_currying_memoization&#34;&gt;Recursion, Tail Recursion, Currying, Memoization&lt;/h5&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Functional programming prefers recursion to iteration.
Groovy provides a tail recursion optimization mechanism the programmer has to explicitly call.
The approach eliminates stack overflow exceptions.
The performance of the generated code is still below regular recursive Java solutions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;color: #8250df&#34;&gt;@TailRecursive&lt;/span&gt;  &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
&lt;span style=&#34;color: #cf222e&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;BigInteger&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;factorial&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;number&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;BigInteger&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;acc&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;number&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #cf222e&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;acc&lt;/span&gt;
    &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #cf222e&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;factorial&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;number&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;acc&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;multiply&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;BigInteger&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;valueOf&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;number&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)))&lt;/span&gt;
&lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;last&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;last&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;it&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;it&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;last&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;trampoline&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;it&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;tail&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;last&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;last&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;trampoline&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The annotation is used for tail-recursion optimization of methods.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The trampoline operator is used for tail-recursion optimization of closures.
The transformation avoids stack overflow but makes the code slightly slower.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Memoization is also supported through an operator.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;color: #cf222e&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;fib&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #cf222e&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;0&lt;/span&gt;
    &lt;span style=&#34;color: #cf222e&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;
    &lt;span style=&#34;color: #cf222e&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #8250df&#34;&gt;fib&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;fib&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #0550ae&#34;&gt;}.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;memoize&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_thoughts_3&#34;&gt;Thoughts&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Clojure is brilliant in the support of dynamic dispatch at runtime.
The refined design of their collections is a proof of their support for functional approaches.
I am not convinced that dynamic inheritance and protocols promote maintainability of software products.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Java is slowly moving to improve their support:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Switch expressions are now more functional.
In Spring 2022, deconstruction of records, objects and arrays is still not available.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;First class citizen status for functions is still ongoing.
You still not define the implementation of a virtual method using the lambda notation or a method reference.
I agree it is a detail.
But it is a signal if you want to truly support functional approaches.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nice is the effort to improve the collections.
The sequence interface would improve the legibility of the standard collections.
It is still a hack that unmodifiable collection throws an exception if your code calls a modifier.
It is time to introduce an unmodifiable interface for the various collections.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Groovy is awesome in how operator support enhances the legibility of the source code.
The implementation is syntactic sugar.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Java libraries are best of breed.
Backward compatibility and static type checks are immensely helpful for enterprise applications developed over decades.
You do not want to throw away such a huge investment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I like properties and the elegance of grouping the declaration of the field with the methods.
I am still not certain it makes the code quite more legible or maintainable.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want to write a functional code with immutable objects, the availability of a with construct is a huge improvement.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Functional programming with sequences is well-supported in all three environments.
Clojure has the edge.
The language is dynamically typed and provides sequence handling for all collections.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Java is statically type.
You need first to convert a collection into a stream.
Easy to do, but you have to write the code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And as an engineer, I truly acknowledge the performance edge of Java against Clojure or Groovy.
Newer approaches based on GraalVM should close the performance gap in the future.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_recommendations_for_a_java_developer&#34;&gt;Recommendations for A Java Developer&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Java 8 and functional features were introduced in March 2014.
Every Java programmer should now be a functional programming expert.
Here are some idioms you should use:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Embrace functional programming and use the stream approach for all collection traversals.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stop using iterations to process sequences.
Please use streams.
Declare your intent, do not describe the implementation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Return &lt;em&gt;Optional&amp;lt;T&amp;gt;&lt;/em&gt; or an empty list &lt;em&gt;Collections.emptyList()&lt;/em&gt;.
Please do not return null values.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create predicates using &lt;em&gt;java.util.function.predicate&amp;lt;T&amp;gt;&lt;/em&gt; instead of complex boolean conditions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn to compose functions through the helper methods of the &lt;em&gt;java.util.function&lt;/em&gt; package.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the &lt;em&gt;switch&lt;/em&gt; expression and the ternary operator &lt;em&gt;?:&lt;/em&gt;.
Please avoid &lt;em&gt;if&lt;/em&gt; and &lt;em&gt;switch&lt;/em&gt; statements.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Throw only unchecked exceptions.
Stop creating and throwing checked exceptions.
Beware that stream and lambda expressions cannot handle checked exceptions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Embrace immutability and the &lt;em&gt;record&lt;/em&gt; construct.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Understand deconstruction patterns and how you could apply them in our code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_references&#34;&gt;References&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;functional-thinking&#34;&gt;&lt;/a&gt;[1] N. Ford, &lt;em&gt;Functional Thinking: Paradigm Over Syntax&lt;/em&gt;. O’Reilly Media [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B00LEX6SP8&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B00LEX6SP8&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;programming-clojure&#34;&gt;&lt;/a&gt;[2] S. D. Halloway, &lt;em&gt;Programming Clojure&lt;/em&gt;. 2012 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B07BN4C92X&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B07BN4C92X&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;ocp-java-17&#34;&gt;&lt;/a&gt;[3] J. Boyarsky and S. Selikoff, &lt;em&gt;OCP Oracle Certified Professional Java SE 17 Study Guide&lt;/em&gt;. Wiley &amp;amp; Sons, Limited, John, 2022 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B09WJP11JL&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B09WJP11JL&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. The trampoline operator is available for indirect recursion cases.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Doing Agile</title>
      <link>https://blog.tangly.net/blog/2022/doing-agile/</link>
      <pubDate>Thu, 10 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2022/doing-agile/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_is_your_team_pretending_to_be_agile&#34;&gt;Is your Team &lt;em&gt;Pretending&lt;/em&gt; to be Agile?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2022-03-01-head.png&#34; alt=&#34;2022 03 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In the midst of the agile adoption explosion, many teams are experiencing difficulties.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Organizations often mix agile with Scrum.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One of the most common misconceptions about &lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt; is that it is synonymous with agile.
&lt;a href=&#34;https://agilemanifesto.org/&#34;&gt;Agile Manifesto&lt;/a&gt; is an umbrella term that refers to a family of approaches that share common values and principles.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Scrum is a commonly used agile framework that offers suggestions for how work can be organized to maximize value to the end-user.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;While Scrum is implemented at a product development team level, agile has a focus on the entire organization including its leadership and company culture.
Both are relatively easy to start down the path but difficult to master.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Many organizations use Scrum in combination with other agile principles and practices.
Even if Scrum seems like a relatively easy framework to implement, there are changes needed on the individual and organizational level that scrum does not address.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Teams often try hard to use new ways of working and learning.
The challenge is to explore the new approaches and not to fall back to traditional processes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;According to the
&lt;a href=&#34;https://stateofagile.com/&#34;&gt;15th Annual State of Agile report&lt;/a&gt;, 46% of survey respondents report struggles with inconsistent practices and 43% report cultural classes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What are signs your teams are struggling with agile and lean adoption?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_common_symptoms&#34;&gt;Common Symptoms&lt;/h3&gt;
&lt;div class=&#34;imageblock text-center&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2022-03-01-resistence.png&#34; alt=&#34;2022 03 01 resistence&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Below are some common symptoms of teams who are &lt;em&gt;pretending&lt;/em&gt; to be agile:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Teams are not delivering a &lt;em&gt;done&lt;/em&gt;, a usable increment at the end of each sprint.
By usable we mean that the product is fully tested and provides a fully usable increment of valuable functionality.
The product increment must be deployed on a server for internal or external use.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The daily Scrum is a status update instead of a small planning session.
Reporting to attending managers is a clear sign of distrust and micromanagement.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The sprint review meeting is merely a demonstration, and not an opportunity for collaboration.
A clear sign of dysfunctional Scrum is when the content and the priority of backlog items is never updated during a sprint review.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The sprint retrospective does not result in actionable improvement ideas that the Scrum team addresses proactively.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The quality of the product resulting from the Scrum team’s work is not increasing
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Scrum master is not coaching the Scrum Team or the parent organization in techniques to improve the use of the Scrum framework.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Developers do not self-manage or collaborate with the Product Owner on ways to maximize the product’s value.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The organization does not respect the Product Owner’s decisions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Resource managers do not know how to support agile teams.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_dark_agile&#34;&gt;Dark Agile&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2022-03-01-scrum-empirism.png&#34; alt=&#34;2022 03 01 scrum empirism&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The problem is when a team begins to use an agile framework incorrectly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The team begins to focus more on their adherence to the process than they do to staying true to Agile values.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is Dark Agile &lt;a href=&#34;#detecting-agile-bullshit&#34;&gt;[4]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The team presents itself as agile and believes it is practicing agile, but it is not.
It is practicing a framework without the support of agile values.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This can lead to micromanagement, a squashing of adaptability toward customers’ changing needs, and an extreme lessening of the benefits gained from Agile practice.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Remember that Scrum, Lean, and agile approaches are tools to improve the quality and effectiveness of your product development.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt; is a framework and a set of techniques to help you improve your way of creating awesome products.
The ultimate goal is the product, never the process.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_how_to_be_agile&#34;&gt;How to Be Agile?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Emphasizes key values and principles over blindly applying a method &lt;a href=&#34;#cargo-cult&#34;&gt;[9]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Apply the &lt;a href=&#34;https://agilemanifesto.org/principles.html&#34;&gt;twelve principles&lt;/a&gt; of the &lt;a href=&#34;https://agilemanifesto.org/&#34;&gt;agile manifesto&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Please read the &lt;a href=&#34;#scrum-guide&#34;&gt;[8]&lt;/a&gt;.
Delve in documented experiences &lt;a href=&#34;#great-scrummaster&#34;&gt;[1]&lt;/a&gt;, &lt;a href=&#34;#scrum-pocket-guide&#34;&gt;[2]&lt;/a&gt;, &lt;a href=&#34;#professional-scrum&#34;&gt;[3]&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Empiricism and lean thinking are the foundations of &lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt;.
Measure your work to find out if your improvement measures are successful.
Drop all initiatives which do not provide measurable improvements in quality, effectiveness and productivity.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Train your collaborators &lt;a href=&#34;#scrum-master-formation&#34;&gt;[5]&lt;/a&gt;, &lt;a href=&#34;#product-owner-formation&#34;&gt;[6]&lt;/a&gt;, &lt;a href=&#34;#scrum-developer-formation&#34;&gt;[7]&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Visualize your initiatives and their metrics.
I want to see typical lean diagrams on the walls of your project space.
If your Scrum masters or product owners have only attended the initial two days training and never continued on the path, they are laymen.&lt;br/&gt;
You should work with professionals.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check your culture.
Agile means you always trust all your collaborators.
Your ways of working emphasize transparency, inspection and adaptation.&lt;br/&gt;
Therefore, all information is available to all collaborators!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hire for cultural agile fit.
Recognize not everybody wants to develop products in the agile way.
Please hire collaborators who are comfortable with agile approaches, autonomy and accountability.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;great-scrummaster&#34;&gt;&lt;/a&gt;[1] &lt;a href=&#34;https://www.amazon.com/dp/013465711X&#34;&gt;The Great Scrum Master&lt;/a&gt;.
Zuzana Šochová, Addison-Wesley. 2017&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;scrum-pocket-guide&#34;&gt;&lt;/a&gt;[2] &lt;a href=&#34;https://www.amazon.com/dp/B08XWQ7DG9&#34;&gt;Scrum A Pocket Guide, 3rd Edition&lt;/a&gt;.
Gunther Verheyen.
Van Haren Publishing. 2021&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;professional-scrum&#34;&gt;&lt;/a&gt;[3] &lt;a href=&#34;https://www.amazon.com/dp/B07XTLNPTC&#34;&gt;Mastering Professional Scrum: A Practitioner’s Guide To Overcome Challenges and Maximize the Benefits of
Agility&lt;/a&gt;.
Stephanie Ockerman and Simon Reindl.
Addison-Wesley. 2020&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;detecting-agile-bullshit&#34;&gt;&lt;/a&gt;[4] &lt;a href=&#34;../../2019/detecting-agile-bullshit/&#34;&gt;Detecting Agile Bullshit&lt;/a&gt;.
Marcel Baumann. 2019&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;scrum-master-formation&#34;&gt;&lt;/a&gt;[5] &lt;a href=&#34;../../2021/scrum-master-formation&#34;&gt;Scrum Master Formation&lt;/a&gt;.
Marcel Baumann. 2021&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;product-owner-formation&#34;&gt;&lt;/a&gt;[6] &lt;a href=&#34;../../2021/product-owner-formation&#34;&gt;Product Owner Formation&lt;/a&gt;.
Marcel Baumann. 2021&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;scrum-developer-formation&#34;&gt;&lt;/a&gt;[7] &lt;a href=&#34;../../2021/scrum-developer-formation&#34;&gt;Scrum Developer Formation&lt;/a&gt;.
Marcel Baumann. 2021&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;scrum-guide&#34;&gt;&lt;/a&gt;[8] &lt;a href=&#34;https://scrumguides.org/scrum-guide.html&#34;&gt;Scrum Guide&lt;/a&gt;
Jeff Sutherland, Ken Schwaber. 2020&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;cargo-cult&#34;&gt;&lt;/a&gt;[9] &lt;a href=&#34;https://en.wikipedia.org/wiki/Cargo_cult&#34;&gt;Cargo Cult&lt;/a&gt;
Wikipedia&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. Your organization focuses more on how to write stories in JIRA instead of delivering awesome products.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Agile Design Modeling</title>
      <link>https://blog.tangly.net/blog/2021/agile-design-modeling/</link>
      <pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2021/agile-design-modeling/</guid>
      <description>
        
        
        Unknown reference: implementing-domain-driven-desing
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_agile_design_modeling&#34;&gt;Agile Design Modeling&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-10-01-head.jpg&#34; alt=&#34;2021 10 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The line between software development and software architecture is a tricky one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Some people will tell you that it does not exist and that architecture is simply an extension of the design process undertaken by developers.
Others will make out it is a massive gaping chasm that can only be crossed by lofty developers.
They believe you must always abstract your abstractions and not get bogged down by those pesky implementation details.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As always, there is a pragmatic balance somewhere in the middle, but it does raise the interesting question of how you move from one to the other.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_key_takeaways&#34;&gt;Key Takeaways&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Understanding the basics of software architecture is more important than ever before, given the distributed nature of the software systems we are now building, and the distributed nature of the teams building them.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The sweet spot of up front design, between too much and none at all, should focus on understanding the significant decisions and trade-offs that influence the shape of a software system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Good architects are active members of the development team, from collaborating on code to coaching and providing technical leadership to the team.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Communicating about software architecture is challenging.
The &lt;a href=&#34;https://c4model.com/&#34;&gt;C4&lt;/a&gt; model can help structure the communication, starting with a context diagram, and working down to more technical aspects of the
system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Contrary to some popular assumptions, putting effort towards good architecture actually enables agility.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We could state the definition of software design and architecture is&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Management of non-functional requirements, see &lt;a href=&#34;https://www.thoughtworks.com/en-es/insights/articles/fitness-function-driven-development/&#34;&gt;Fitness Functions&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Architecture definition, see &lt;a href=&#34;https://c4model.com/&#34;&gt;C4 Models&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Technology selection, see &lt;a href=&#34;https://en.wikipedia.org/wiki/Architectural_decision&#34;&gt;ADR&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Architecture evaluation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Architecture collaboration&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_good_practices&#34;&gt;Good Practices&lt;/h3&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Domain-Driven Design&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;I would postulate if your agile design follow domain-driven principles, you are safe for the next five years.
Just do it.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Evolutive Architecture&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Features and non-functional requirements will change over time.
Define an architecture which will evolve with these changes.
Domain-driven design approach is highly evolutive Refactoring and Clean Code Fitness Functions Continuous Integration and Delivery Software Craftsmanship&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Refactoring&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Evolutive architecture means you will regularly refactor your code base.
Refactoring implies you have extensive integration and unit tests available.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_ideas&#34;&gt;Ideas&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Explore approaches to improve the quality and adequacy of your architecture:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Architect products, evolve from projects to products,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Focus on quality attributes, not on functional requirements,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Delay design decisions until they are absolutely necessary,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Architect for change, leverage the &lt;em&gt;power of small&lt;/em&gt;,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Architect for build, test, deploy, and operate,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Model the organization of your teams after the design of the system you are working on.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Any organization that designs a system (defined broadly) will produce a design whose structure is a copy of the organization’s communication structure.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Melvin E. Conway
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock text-center&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-10-01-agile-design.png&#34; alt=&#34;2021 10 01 agile design&#34; width=&#34;90%&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Agile digital product architects are aware of:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Allow architecture to emerge,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Software architecture is &lt;strong&gt;not&lt;/strong&gt; about big design up front,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A picture is worth thousand words,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You do not need to use UML See also &lt;a href=&#34;https://c4model.com/&#34;&gt;C4 Model&lt;/a&gt;,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Every software team needs to consider software architecture,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Everyone is an architect and everyone owns the architecture,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The software architecture role is about coding, coaching and collaboration,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A good software architecture enables agility.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_references&#34;&gt;References&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;N. Ford, R. Parsons, and P. Kua, &lt;em&gt;Building Evolutionary Architectures: Support Constant Change&lt;/em&gt;, First. O’Reilly Media, 2017 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/1491986360&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/1491986360&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;M. Fowler, &lt;em&gt;Refactoring&lt;/em&gt;, First. Addision-Wesley, 1999 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B004PQQRK2&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B004PQQRK2&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A. Scott and P. J. Sadalage, &lt;em&gt;Refactoring Databases&lt;/em&gt;. Addison-Wesley Professional, 2006 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B001QAP36E&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B001QAP36E&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;E. Evans, &lt;em&gt;Domain-driven design&lt;/em&gt;. Addison-Wesley, 2004 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0321125215&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0321125215&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;V. Vernon, &lt;em&gt;Domain-Driven Design Distilled&lt;/em&gt;. Addison-Wesley Professional, 2016 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B01JJSGE5S/&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B01JJSGE5S/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;implementing-domain-driven-desing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;M. C. Feathers, &lt;em&gt;Working Effectively with Legacy Code&lt;/em&gt;. Prentice Hall, 2004 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0131177052&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0131177052&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;J. Kerievsky, &lt;em&gt;Refactoring to Patterns&lt;/em&gt;. Addison-Wesley Professional, 2004 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0321213351&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0321213351&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;E. Gamma, R. Helm, R. Johnson, and J. Vlissides, &lt;em&gt;Design Patterns&lt;/em&gt;. Addison-Wesley Professional, 1995 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B000SEIBB8&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B000SEIBB8&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;S. Newman, &lt;em&gt;Building Microservices&lt;/em&gt;. O’Reilly Media, Incorporated, 2020 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B09B5L4NVT&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B09B5L4NVT&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: What I Learnt Teaching Agile Software Architecture</title>
      <link>https://blog.tangly.net/blog/2021/what-i-learnt-teaching-agile-software-architecture/</link>
      <pubDate>Thu, 02 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2021/what-i-learnt-teaching-agile-software-architecture/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_what_i_learnt_teaching_agile_software_architecture&#34;&gt;What I Learnt Teaching Agile Software Architecture&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-09-01-head.png&#34; alt=&#34;2021 09 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I am teaching agile software architecture and techniques &lt;em&gt;SWAT&lt;/em&gt; as advanced bachelor level lecture weighted with 3
&lt;a href=&#34;https://en.wikipedia.org/wiki/European_Credit_Transfer_and_Accumulation_System&#34;&gt;ECTS&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I gave this training the last three years at &lt;a href=&#34;https://www.hslu.ch/en&#34;&gt;Lucerne University of Applied Sciences and Arts&lt;/a&gt; &lt;em&gt;HSLU&lt;/em&gt; in Switzerland.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All materials are released under the &lt;a href=&#34;https://creativecommons.org/&#34;&gt;Creative Commons&lt;/a&gt; copyright.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The course contents are aligned with the big software architecture programs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;https://www.opengroup.org/&#34;&gt;Open Group&lt;/a&gt; organization is the steward of &lt;a href=&#34;https://publications.opengroup.org/standards/togaf&#34;&gt;TOGAF&lt;/a&gt; standard.
&lt;a href=&#34;https://publications.opengroup.org/standards/togaf&#34;&gt;TOGAF&lt;/a&gt; is the worldwide industrial standard for enterprise software architecture.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The group has realized that software and enterprise architecture must incorporate the agile principles &lt;a href=&#34;#agile-architecture&#34;&gt;[1]&lt;/a&gt;, &lt;a href=&#34;#open-agile-architecture&#34;&gt;[2]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All students had formal training in Java, object-oriented programming and design, and agile software project approaches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The school is still teaching waterfall and hybrid methods as a main approach for digital product development.
One consequence is that students have a shallow understanding of more modern frameworks such as Scrum or DevOps.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The official proficiencies for the Scrum roles Scrum Master&lt;a href=&#34;#scrum-master-formation&#34;&gt;[4]&lt;/a&gt;, Product Owner&lt;a href=&#34;#product-owner-formation&#34;&gt;[5]&lt;/a&gt;, and Developer&lt;a href=&#34;#scrum-developer-formation&#34;&gt;[6]&lt;/a&gt; are not achieved with the current curriculum.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_swat_lecture_content&#34;&gt;SWAT Lecture Content&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The lecture description is:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Teaches the basics of systematic agile design of an adequate software architecture for a selected application.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Methods of agile quality assurance and software craftsmanship are explored using predefined or self-selected projects of students.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The fourteen lecture themes are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Traditional and Agile Approaches for software product architecture&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;olist loweralpha&#34;&gt;
&lt;ol class=&#34;loweralpha&#34; type=&#34;a&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;chapter-1&#34;&gt;&lt;/a&gt;Why Agile Architecture and Design?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;chapter-2&#34;&gt;&lt;/a&gt;Evolution of Software Architecture over the last Decades&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;chapter-3&#34;&gt;&lt;/a&gt;What is Agile Architecture?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;chapter-4&#34;&gt;&lt;/a&gt;Agile Approaches with Scrum, XP, LeSS&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Agile Components and Subsystem Design and Continuous Improvements&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;olist loweralpha&#34;&gt;
&lt;ol class=&#34;loweralpha&#34; type=&#34;a&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;chapter-5&#34;&gt;&lt;/a&gt;Refactoring&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;chapter-6&#34;&gt;&lt;/a&gt;Errors, Vulnerabilities, Smells in Source Code&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;chapter-7&#34;&gt;&lt;/a&gt;Architecture of Components and Subsystems&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;chapter-8&#34;&gt;&lt;/a&gt;Verify Functional Features&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;chapter-9&#34;&gt;&lt;/a&gt;Validate Quality Attributes of a Software Architecture&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Agile Application Architecture and Domain Driven Design&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;olist loweralpha&#34;&gt;
&lt;ol class=&#34;loweralpha&#34; type=&#34;a&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;chapter-10&#34;&gt;&lt;/a&gt;Architecture Documentation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;chapter-11&#34;&gt;&lt;/a&gt;Architecture Trends I&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;chapter-12&#34;&gt;&lt;/a&gt;Architecture Trends II&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;chapter-13&#34;&gt;&lt;/a&gt;Domain Driven Design Workshop&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;chapter-14&#34;&gt;&lt;/a&gt;Team and Technical Excellence for Architects&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;../../../ideas/learnings/lectures&#34;&gt;slides of the SWAT course&lt;/a&gt; are available for all interested parties.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The course provides &lt;a href=&#34;../../../ideas/learnings/lectures/#software-architecture-and-techniques-lectures&#34;&gt;mandatory and optional literature&lt;/a&gt; for studying.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The reference texts are [&lt;a href=&#34;#domain-driven-design&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;#refactoring&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;#building-evolutionary-architectures&#34;&gt;3&lt;/a&gt;, &lt;a href=&#34;#working-effectively-with-legacy-code&#34;&gt;4&lt;/a&gt;].&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The following books are recommended for interested students [&lt;a href=&#34;#clean-code&#34;&gt;5&lt;/a&gt;, &lt;a href=&#34;#clean-coder&#34;&gt;6&lt;/a&gt;, &lt;a href=&#34;#clean-architecture&#34;&gt;7&lt;/a&gt;, &lt;a href=&#34;#clean-agile&#34;&gt;8&lt;/a&gt;, &lt;a href=&#34;#clean-craftsmanship&#34;&gt;9&lt;/a&gt;].
Each book is quite compact and can read over a weekend.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The lecturer can also use [&lt;a href=&#34;#domain-driven-design-distilled&#34;&gt;10&lt;/a&gt;, &lt;a href=&#34;#implementing-domain-driven-design&#34;&gt;11&lt;/a&gt;] for the workshop parts.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_arc42_architecture_approach&#34;&gt;arc42 Architecture Approach&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The course discusses the key points defined in approaches such as &lt;a href=&#34;https://arc42.org/&#34;&gt;arc42&lt;/a&gt;.
The same concepts can naturally be found in TOGAF with a slight different terminology.
The main sections in the arc42 documentation:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Introduction and Goals&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Short description of the requirements, driving forces, extract (or abstract) of requirements.
Top three (max five) quality goals for the architecture which have the highest priority for the major stakeholders.
A table of important stakeholders with their expectation regarding architecture.&lt;br/&gt;
&lt;em&gt;Agile defines the product vision, goals, and roadmap.
Stakeholder management has a strong emphasis and is the responsibility of the product owner.&lt;/em&gt;&lt;br/&gt;&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;See  &lt;a href=&#34;#chapter-1&#34;&gt;Why Agile Architecture and Design&lt;/a&gt;, &lt;a href=&#34;#chapter-2&#34;&gt;Evolution of Software Architecture&lt;/a&gt;, &lt;a href=&#34;#chapter-4&#34;&gt;Agile Approaches&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Constraints&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Anything that constrains teams in design and implementation decisions or decision about related processes.
It can sometimes go beyond individual systems and are valid for whole organizations and companies.&lt;br/&gt;
&lt;em&gt;Define, track and verify through fitness functions.&lt;/em&gt;&lt;br/&gt;&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;See  &lt;a href=&#34;#chapter-9&#34;&gt;Non-functional Features&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Context and Scope&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Delimit your system from its (external) communication partners (neighboring systems and users).
Specify the external interfaces.
Shown from a business/domain perspective (always) or a technical perspective (optional)&lt;br/&gt;
&lt;em&gt;Define and document using the UML or C4 approach.&lt;/em&gt;&lt;br/&gt;&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;See  &lt;a href=&#34;#chapter-10&#34;&gt;Architecture Documentation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Solution Strategy&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Summary of the fundamental decisions and solution strategies that shape the architecture.
Can include technology, top-level decomposition, approaches to achieve top quality goals and relevant organizational decisions.&lt;br/&gt;
&lt;em&gt;Document through an architecture document, architecture workshops and diagrams.&lt;/em&gt;&lt;br/&gt;&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;See  &lt;a href=&#34;#chapter-10&#34;&gt;Architecture Documentation&lt;/a&gt;, &lt;a href=&#34;#chapter-11&#34;&gt;Trends I&lt;/a&gt;, &lt;a href=&#34;#chapter-12&#34;&gt;Trends II&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Building Block View&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Static decomposition of the system, abstractions of source-code, shown as hierarchy of white boxes (containing black boxes), up to the appropriate level of detail.
&lt;em&gt;Document through an architecture document, architecture workshops and diagrams.
Complex UML models are useless and not maintainable.&lt;/em&gt;&lt;br/&gt;&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;See  &lt;a href=&#34;#chapter-7&#34;&gt;Component Architecture&lt;/a&gt;, &lt;a href=&#34;#chapter-10&#34;&gt;Architecture Documentation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Runtime View&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Behavior of building blocks as scenarios, covering important use cases or features, interactions at critical external interfaces, operation and administration plus error and exception behavior.+ &lt;em&gt;Documented through automated tests and if necessary diagrams.
Complex UML models are useless and not maintainable.&lt;/em&gt;&lt;br/&gt;&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;See  &lt;a href=&#34;#chapter-7&#34;&gt;Component Architecture&lt;/a&gt;, &lt;a href=&#34;#chapter-10&#34;&gt;Architecture Documentation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Deployment View&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Technical infrastructure with environments, computers, processors, topologies.
Mapping of (software) building blocks to infrastructure elements.&lt;br/&gt;
&lt;em&gt;Infrastructure as code document the infrastructure and the solution deployment.
Usually deployment diagrams are useless.&lt;/em&gt;&lt;br/&gt;&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;See &lt;a href=&#34;#chapter-7&#34;&gt;Component Architecture&lt;/a&gt;, &lt;a href=&#34;#chapter-10&#34;&gt;Architecture Documentation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Cross Cutting Concepts&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Overall, principal regulations and solution approaches relevant in multiple parts (→ cross-cutting) of the system.
Concepts are often related to multiple building blocks.
Include different topics like domain models, architecture patterns and styles, rules for using specific technology and implementation rules.&lt;br/&gt;
&lt;em&gt;Should be documented as architecture decisions.&lt;/em&gt;&lt;br/&gt;&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;See &lt;a href=&#34;#chapter-9&#34;&gt;Non-functional Features&lt;/a&gt;, &lt;a href=&#34;#chapter-10&#34;&gt;Architecture Documentation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Architecture Decisions&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Important, expensive, critical, large scale or risky architecture decisions including rationales.&lt;br/&gt;
&lt;em&gt;It is an important aspect of any software architecture.&lt;/em&gt;&lt;br/&gt;&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;See  &lt;a href=&#34;#chapter-10&#34;&gt;Architecture Documentation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Quality Requirements&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Quality requirements as scenarios, with quality tree to provide a high-level overview.
The most important quality goals should have been described in section 1.2 (quality goals).&lt;br/&gt;
&lt;em&gt;Should be documented as fitness functions and realized as automated tests.&lt;/em&gt;&lt;br/&gt;&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;See  &lt;a href=&#34;#chapter-9&#34;&gt;Non-functional Features&lt;/a&gt;, &lt;a href=&#34;#chapter-10&#34;&gt;Architecture Documentation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Risk and Technical Debt&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Known technical risks or technical debt.
What potential problems exist within or around the system?
What does the development team feel miserable about?&lt;br/&gt;
&lt;em&gt;Risk management is part of any professional product development and shall be documented.
Ideally, a good product developed with professionals has a very low technical debt.&lt;/em&gt;&lt;br/&gt;&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;See  &lt;a href=&#34;#chapter-3&#34;&gt;What is Agile Architecture&lt;/a&gt;, &lt;a href=&#34;#chapter-5&#34;&gt;Refactoring&lt;/a&gt;, &lt;a href=&#34;#chapter-9&#34;&gt;Non-functional Features&lt;/a&gt;, &lt;a href=&#34;#chapter-14&#34;&gt;Excellence for Architects&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Glossary&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Important domain and technical terms that stakeholders use when discussing the system.
Also: translation reference if you work in a multi-language environment.&lt;br/&gt;
&lt;em&gt;Static web page generator approaches create more legible, searchable and usable documentation.
Paper-based documentation or wikis are a suboptimal way of describing a software product.&lt;/em&gt;&lt;br/&gt;&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;See &lt;a href=&#34;#chapter-10&#34;&gt;Architecture Documentation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The arc42 approach is heavily influenced by their &lt;a href=&#34;https://en.wikipedia.org/wiki/Unified_Modeling_Language&#34;&gt;UML&lt;/a&gt; and
&lt;a href=&#34;https://en.wikipedia.org/wiki/Rational_Unified_Process&#34;&gt;RUP&lt;/a&gt; roots.
This heritage is one major reason why this approach is not extensively taught in the course.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Bachelor students have attended formal training in UML and scientific diagramming notations such as &lt;a href=&#34;https://c4model.com/&#34;&gt;C4&lt;/a&gt; or
&lt;a href=&#34;https://en.wikipedia.org/wiki/Business_Process_Model_and_Notation&#34;&gt;BPMN&lt;/a&gt;.
They can produce these artifacts before attending the SWAT course.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_isaqb_architecture_program&#34;&gt;ISAQB Architecture Program&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-09-02-cspa-foundation.png&#34; alt=&#34;2021 09 02 cspa foundation&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The SWAT lecture has similar theme weights as the &lt;a href=&#34;https://www.isaqb.org/&#34;&gt;ISAQB&lt;/a&gt; &lt;em&gt;International Software Architecture Qualification Board&lt;/em&gt; foundation level training and certification
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The ISAQB foundation is kind of a laggard.
Most of their trainings are for classical software and enterprise architecture.
They have finally understood lately that agile is won the war how to develop digital products.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;THe ISAQB programs teach skills in three areas: technological competence, methodical competence, and communicative competence.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The key points are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The concept and meaning of software architecture&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tasks and responsibility for you as a software architect&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your role as a software architect in projects&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;State-of-the-art methods and techniques for the development of software architectures&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The taught skills are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;How can you coordinate essential software architecture decisions with other project participants from the fields of requirements management, project management, testing and development?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How can you document and communicate software architectures based on architecture patterns and technical concepts?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How can you independently carry out the essential steps in designing software architectures for small and medium-sized systems?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-09-02-cspa-agile.png&#34; alt=&#34;2021 09 02 cspa agile&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;They have a specific module for agile software architecture:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Basics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agile approach to architecture&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Architecture requirements in agile projects&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Designing architectures in a team&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reflection and feedback&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Examples of agile architecture work&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In this module, the participants learn how to design, develop and further develop software systems and architectures in accordance with agile principles.
On the one hand, the module covers the application of agile principles and concepts to architecture work.
On the other hand, expedient anchoring of architecture practices in an agile approach.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The development of architectures in projects with self-sufficient teams or shared responsibilities demands new skills and capabilities on the part of developers and architects.
These in turn cover technical as well as methodical and communicative aspects, which are addressed here all theoretically and in practical exercises.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The learning goals for the ISAQB agile certification are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Introduction to agile software architecture&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Knowing and being able to explain the significance of agile ideas for architecture work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Knowing the tasks involved in architecture development and how they are modified in the agile environment.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Being able to appropriately align architecture work to the specific problem and project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Knowledge of agile tools for architecture work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Knowledge of the capabilities for anchoring architecture as a cross-cutting aspect in agile organisations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;See &lt;a href=&#34;#chapter-3&#34;&gt;What is Agile Architecture&lt;/a&gt;, &lt;a href=&#34;#chapter-4&#34;&gt;Agile Approaches&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;The agile architecture approach&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Being able to iteratively and agilely structure architecture work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Knowledge of role models for architects in agile projects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Knowledge of ways involving stakeholders in architecture work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;See &lt;a href=&#34;#chapter-4&#34;&gt;Agile Approaches&lt;/a&gt;, &lt;a href=&#34;#chapter-14&#34;&gt;Excellence for Architects&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Architecture requirements in agile projects&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Being able to formulate quality requirements appropriately for specific target groups.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Being able to use agile concepts for architecture requirements.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Being able to use iterative approaches for continuous definition of architecture requirements.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Being able to effectively organise joint management, evaluation and prioritisation of requirements.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Knowing and being able to explain urgency as a driving factor for architecture work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;See &lt;a href=&#34;#chapter-4&#34;&gt;Agile Approaches&lt;/a&gt;, &lt;a href=&#34;#chapter-8&#34;&gt;Functional Features&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Designing and developing architectures in a team&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Being able to use methods for making decisions in groups.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Being able to support groups and teams in reaching decisions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Being able to create the necessary prerequisites for team decisions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Being familiar with architecture concepts for promoting local decision-making capabilities.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Being familiar with methods for just-in-time architecture decisions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Being familiar with ways of communicating architecture decisions in agile projects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;See &lt;a href=&#34;#chapter-4&#34;&gt;Agile Approaches&lt;/a&gt;, &lt;a href=&#34;#chapter-14&#34;&gt;Excellence for Architects&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Reflection and feedback on architecture work in the agile context&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Being familiar with techniques for joint reflection on architecture decisions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Being able to find the reasons for specific architecture problems.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Being familiar with feedback capabilities from the implementation and able to attribute results to architecture objectives.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;See &lt;a href=&#34;#chapter-6&#34;&gt;Errors and Smells&lt;/a&gt;, &lt;a href=&#34;#chapter-7&#34;&gt;Component Architecture&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Examples of agile architecture work&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Being familiar with and understanding examples of decision-making procedures in agile projects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Being familiar with and understanding examples for agile architecture requirements.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Being familiar with physical characteristics of agile communication concepts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Being able to understand the postponement of architecture decisions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Being familiar with and understanding examples of agilely organised architecture groups.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;See &lt;a href=&#34;#chapter-14&#34;&gt;Excellence for Architects&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Care was taken that all the above aspects are handled over the SWAT course.
The main difference is the SWAT course has a more technical approach to agile architecture.
Communication, team findings techniques and documentation are discussed in &lt;a href=&#34;#chapter-4&#34;&gt;Agile Approaches&lt;/a&gt;, &lt;a href=&#34;#chapter-10&#34;&gt;Architecture Documentation&lt;/a&gt; and &lt;a href=&#34;#chapter-14&#34;&gt;Excellence for Architects&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Bachelor students have attended formal training in &lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt; and had extensive team workshop to foster communication techniques.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_lessons_learnt&#34;&gt;Lessons Learnt&lt;/h3&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_foundations&#34;&gt;Foundations&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Principles need to be taught at the beginning.
The students already know concepts such as &lt;a href=&#34;https://en.wikipedia.org/wiki/KISS_principle&#34;&gt;KISS&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/SOLID&#34;&gt;SOLID&lt;/a&gt;,
&lt;a href=&#34;https://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it&#34;&gt;YAGNI&lt;/a&gt; from previous lectures.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;They can seldom apply these principles in their own code or semester projects.
Understanding why certain &lt;a href=&#34;https://en.wikipedia.org/wiki/Anti-pattern&#34;&gt;anti-patterns&lt;/a&gt; are often wrong is seldom observable.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can only become a professional software architect if you are proficient in a technology stack.
You shall be a craftsman about how to write industrial grade source code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You know how to test it, deploy it, run it and maintain it.
You shall have knowledge of the idioms for your programming language and software design patterns at the component level.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The students are motivated and eager to learn.
It takes time to establish the capabilities of a professional programmer and component designer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This time is missing in our SWAT lecture for the discussion of product software architecture themes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We are now defining an overall path for all students to achieve craftsmanship over their bachelor curriculum.
Students must write professional source code, master design at the component level, and understand agile techniques.
Approaches such as clean code, test-driven development, refactoring and infrastructure as code shall be studied material.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_design_and_architecture&#34;&gt;Design and Architecture&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Design concepts must be refined.
The students understand concepts such as patterns, micro-architecture, layered architecture.
They seldom formulate the technical and financial tradeoffs associated with a specific concept application
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_2&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_2&#34; title=&#34;View footnote.&#34;&gt;2&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Almost no student has experience with open source libraries.
They used them on a daily basis and never looked at the source code, provided an improvement, or read the documentation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We are trying to formulate an approach to improve achieved goals.
We shall either build these concepts into project management lectures or in the semester theses.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;agile-architecture&#34;&gt;&lt;/a&gt;[1] Agile Architecture in the Digital Age.
Open Group. 2018&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;open-agile-architecture&#34;&gt;&lt;/a&gt;[2] &lt;a href=&#34;https://pubs.opengroup.org/architecture/o-aa-standard-single/&#34;&gt;Open Agile Architecture&lt;/a&gt;.
Open Group. 2019. (ISBN: 1-947754-62-1)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;enterprise-architecture&#34;&gt;&lt;/a&gt;[3] &lt;a href=&#34;../../2021/why-enterprise-architecture/&#34;&gt;Why Enterprise Architecture?&lt;/a&gt;.
Marcel Baumann. 20221&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;scrum-master-formation&#34;&gt;&lt;/a&gt;[4] &lt;a href=&#34;../../2021/scrum-master-formation&#34;&gt;Scrum Master Formation&lt;/a&gt;.
Marcel Baumann. 2021&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;product-owner-formation&#34;&gt;&lt;/a&gt;[5] &lt;a href=&#34;../../2021/product-owner-formation&#34;&gt;Product Owner Formation&lt;/a&gt;.
Marcel Baumann. 2021&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;scrum-developer-formation&#34;&gt;&lt;/a&gt;[6] &lt;a href=&#34;../../2021/scrum-developer-formation&#34;&gt;Scrum Developer Formation&lt;/a&gt;.
Marcel Baumann. 2021&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;agile-architecture-principles&#34;&gt;&lt;/a&gt;[7] &lt;a href=&#34;../../2019/agile-architecture-principles/&#34;&gt;Agile Architecture Principles&lt;/a&gt;.
Marcel Baumann. 2019&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;agile-software-architecture&#34;&gt;&lt;/a&gt;[8] &lt;a href=&#34;../../2021/agile-software-architecture-is-mainstream/&#34;&gt;Agile Software Architecture is Mainstream&lt;/a&gt;
Marcel Baumann, 2021&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_references&#34;&gt;References&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;domain-driven-design&#34;&gt;&lt;/a&gt;[1] E. Evans, &lt;em&gt;Domain-driven design&lt;/em&gt;. Addison-Wesley, 2004 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0321125215&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0321125215&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;refactoring&#34;&gt;&lt;/a&gt;[2] M. Fowler, &lt;em&gt;Refactoring&lt;/em&gt;, First. Addision-Wesley, 1999 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B004PQQRK2&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B004PQQRK2&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;building-evolutionary-architectures&#34;&gt;&lt;/a&gt;[3] N. Ford, R. Parsons, and P. Kua, &lt;em&gt;Building Evolutionary Architectures: Support Constant Change&lt;/em&gt;, First. O’Reilly Media, 2017 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/1491986360&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/1491986360&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;working-effectively-with-legacy-code&#34;&gt;&lt;/a&gt;[4] M. C. Feathers, &lt;em&gt;Working Effectively with Legacy Code&lt;/em&gt;. Prentice Hall, 2004 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0131177052&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0131177052&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;clean-code&#34;&gt;&lt;/a&gt;[5] R. C. Martin, &lt;em&gt;Clean Code&lt;/em&gt;. Prentice Hall, 2009 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0132350882&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0132350882&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;clean-coder&#34;&gt;&lt;/a&gt;[6] R. C. Martin, &lt;em&gt;The Clean Coder&lt;/em&gt;. Prentice Hall, 2011 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0137081073&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0137081073&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;clean-architecture&#34;&gt;&lt;/a&gt;[7] R. C. Martin, &lt;em&gt;Clean Architecture&lt;/em&gt;. Pearson, 2017 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0134494164&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0134494164&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;clean-agile&#34;&gt;&lt;/a&gt;[8] R. C. Martin, &lt;em&gt;Clean Agile&lt;/em&gt;. Prentice Hall, 2020 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0135781868&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0135781868&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;clean-craftsmanship&#34;&gt;&lt;/a&gt;[9] R. C. Martin, &lt;em&gt;Clean Craftsmanship&lt;/em&gt;. Addison-Wesley Professional, 2021 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B095C16LSW&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B095C16LSW&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;domain-driven-design-distilled&#34;&gt;&lt;/a&gt;[10] V. Vernon, &lt;em&gt;Domain-Driven Design Distilled&lt;/em&gt;. Addison-Wesley Professional, 2016 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B01JJSGE5S/&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B01JJSGE5S/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;implementing-domain-driven-design&#34;&gt;&lt;/a&gt;[11] V. Vernon, &lt;em&gt;Implementing Domain driven Design&lt;/em&gt;. Addison-Wesley Professional, 2012 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B00BCLEBN8&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B00BCLEBN8&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. The main difference is the course has weighted more heavily on examples and exercises. Students learn better when they practice the theory
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_2&#34;&gt;
&lt;a href=&#34;#_footnoteref_2&#34;&gt;2&lt;/a&gt;. Choosing a technical and financial tradeoff is the essence of engineer’s work. These tradeoffs are often formulated in architecture design records &lt;em&gt;ADR&lt;/em&gt;.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Improving a Static Web Site Build With Hugo and Docsy</title>
      <link>https://blog.tangly.net/blog/2021/improving-a-static-web-site-build-with-hugo-and-docsy/</link>
      <pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2021/improving-a-static-web-site-build-with-hugo-and-docsy/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_improving_a_static_website_build_with_hugo_and_docsy_theme&#34;&gt;Improving a Static Website Build With Hugo and Docsy Theme&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-09-02-head.jpg&#34; alt=&#34;2021 09 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The static website build tool &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; is awesome.
With the extensive built-in feature set of Hugo and the feature-rich text formatting options that &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; offers, it creates a blogging experience composed of easy content management and fun writing experience.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In most static site generators including Hugo, &lt;a href=&#34;https://en.wikipedia.org/wiki/Markdown&#34;&gt;Markdown&lt;/a&gt; is the one and only first-class citizen when it comes to creating posts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;However, in recent Hugo versions, external helpers are an official feature.
It calls appropriate external programs to certain type of files.
Fortunately, &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; based files are automatically compiled with &lt;a href=&#34;https://asciidoctor.org/&#34;&gt;Asciidoctor&lt;/a&gt;, so we do not need to do anything.
Just have it installed and you are ready to go.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Hugo theme &lt;a href=&#34;https://www.docsy.dev/&#34;&gt;Docsy&lt;/a&gt; is ideal to create a good-looking software documentation site.
This theme is currently the best match I found to combine product documentation with blogging.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I love to write my documentation and blogs using &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; notation
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.
The official site is &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt;.
A major tool chain can be found under &lt;a href=&#34;https://docs.asciidoctor.org/home/&#34;&gt;AsciiDoctor&lt;/a&gt;.].&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Hugo supports Asciidoctor through external helpers.
External helpers are relatively new and more like an experimental feature.
There is a proposal on improving it by adding user configurations so at least there is hope for this particular feature to expand.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The features of &lt;a href=&#34;https://en.wikipedia.org/wiki/AsciiDoc&#34;&gt;AsciiDoc&lt;/a&gt; are equivalent to &lt;a href=&#34;https://en.wikipedia.org/wiki/DocBook&#34;&gt;DocBook&lt;/a&gt;.
The readers with grey hair probably remember &lt;a href=&#34;https://en.wikipedia.org/wiki/Standard_Generalized_Markup_Language&#34;&gt;SGML&lt;/a&gt;, the ancestor of DocBook.
The librarians could remember &lt;a href=&#34;https://en.wikipedia.org/wiki/LaTeX&#34;&gt;LaTeX&lt;/a&gt; created by &lt;a href=&#34;https://en.wikipedia.org/wiki/Leslie_Lamport&#34;&gt;Leslie Lamport&lt;/a&gt;.
He created it to describe &lt;a href=&#34;https://en.wikipedia.org/wiki/Temporal_logic&#34;&gt;temporal logic&lt;/a&gt; aspects of cluster communication for the
&lt;a href=&#34;https://en.wikipedia.org/wiki/Digital_Equipment_Corporation&#34;&gt;Digital Equipment Corporation&lt;/a&gt; &lt;em&gt;DEC&lt;/em&gt; solution.
These highly qualified experts and their solutions paved the way to legible documentation and professional typography.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_source_code_highlight&#34;&gt;Source Code Highlight&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Asciidoctor supports rouge source code highlighting per default
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_2&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_2&#34; title=&#34;View footnote.&#34;&gt;2&lt;/a&gt;]&lt;/sup&gt;.
You do need to add any extension to Hugo.
Just select the style you prefer, such as:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;rouge-style = &amp;#34;github&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_search_function_for_the_website&#34;&gt;Search Function for the Website&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The theme has multiple search solutions to index your static website.
I chose the &lt;a href=&#34;https://lunrjs.com/&#34;&gt;Lunr&lt;/a&gt; approach for our site.
The solution has no strings attached and does not require an external search server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The website and the search functionality are self-contained as a static website should be.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_comment_function_for_blog_article&#34;&gt;Comment Function for Blog Article&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The comment feature is somewhat at odds with the concept of static website.
The theme has multiple comment solutions to allow readers to publish a question or a test to our site.
I decided to provide comments only to the blog part of the website.
I chose the &lt;a href=&#34;https://utteranc.es/&#34;&gt;Utterances&lt;/a&gt; approach for our site.
The solution has no strings attached and uses the well-known platform GitHub.
No tracking, no ads and no locking are great.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The comment author must first log in GitHub before adding her comment therefore spamming or flaming are minimized.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You have to create a partial in docsy to use Utterances.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;div&lt;/span&gt; &lt;span style=&#34;color: #116329&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;page-blank&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;div&lt;/span&gt; &lt;span style=&#34;color: #116329&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;utterancers_thread&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;script &lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;src=&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;https://utteranc.es/client.js&amp;#34;&lt;/span&gt;
            &lt;span style=&#34;color: #116329&#34;&gt;repo= &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;{{&lt;/span&gt; &lt;span style=&#34;color: #f6f8fa;background-color: #82071e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;Site.Params.comments_utterances_repo&lt;/span&gt; &lt;span style=&#34;color: #f6f8fa;background-color: #82071e&#34;&gt;}}&lt;/span&gt;
            &lt;span style=&#34;color: #116329&#34;&gt;issue-term= &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;{{&lt;/span&gt; &lt;span style=&#34;color: #f6f8fa;background-color: #82071e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;Site.Params.comments_utterances_issue_term&lt;/span&gt; &lt;span style=&#34;color: #f6f8fa;background-color: #82071e&#34;&gt;}}&lt;/span&gt;
            &lt;span style=&#34;color: #116329&#34;&gt;theme= &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;{{&lt;/span&gt; &lt;span style=&#34;color: #f6f8fa;background-color: #82071e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;Site.Params.comments_utterances_theme&lt;/span&gt; &lt;span style=&#34;color: #f6f8fa;background-color: #82071e&#34;&gt;}}&lt;/span&gt;
            &lt;span style=&#34;color: #116329&#34;&gt;crossorigin=&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;anonymous&amp;#34;&lt;/span&gt;
            &lt;span style=&#34;color: #116329&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_tag_function_for_blog_article&#34;&gt;Tag Function for Blog Article&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Docsy has finally merged the change request for taxonomies during the first semester of 2021.
Tags for articles are now natively supported without tinkering with the code of the plugin.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Our &lt;a href=&#34;https://blog.tangly.net/blog/&#34;&gt;blog&lt;/a&gt; displays the tags on the right side of the window.
Give it a try.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_diagrams_in_articles&#34;&gt;Diagrams in articles&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Diagrams in blog articles are currently a more complex issue.
Hugo seems to be quite restrictive which extensions can be loaded when generating a static site
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_3&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_3&#34; title=&#34;View footnote.&#34;&gt;3&lt;/a&gt;]&lt;/sup&gt;.
No reasonable reasons exit for the above-mentioned restrictions.
Ongoing pull requests try to improve the situation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I had success with:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://plantuml.com/&#34;&gt;plantUML&lt;/a&gt; diagrams&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;See, for example, following blogs &lt;a href=&#34;../../2021/gitlab-for-bachelor-students&#34;&gt;GitLab for Students&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://mermaid-js.github.io/&#34;&gt;mermaid&lt;/a&gt; diagrams&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;See for example following blogs &lt;a href=&#34;../../2021/agile-trends-switzerland-2021&#34;&gt;Agile Trend 2021&lt;/a&gt; or
&lt;a href=&#34;../../2021/agile-trends-switzerland-2020&#34;&gt;Agile Trend 2020&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://plantuml.com/&#34;&gt;plantUML&lt;/a&gt; supports hyperlinks in diagrams.
To use relative links in your site declare a PlantUML variable for the root of your and define links relative to this root.
The declarations for such a diagram could be:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;[plantuml,target=dependencies,format=svg, width=&amp;#34;100%&amp;#34;,,opts=&amp;#34;inline&amp;#34;,svg-type=&amp;#34;inline&amp;#34;]     &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;

....
@startuml

!$root = &amp;#34;https:/blog.tangly.net&amp;#34;                                              &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;

package net.tangly.bdd [[$root/docs/bdd/]] {                                   &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
}

@enduml
....&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Links work only for SVG digrams with the opion inline or interactive.
The value is stated once in &lt;em&gt;opts&lt;/em&gt; and once in &lt;em&gt;svg-type&lt;/em&gt; because plantUML and kroki generators use different options for the same information.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Define a plantUML variable for the root URL of your site.&lt;br/&gt;
&lt;em&gt;I could not use asciidoc variable in plantUML links because the characters {} are interpreted as caption items&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Use the variable to define links &lt;em&gt;[[]]&lt;/em&gt; relative to your root.
&lt;a href=&#34;https://plantuml.com/&#34;&gt;plantUML&lt;/a&gt; will expand the link to expected value.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The generated HTML code does not respect all AsciiDoc parameters.
Text flow configurations are not enforced.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_layout_and_appearance&#34;&gt;Layout and Appearance&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The docsy theme is regularly improving.
The provided features are good and very stable.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Hugo integration of &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; is subpar.
The CSS styling files of &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; are not integrated with Hugo and themes.
Often the appearance of the generated HTML could be improved.
I am currently exploring venues to improve the integration of nice looking asciidoc styling sheets with the docsy universe.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_future_features&#34;&gt;Future Features&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I have integrated an extension to provide access to static files through a Hugo/Docsy site.
For example the presentation of a speech is made available directly in the static website.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This feature is currently experimental and queued as a pull request in the Docsy GitHub repository
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_4&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_4&#34; title=&#34;View footnote.&#34;&gt;4&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_hugo_and_docsy_related_articles&#34;&gt;Hugo and Docsy Related Articles&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2020/creating-a-technical-website-with-hugo-and-asciidoc&#34;&gt;Creating a technical Website with Hugo and Asciidoc&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2020/support-comments-for-static-hugo-website&#34;&gt;Support Comments for Static Hugo Website&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2021/improving-a-static-web-site-build-with-hugo-and-docsy&#34;&gt;Improving a Static Website Build With Hugo and Docsy&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. If you are new to asciidoc, you can experiment &lt;a href=&#34;https://asciidoclive.com/&#34;&gt;online&lt;/a&gt;.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_2&#34;&gt;
&lt;a href=&#34;#_footnoteref_2&#34;&gt;2&lt;/a&gt;. Beware the Hugo documentation stating you have to import an extension for syntax highlighting is plain wrong if you are using &lt;a href=&#34;https://docs.asciidoctor.org/asciidoctor/latest/syntax-highlighting/rouge/&#34;&gt;rouge&lt;/a&gt;.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_3&#34;&gt;
&lt;a href=&#34;#_footnoteref_3&#34;&gt;3&lt;/a&gt;. The situation was improved with newer releases of hugo. It is now possible to specify the desired options under &lt;em&gt;markup.asciidocExt.extensions&lt;/em&gt;.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_4&#34;&gt;
&lt;a href=&#34;#_footnoteref_4&#34;&gt;4&lt;/a&gt;. This feature removed my dependency to Google drive to host downloadable artifacts.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Agile Requirements Engineering</title>
      <link>https://blog.tangly.net/blog/2021/agile-requirements-engineering/</link>
      <pubDate>Sat, 24 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2021/agile-requirements-engineering/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_agile_requirements_engineering&#34;&gt;Agile Requirements Engineering&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-04-03-head.png&#34; alt=&#34;2021 04 03 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Lately, I was asked which new approaches should be used for agile requirements engineering.
Did we find a new silver bullet to write software specifications the agile way?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The answer is easy.
We do not need new approaches or complicated processes.
Start with proven principles and learn.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.impactmapping.org/&#34;&gt;Impact Mapping&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/User_story&#34;&gt;Story Mapping&lt;/a&gt;
are successful approaches to identify and prioritize your functions.
&lt;a href=&#34;https://en.wikipedia.org/wiki/Specification_by_example&#34;&gt;Specification by Example&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/User_story&#34;&gt;User Stories&lt;/a&gt;
as a discussion allow you to refine your understanding of what your customers need.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Acceptance_testing&#34;&gt;Acceptance Testing&lt;/a&gt; verifies the implementation fulfills the expected behavior.
You get the mechanism to avoid regression problems when releasing your application for free.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The associated theory was published in seminal books more than a &lt;strong&gt;decade&lt;/strong&gt; ago.
Just start applying the principles.
You can later still improve your approach based on your learnings.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A nice overview was published in the &lt;em&gt;Professional Product Owner&lt;/em&gt; [&lt;a href=&#34;#professional-product-owner&#34;&gt;1&lt;/a&gt;] written by the stewards of the product owner certification path of &lt;a href=&#34;https://www.scrum.org&#34;&gt;Scrum.org&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you prefer videos, search for Gojko Adzic, Roman Pichler, Mike Cohn or Christian Hassa.
These experts are often speakers at conferences.
You will find recordings of their speech on various platforms such as &lt;a href=&#34;https://www.youtube.com/&#34;&gt;YouTube&lt;/a&gt; or &lt;a href=&#34;https://vimeo.com/&#34;&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Our job is &lt;strong&gt;NOT&lt;/strong&gt; to develop software.
Our job is to change the world.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Jeff Patton
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Give 2% of users 100% of what they need, not 100% of people get only 2% of their needs.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Gojko Adzic
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_approach&#34;&gt;Approach&lt;/h3&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_specification&#34;&gt;Specification&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Use Impact mapping and story mapping to classify and order your functionality.
Story mapping works hand in hand with the release plan artifact I cited in a previous post.
You have not only the key functionality you want to deliver, but also a tentative plan when you will deliver them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Vision, roadmap, and release plan are needed artefacts for any product development using Scrum as a development approach.
The mapping identifies the stories to realize in a release to satisfy the customer’s needs.
A nice discussion of these concepts can be found in &lt;em&gt;Strategize&lt;/em&gt; [&lt;a href=&#34;#strategize&#34;&gt;2&lt;/a&gt;].&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The nice think is that impact mapping and story mapping are quite compatible with design thinking.
We can nicely connect the different directions used in agile product development and marketing departments.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Each specification story has acceptance criteria.
These criteria are the specifications of your product.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Scrum community clearly states that product backlog items are not specifications.
They are work items for the Scrum team.
If you want to use stories to describe your needs instead of the specification by example approach, it is OK, but please not in the backlog.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_validation&#34;&gt;Validation&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Acceptance criteria is a form of specification by example.
Acceptance tests - see &lt;a href=&#34;https://en.wikipedia.org/wiki/Acceptance_test%E2%80%93driven_development&#34;&gt;ATDD&lt;/a&gt; and
&lt;a href=&#34;https://en.wikipedia.org/wiki/Behavior-driven_development&#34;&gt;BDD&lt;/a&gt; - are the automatic check for specification by example.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-04-03-test-pyramid.png&#34; alt=&#34;2021 04 03 test pyramid&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The gain of implementing the acceptance criteria as ATDD is guaranteed elimination of regression issues.
You also get automatic generation of test plans, test results and requirement documents.
Your documents are always in sync with the source code of your product.
An additional advantage is all these artifacts are under source code management and fully auditable.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I had success with &lt;a href=&#34;https://www.thoughtworks.com/insights/articles/fitness-function-driven-development&#34;&gt;Fitness Functions&lt;/a&gt;
to describe and validate non-functional requirements.
We recommend taking this approach.
You can extend your automatic validation to non-functional requirements with the same mechanisms as for functional requirements.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_background&#34;&gt;Background&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You could use the following reference books to bootstrap and strengthen your agile specification process:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Specification by example&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;was published in 2009, twelve years ago [&lt;a href=&#34;#bridging-communication-gap&#34;&gt;3&lt;/a&gt;].&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Impact Mapping&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;was published in 2012, ten years ago [&lt;a href=&#34;#impact-mapping&#34;&gt;4&lt;/a&gt;],&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;User Story Mapping&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt; was published in 2014 eight years ago [&lt;a href=&#34;#user-story-mapping&#34;&gt;5&lt;/a&gt;].
Mike Cohn did also write about user stories [&lt;a href=&#34;#user-stories-applied&#34;&gt;6&lt;/a&gt;].&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Building Evolutionary Architectures&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Fitness functions are described in this seminal book [&lt;a href=&#34;#building-evolutionary-architectures&#34;&gt;7&lt;/a&gt;].
It is also a recommended reference to my &lt;em&gt;SWAT Software Architecture and Techniques&lt;/em&gt; bachelor lecture taught at technical universities.
The book was published in 2017, five years ago.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I currently teach the &lt;em&gt;SWAT&lt;/em&gt; course at the department of computer science of the technical university of Luzerne.
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Agile requirements engineers can find valuable information in seminal books
[&lt;a href=&#34;#value-proposition-design&#34;&gt;8&lt;/a&gt;, &lt;a href=&#34;#agile-product-management&#34;&gt;9&lt;/a&gt;, &lt;a href=&#34;#strategize&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;#how-to-lead-product-management&#34;&gt;10&lt;/a&gt;, &lt;a href=&#34;#building-evolutionary-architectures&#34;&gt;7&lt;/a&gt;].&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_evolution&#34;&gt;Evolution&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The most effective software architecture approach is &lt;a href=&#34;https://en.wikipedia.org/wiki/Domain-driven_design&#34;&gt;Domain Driven Design&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The requirement analysis approach predating DDD is &lt;a href=&#34;https://en.wikipedia.org/wiki/Event_storming&#34;&gt;Event Storming&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Event Storming is a collaborative analysis practice that brings together domain experts and developers for a common understanding of the needs to be realized.
Conducted in the form of a workshop, its purpose is to quickly discover what is happening in the software domain.
Compared to other methods, it is extremely light and intentionally does not require any computer support.
The result is expressed in sticky notes on a wall.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;em&gt;SWAT&lt;/em&gt; course naturally also discusses DDD and event storming.
This blog also contains an architecture series digging into agile architecture approaches.
The first article describes &lt;a href=&#34;../../2019/agile-architecture-principles&#34;&gt;Agile Architecture Principles&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_references&#34;&gt;References&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;professional-product-owner&#34;&gt;&lt;/a&gt;[1] D. McGreal and R. Jocham, &lt;em&gt;The Professional Product Owner&lt;/em&gt;. Addison-Wesley Professional [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B07D5ZPJBY&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B07D5ZPJBY&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;strategize&#34;&gt;&lt;/a&gt;[2] R. Pichler, &lt;em&gt;Strategize&lt;/em&gt;. Pichler Consulting, 2016 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0993499201&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0993499201&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;bridging-communication-gap&#34;&gt;&lt;/a&gt;[3] G. Adzic, &lt;em&gt;Bridging the Communication Gap&lt;/em&gt;. Neuri Limited, 2009 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B008YZ993W/&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B008YZ993W/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;impact-mapping&#34;&gt;&lt;/a&gt;[4] G. Adzic, M. Bisset, and T. Poppendieck, &lt;em&gt;Impact Mapping&lt;/em&gt;. Provoking Thoughts, 2012 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0955683645&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0955683645&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;user-story-mapping&#34;&gt;&lt;/a&gt;[5] J. Patton, &lt;em&gt;User Story Mapping&lt;/em&gt;. O’Reilly and Associates, 2014 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/1491904909&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/1491904909&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;user-stories-applied&#34;&gt;&lt;/a&gt;[6] M. Cohn, &lt;em&gt;User Stories Applied&lt;/em&gt;. Addison-Wesley Professional, 2004 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0321205685&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0321205685&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;building-evolutionary-architectures&#34;&gt;&lt;/a&gt;[7] N. Ford, R. Parsons, and P. Kua, &lt;em&gt;Building Evolutionary Architectures: Support Constant Change&lt;/em&gt;, First. O’Reilly Media, 2017 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/1491986360&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/1491986360&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;value-proposition-design&#34;&gt;&lt;/a&gt;[8] A. Osterwalder, &lt;em&gt;Value proposition design&lt;/em&gt;. 2014 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/1118968050&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/1118968050&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;agile-product-management&#34;&gt;&lt;/a&gt;[9] R. Pichler, &lt;em&gt;Agile product management with Scrum&lt;/em&gt;. Addison-Wesley, 2010 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0321605780&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0321605780&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;how-to-lead-product-management&#34;&gt;&lt;/a&gt;[10] R. Pichler, &lt;em&gt;How to Lead in Product Management&lt;/em&gt;. 978-1-9163030-0-3, 2020 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B085L8Z4YS&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B085L8Z4YS&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. Lecture videos in German for Spring Semester 2021 are available under &lt;a href=&#34;https://tube.switch.ch/channels/iHdetJjwR4&#34;&gt;Switch Tube&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Self-Service for Developer Game Changer</title>
      <link>https://blog.tangly.net/blog/2021/self-service-for-developer-game-changer/</link>
      <pubDate>Tue, 20 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2021/self-service-for-developer-game-changer/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_self_service_for_a_developer_is_a_game_changer&#34;&gt;Self-Service for A Developer is a Game Changer&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-04-02-head.jpg&#34; alt=&#34;2021 04 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Often, I hear complain that the IT department is not reacting to developer’s needs.
They are slow, clumsy and too administrative.
Harsher words state they are incompetent.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I have observed a clear trend in Switzerland since around 2015 to solve these tensions.
Standard IT services such as docker images, database instances or internal domain names are provided through self-service kiosks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What are the advantages of this approach?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_advantages&#34;&gt;Advantages&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The advantages to providing a self-service kiosk for users in an academical or industrial environment are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Improving data quality and strongly reducing the error rate.
Kiosk services must be standardized before being offered.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improving response time and access to resources outside regular office hours without additional human resources,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Saving of costs,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Relieving the personnel of the IT department of repetitive and mundane tasks,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Increased capacity for working on strategic tasks,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Involvement of employees in human resource management processes.
The kiosk solution must be connected to the on-boarding and off-boarding processes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Increased personal responsibility and independence of employees,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Transparency and traceability of the approval channels,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Access to the system independent of time and place,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Contribution to employer branding,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reduction of printing costs as processes are handled digitally.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Similar gains are achievable for employees working for smaller or bigger commercial companies.
The real gains are less animosity and more respect for the IT professionals.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_challenges&#34;&gt;Challenges&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The provided self-service products shall cover at least 80% of customer’s needs.
The products must be standardized and do not require manual actions for setup and deployment.
This quality of service is achieved through tracking of requests through a ticketing system and application of the
&lt;a href=&#34;https://en.wikipedia.org/wiki/Pareto_distribution&#34;&gt;Pareto distribution&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You must track and document all requests for services.
Avoid fulfilling all requests and concentrate on optimizing the most often requested services.
You still need to provide a workable approach for special requests.
The simplest solution is to advocate using a commercial offering.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_approaches&#34;&gt;Approaches&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I am working with teams developing software products in academic and small-company environments.
The needs boil down to&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Provide docker images to developers.
The images shall be accessible from the company Intranet and often form the Internet,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Provide virtual images only exceptionally,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Provide git repositories,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Provide development tools such as GitHub, GitLab or Bitbucket solutions including Pages for documentation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Most often, virtual images are only needed when the user needs a Microsoft or macOS environment.
All Unix related requests are serviced through docker images.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A need trend is the need to provide GPU capabilities for machine learning, artificial intelligence and visualization products.
The image approach is still working.
The current major challenge is the immaturity of the software solutions to share efficiently physical GPU.
I expect viable standard solutions will be available in the next two years.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_next_steps&#34;&gt;Next Steps&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implement a kiosk self-service solution for all regular requests of collaborators and students.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implement a prototype for self-service access to GPU capabilities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Track acceptance of provided approaches and implement improvements.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Agile Software Architecture is Mainstream</title>
      <link>https://blog.tangly.net/blog/2021/agile-software-architecture-is-mainstream/</link>
      <pubDate>Mon, 15 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2021/agile-software-architecture-is-mainstream/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_agile_software_architecture_is_mainstream&#34;&gt;Agile Software Architecture is Mainstream&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-03-03-head.jpg&#34; alt=&#34;2021 03 03 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Slowly, slowly major actors in the software architecture landscape acknowledge agile development is state of the industry approach to building software products.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;They are still struggling to integrate their older views in a faster, iterative, incremental development approach.
The duration of a regular Scrum sprint is usually two weeks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;More important, they have discovered we build products because no customers buy projects.
They buy solutions and products.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I am relieved I need less fight to convince enterprise architects that agile is the way.
The big names &lt;a href=&#34;https://www.pmi.org/&#34;&gt;&lt;em&gt;Project Management Institute&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://www.opengroup.org/&#34;&gt;&lt;em&gt;Open Group&lt;/em&gt;&lt;/a&gt;, and &lt;a href=&#34;https://www.isaqb.org/&#34;&gt;&lt;em&gt;iSAQB&lt;/em&gt;&lt;/a&gt;
have at last an agile architecture offering.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If pushed, they acknowledge agile development is mainstream and used in the overwhelming majority of complex product development.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We have learnt it is difficult to concede and congratulate the winning party.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Look at the president of the United States of America &lt;a href=&#34;https://en.wikipedia.org/wiki/Donald_Trump&#34;&gt;Donald Trump&lt;/a&gt; to have a well-documented case of a loser trying all lies and tricks to avoid reality.
Not long ago, the tobacco industry did the same as professional liars.
And we still have climate change deniers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We show mercy to all the software architecture and designer traditionalists who needed almost twenty years to acknowledge the supremacy of agile approaches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Laggards, please bow and embrace modern software development approaches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_pmi_and_disciplined_agile_delivery&#34;&gt;PMI and Disciplined Agile Delivery&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-03-03-dad.jpg&#34; alt=&#34;2021 03 03 dad&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;PMI realized a few years ago, their standard approach to project management was losing ground in the software industry.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The first step was the &lt;em&gt;PMI Agile Certified Practitioner&lt;/em&gt; certification to test what agile is.
They never really integrated it with their other certifications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The coup was their acquisition of &lt;em&gt;Disciplined Agile Delivery&lt;/em&gt; in the second half of 2019.
The &lt;a href=&#34;https://en.wikipedia.org/wiki/Disciplined_agile_delivery&#34;&gt;DAD&lt;/a&gt; approach has been around since 2015 and had some success.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The framework has a complexity sympathetic to PMI.
The roots of a lot of DaD concepts can be found in &lt;a href=&#34;https://en.wikipedia.org/wiki/Rational_Unified_Process&#34;&gt;Rational Unified Process&lt;/a&gt; &lt;em&gt;RUP&lt;/em&gt;.
It is an &lt;a href=&#34;https://en.wikipedia.org/wiki/Iterative_and_incremental_development&#34;&gt;Iterative and Incremental Development&lt;/a&gt; methodology.
RUP is certainly not agile.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The founder of DAD &lt;a href=&#34;https://en.wikipedia.org/wiki/Scott_Ambler&#34;&gt;Scott W. Ambler&lt;/a&gt; has a long history with the Unified Modeling Language and CMM.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anyway, it is a huge step for PMI to move away from traditional heavy project development methods and embrace somehow agile product development.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_open_group_and_the_open_agile_architecture_initiative_togaf&#34;&gt;Open Group and The Open Agile Architecture Initiative TOGAF&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-03-03-open-group-agile.png&#34; alt=&#34;2021 03 03 open group agile&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The open group has stewardship for the TOGAF enterprise architecture standard and training.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The open group has started to discuss the future of software architecture and agile approaches with a white paper second half of 2019.
They published a first potential approach to &lt;a href=&#34;https://pubs.opengroup.org/architecture/o-aa-standard-single/&#34;&gt;agile software architecture&lt;/a&gt; the end of 2020.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The approach is quite rough.
It is more a collection of ideas available in various approaches and ideas picked from the Internet.
The fact they recognized the necessity to have an agile solution is encouraging.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Open Group Architecture Framework TOGAF is the industrial standard for enterprise software and digital architecture.
TOGAF provides techniques to model and analyze the various aspects such as enterprise architect, business architect, data architect, application architect, and technology architect.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Open Group has started to integrate agile paradigms into their approach.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-03-03-open-agile-architecture.png&#34; alt=&#34;2021 03 03 open agile architecture&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The open agile architecture shows they are at the very beginning of their journey.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;They will have to compromise and find a way to integrate TOGAF ideas with agile concepts.
I am not sure the result will be pretty.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The concepts and techniques defined in TOGAF are reasonable.
The official process how to implement them is flawed.
You cannot work with short iterations and incrementally improve your solution upon discovering new facts in a timely and efficient manner.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_isaqb_agile_software_architecture&#34;&gt;iSAQB Agile Software Architecture&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-03-03-isaqb.jpg&#34; alt=&#34;2021 03 03 isaqb&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The German software architecture bastion has finally fallen.
&lt;a href=&#34;https://www.isaqb.org/&#34;&gt;iSAQB&lt;/a&gt; provides an
&lt;a href=&#34;https://www.isaqb.org/certifications/cpsa-certifications/cpsa-advanced-level/agila-agile-software-architecture/&#34;&gt;advanced level module&lt;/a&gt; for agile software architecture.
Their proposal of the module is described below.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The participants learn how to design, develop and further develop software systems and architectures in accordance with agile principles.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On one hand, the module covers the application of agile principles and concepts to architecture work.
On the other hand, expedient anchoring of architecture practices in an agile approach.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The development of architectures in projects with self-sufficient teams or shared responsibilities demands new skills and capabilities on the part of developers and architects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We cover technical as well as methodical and also communicative aspects, which are addressed here all theoretically and in practical exercises.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The above statements are quite shallow.
I hope they will add more material in the future.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_agile_requirements_engineering&#34;&gt;Agile Requirements Engineering&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Interestingly, the requirement community is further on the path to agility.
The most relevant organization is Europe is the &lt;a href=&#34;https://www.ireb.org/&#34;&gt;International Requirements Engineering Board&lt;/a&gt; &lt;em&gt;IREB&lt;/em&gt;.
The organization offers two certifications with emphasis on agile approaches:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;RE@Agile Primer - Bridging the gap between RE and Agile&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Advanced Level RE@Agile - is part of the advanced CPRE AL&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_agile_testing_engineering&#34;&gt;Agile Testing Engineering&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Interestingly, the quality insurance and testing community are further on the path to agility.
The most relevant organization is Europe is the &lt;a href=&#34;https://www.istqb.org/&#34;&gt;International Software Testing Qualifications Board&lt;/a&gt; &lt;em&gt;ISTQB&lt;/em&gt;.
The organization offers a whole set of certifications with emphasis on agile approaches:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Foundation Level Agile Tester&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Advanced Level Agile Test Leadership at Scale&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Advanced Level Agile Technical Tester&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A nice bonus is that &lt;em&gt;IREB&lt;/em&gt; and &lt;em&gt;ISTQB&lt;/em&gt; work together to align their terminology and approaches.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Software Development for Students</title>
      <link>https://blog.tangly.net/blog/2021/software-development-for-students/</link>
      <pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2021/software-development-for-students/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_software_development_for_students&#34;&gt;Software Development for Students&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-01-04-head.jpg&#34; alt=&#34;2021 01 04 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Computer science students shall achieve technical excellence when reaching bachelor level.
They should be proficient with industry good practices.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Students understand the theory and principles behind these practices.
Experience with one of the best of breed tools enforces learning and automatism.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The focus of a technical university is to teach the concepts and methods.
The tools are used to practice and to increase student learning.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_source_code_version_management_with_git&#34;&gt;Source Code Version Management with Git&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; is the standard tool for the distributed source code management system.
It is supported by all major development IDE and continuous integration environments.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;First-year undergraduates shall master the basic git commands to write their semester projects.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Second-year sophomores shall master the &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; commands used to work in teams.
Pull requests are a standard approach to review team colleague works and to consolidate new functions into the application.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_modern_java_software_development&#34;&gt;Modern Java Software Development&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Java is the preferred programming language for the majority of teaching institutions around the world.
The programming language has evolved the last ten years.
Students should learn the current way of writing code in Java.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The actual Java approach is to use streams and renounce in most cases to use instructions such as &lt;em&gt;for&lt;/em&gt; or &lt;em&gt;while&lt;/em&gt; loops or conditional &lt;em&gt;if&lt;/em&gt; statements.
Delegation and lambda constructs often replace inheritance design.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Since JDK 16, Java provides &lt;a href=&#34;https://en.wikipedia.org/wiki/Algebraic_data_type&#34;&gt;Algebraic Data Types&lt;/a&gt; with records and sealed classes.
Records implement &lt;a href=&#34;https://en.wikipedia.org/wiki/Product_type&#34;&gt;Product Types&lt;/a&gt;.
Sealed classes implement &lt;a href=&#34;https://en.wikipedia.org/wiki/Tagged_union&#34;&gt;Tagged Unions&lt;/a&gt;, also called sum types.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;IntelliJ IDEA IDE&lt;/a&gt; is now the industrial standard for the Java and often Python world.
The IDEA environment promotes the use of modern Java constructs.
Currently, constructs such as records, sealed classes, closeable resources, switch instructions as expressions are new approaches to write legible Java code.
Concepts such as Optional, Streams, immutable objects, and unchecked expressions promote more functional programming styles.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle&lt;/a&gt; is our preferred build tool for Java projects.
The approach is straight forward.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_technical_excellence&#34;&gt;Technical Excellence&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The DevOps and software craftsmanship movement strongly promotes technical excellence and intrinsic quality in software development.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-01-04-devOps.png&#34; alt=&#34;720&#34; width=&#34;480&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Students shall be fluent with&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Static code analysis.
IntelliJ IDEA provides an &lt;em&gt;analysis&lt;/em&gt; function for static code analysis.
The IDE environment is free for students.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unit tests and integration tests Use the seminal libraries &lt;em&gt;JUnit5&lt;/em&gt;, &lt;em&gt;Mockito&lt;/em&gt;, and &lt;em&gt;AssertJ&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Continuous integration pipeline uses the CI pipeline of your product management tool; either &lt;em&gt;GitLab&lt;/em&gt;, &lt;em&gt;GitHub&lt;/em&gt;, &lt;em&gt;Bitbucket&lt;/em&gt;, or &lt;em&gt;Azure DevOps&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_documentation&#34;&gt;Documentation&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You should only check text artifacts into a &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; repository.
Modern approaches with &lt;a href=&#34;https://en.wikipedia.org/wiki/Markdown&#34;&gt;Markdown&lt;/a&gt; and &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; syntax promote this axiom.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://plantuml.com/&#34;&gt;PlantUML&lt;/a&gt; is a text-based diagramming approach.
Major diagram types are supported.
ALl UML diagram types can be described with the tool.
&lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; has native support for diagrams in general and PlantUML in particular.
Asciidoc supports additional diagrams and diagramming tools such as &lt;a href=&#34;https://mermaid-js.github.io/mermaid&#34;&gt;Mermaid&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_agile_and_scrum&#34;&gt;Agile and Scrum&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Agile and Scrum are the standard methods to develop software products in the industry.
All students shall excel in agile development approaches.
Scrum is the most used approach and should be taught to all computer science students.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Students shall understand the agile concepts and main constructs.
When working in a Scrum environment, they have used the backlog, issues, stories, definition of done.
They have planned their projects with a vision, a roadmap, epics, and sprints.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_gitlab_as_a_students_tool&#34;&gt;Gitlab as a Student’s Tool&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-01-04-gitlab.png&#34; alt=&#34;2021 01 04 gitlab&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Gitlab is an integrated solution for software development in teams and DevOps approaches.
It is the official tool provided in our &lt;a href=&#34;https://www.hslu.ch/en/lucerne-school-of-information-technology/&#34;&gt;Computer Science Department&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Students learn computer science principles and hands-on how to develop software applications.
They will use their learning to develop commercial software components when working after the completion of their studies.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_gitlab_as_a_lecturers_tool&#34;&gt;Gitlab as a Lecturer’s Tool&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All the source code and artifacts of a student class are available in Gitlab.
The development history over a project or a semester is visible in Git.
The lecturers can access the artifacts or use scripts to extract the data necessary to set the grades for the students.
The grading process can be standardized.
The decision process is part of the Gitlab data and is auditable.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The student series is a set of blogs showing how to use central tools for modern software development.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2021/software-development-for-students&#34;&gt;Software Development for Students&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2018/pragmatic-craftsmanship-professional-software-developer&#34;&gt;Pragmatic Craftsmanship&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2017/why-use-current-software-components&#34;&gt;Current Software Components&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2016/git-branches-for-the-impatient&#34;&gt;Git Branches for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2017/git-local-repositories-for-the-impatient&#34;&gt;Git Local Repositories For the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2021/gitlab-for-bachelor-students&#34;&gt;Gitlab for Bachelor Students&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2020/advocate-zero-bug-policy-in-your-projects/&#34;&gt;Zero Bug Policy&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2020//creating-a-technical-website-with-hugo-and-asciidoc&#34;&gt;Creating a Technical Website with Hugo and AsciiDoc&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2021/gitlab-for-bachelor-students&#34;&gt;GitLab for Bachelor Students&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Gitlab for Bachelor Students</title>
      <link>https://blog.tangly.net/blog/2021/gitlab-for-bachelor-students/</link>
      <pubDate>Mon, 18 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2021/gitlab-for-bachelor-students/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_gitlab_for_bachelor_students&#34;&gt;Gitlab for Bachelor Students&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-01-03-head.jpg&#34; alt=&#34;720&#34; width=&#34;480&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Computer science students shall be proficient with a basic set of software development techniques.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Technical excellence&lt;/em&gt; is a mandatory skill for all software developers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Agile development approaches&lt;/em&gt; are state of the industry and used in almost all software development initiatives.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;DevOps&lt;/em&gt; approaches are used in modern organizations.
They predate agile development approaches.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Technical schools should provide an in-depth experience in these areas to prepare their students for their future activities after completing their bachelor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The below mind map consolidates concepts, tools and approaches based on the &lt;a href=&#34;https://about.gitlab.com/&#34;&gt;GitLab&lt;/a&gt; tooling established in some universities.
The approach emphasizes &lt;strong&gt;agile&lt;/strong&gt; and &lt;strong&gt;DevOps&lt;/strong&gt; concepts and approaches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock kroki&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://kroki.io/plantuml/svg/eNqVVNtu2kAQfecr5qlqIdQv7UtkoYAdUVBoKSQfMFkPZsV6190LEa3y7501EDCJIuXBkncu58yemdkb59H6SuqiwrqTOr9TNOgczrnE0mIF_zoAX9dOheYPYIRiU1oTdJEZZSwoWa79owrE3ufOcydNDjg9SD_VZGr-h253bs1KCkmaP9ftdno9GFovVyi8gxlqLKki7dneYwonBSTJWPokaSypiFzXpSXSg2GxRS2oAPanSeMZvI6aB6VgQX8COe_OwiCn7a_aNQmZ0V7qYIKDifbE9_XS6Oi6ABtbLBSdk10GSK_wEeayJiU1uVZdZzQ5u7dkdx-E6LEaM9yShoxFsqgOukz0yqLzNggfLAE65iromJEbsSG7Dz2dWZTaOOmN3TUu4NbETnPfywZ0xhBWwxS32JwftPRwH2U8Ak2j6fsJeMbADHgyDJ0j66eHKufoPSM6QF3ApJCmcpCmcaYGe4EWFOfA2GN6bIZScgqT_JYx-n0YalQ7J8_y-tFaSkUwrGtrUKzJNcbD4Dr4PJrP7r60MvoMztafsNyQF2uYsdAsUKsPkS4nJ0vdJstNhVJDbmXswz7igvBhdncF2bfXnHOF2rP3LSojQpz8ZvTajLHndlOYJ92I0G-EFVJyyovhhNwYltITjIlvhaynO_L_CKXZR_TfHjpev9PAvSjLq0LK1LG8dmVLYUN1ccsWbnwllCmv4baWwl3BkquRLYrLjImn_fq5a7hHt-GkUbA63h6yNb9T7yWPDSpOWBiMT1czZwtShK59q1bO0qz8E_LW_A6opN-dw3O9XItgYoor86Ijz-NwP4t_6ahnkixr40ehdO8pHJfu4g6wCPwuVPSKZYqZycxH0G6I3-z9u_0fncvXiw==&#34; alt=&#34;students-proficiencies&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Italic terms identify concrete tools.
Green font marks Gitlab features.
Light blue background concepts map to technical university guidelines.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You should develop software applications using agile and DevOps techniques.
You shall put your source code under a version management system.
The actual industrial standard is &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt;, a distributed version control system - &lt;a href=&#34;https://en.wikipedia.org/wiki/Distributed_version_control&#34;&gt;DVCS&lt;/a&gt; -.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;More sophisticated source code management systems based on &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; with additional agile and DevOps functionalities are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; is a closed-source solution and most well-known solution.
Microsoft acquired them in 2020.
Some Swiss technical universities - ZHAW, University of Bern - use the academic GitHub campus program.
CI and CD pipelines are not part of the GitHub product and must be installed separately.
The academic program means you receive GitHub licenses.
Your organization is responsible for running the software on the premises.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://about.gitlab.com/&#34;&gt;Gitlab&lt;/a&gt; is an open-source solution and a strong contender for GitHub.
CI and CD pipelines are part of the product.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/dashboard/overview&#34;&gt;Bitbucket&lt;/a&gt; is a closed-source solution of Atlassian.
CI and CD pipelines are part of the product.
Atlassian also owns JIRA, Confluence and Trello.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://azure.microsoft.com/en-us/services/devops/&#34;&gt;Azure Devops&lt;/a&gt; is a closed-source solution and Microsoft answers to .NET development.
CI and CD pipelines access is under definition by Microsoft.
They slowly open their product to additional development stacks such as Java, Python.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gitea.io/&#34;&gt;Gitea&lt;/a&gt; is a community-managed lightweight code hosting solution written in Go.
The project is hosed on GitHub.
It is published under the MIT license.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gogs.io/&#34;&gt;Gogs&lt;/a&gt; is a painless self-hosted Git service.
The project is hosed on GitHub.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gitolite.com/&#34;&gt;Gitolite&lt;/a&gt; allows you to set up git hosting on a central server.
It has fine-grained access control, and many more powerful features.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Schools often select &lt;a href=&#34;https://about.gitlab.com/&#34;&gt;GitLab&lt;/a&gt; due to his open source license and the tremendous DevOps functionality.
The gitlab solution supports source code versioning, DevOps pipelines, agile development approaches, and quality insurance for the produced artifacts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The technical university of Lucerne &lt;a href=&#34;https://www.hslu.ch/en/&#34;&gt;HSLU&lt;/a&gt; has selected &lt;a href=&#34;https://about.gitlab.com/&#34;&gt;the GitLab&lt;/a&gt; platform as the standard DevOps environment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Well-known companies in Switzerland such as Roche Diagnostics, UBS&lt;a href=&#34;#ubs-gitlab&#34;&gt;[1]&lt;/a&gt;, Siemens&lt;a href=&#34;#siemens-gitlab&#34;&gt;[2]&lt;/a&gt; have also standardized on this platform.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Our students can more easily bridge between academical teachings and industrial practices and acquire deeper understanding of DevOps and agile practices.
Semester and bachelor theses are easier to realize through the use of known software development tool chains.
Students can concentrate on the content of their thesis.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_basic_git_knowledge_for_students&#34;&gt;Basic Git Knowledge for Students&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Studying the history of software development practices shows the raise and fall of &lt;a href=&#34;https://en.wikipedia.org/wiki/Source_Code_Control_System&#34;&gt;SCCS&lt;/a&gt;,
&lt;a href=&#34;https://en.wikipedia.org/wiki/Concurrent_Versions_System&#34;&gt;CVS&lt;/a&gt;, ClearCase, Visual Source Safe, or
&lt;a href=&#34;https://en.wikipedia.org/wiki/Apache_Subversion&#34;&gt;Subversion&lt;/a&gt;.
The current most popular and used tool is &lt;a href=&#34;https://en.wikipedia.org/wiki/Git&#34;&gt;Git&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Any software developer or web designer can create a &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; hosted project with a few commands in the shell.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Linux distributions often include the git application.
If not use the package manager to download and install the &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; tools.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MacOS users should use &lt;a href=&#34;https://brew.sh/&#34;&gt;homebrew&lt;/a&gt; as a package manager.
Homebrew can download and install a huge set of Unix packages.
To install git, you just have to execute &lt;em&gt;brew install git&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The huge advantage of package managers is the update function to install new versions of your applications without any configuration activities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are a Windows user you can find a Windows package on the &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;git home page&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Git has three different &lt;em&gt;areas&lt;/em&gt; for your code:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Working directory&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The area that you will be doing all of your work in (creating, editing, deleting, and organizing files).&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Staging area&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The area where you will list the changes that you have made to the working directory.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Repository&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Where Git permanently stores the changes you have made as different versions of the project.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git init &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
git clone https://gitlab.enterpriselab.ch/tangly/tangly-os.git &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;

git add README.md &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
git add * &lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;(4)&lt;/b&gt;

git commit -m &amp;#34;commit message, should be clear and legible&amp;#34; &lt;i class=&#34;conum&#34; data-value=&#34;5&#34;&gt;&lt;/i&gt;&lt;b&gt;(5)&lt;/b&gt;
git push &lt;i class=&#34;conum&#34; data-value=&#34;6&#34;&gt;&lt;/i&gt;&lt;b&gt;(6)&lt;/b&gt;
git pull &lt;i class=&#34;conum&#34; data-value=&#34;7&#34;&gt;&lt;/i&gt;&lt;b&gt;(7)&lt;/b&gt;

git status &lt;i class=&#34;conum&#34; data-value=&#34;8&#34;&gt;&lt;/i&gt;&lt;b&gt;(8)&lt;/b&gt;
git remote &lt;i class=&#34;conum&#34; data-value=&#34;9&#34;&gt;&lt;/i&gt;&lt;b&gt;(9)&lt;/b&gt;
git --version &lt;i class=&#34;conum&#34; data-value=&#34;10&#34;&gt;&lt;/i&gt;&lt;b&gt;(10)&lt;/b&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Create&lt;/strong&gt; a new repository for the root folder of your project, the folder &lt;em&gt;.git&lt;/em&gt; is created and contains all the git tracking information.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Clone&lt;/strong&gt; the repository &lt;em&gt;tangly-os&lt;/em&gt; and copy all files into the current folder.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Add the README file to git.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Add all files to git.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;5&#34;&gt;&lt;/i&gt;&lt;b&gt;5&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Commit files.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;6&#34;&gt;&lt;/i&gt;&lt;b&gt;6&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Push files to the remote repository you cloned in step 2.
Your changes are now public and available to other developers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;7&#34;&gt;&lt;/i&gt;&lt;b&gt;7&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Pull files from the remote repository you cloned in step 2.
Your local repository contains the last public changes of other developers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;8&#34;&gt;&lt;/i&gt;&lt;b&gt;8&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Returns status information about your local project.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;9&#34;&gt;&lt;/i&gt;&lt;b&gt;9&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Returns the list of remote repositories your project is connected to.
Often you have just one remote to synchronize with.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;10&#34;&gt;&lt;/i&gt;&lt;b&gt;10&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Displays the version of your git installation.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;See our blog &lt;a href=&#34;../../2017/git-local-repositories-for-the-impatient&#34;&gt;Git Local Repositories For the Impatient&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;See our blog &lt;a href=&#34;../../2016/git-branches-for-the-impatient&#34;&gt;Git Branches for the Impatient&lt;/a&gt; for more advanced commands.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_ci_pipelines_for_students&#34;&gt;CI Pipelines for Students&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-01-03-cicd_pipeline.png&#34; alt=&#34;720&#34; width=&#34;480&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The minimal Gradle build file of a Java project is elementary and compact.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;gradle&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;apply&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;plugin:&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;java&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Multi-module Gradle build file requires an additional &lt;em&gt;gradle.settings&lt;/em&gt; file identifying your modules.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;gradle&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;include&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;net.tangly.bdd&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;include&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;net.tangly.bus&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;include&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#39;net.tangly.commons&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The initial build file for each module is the same as for a minimal Gradle project.
You can now compile, test and check your application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;gradle build &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
gradle test &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
gradle check &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
gradle clean &lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;(4)&lt;/b&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Compile the simple or multi-module Java project.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Execute the unit tests of the project.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Perform static analysis checks if you define them.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Clean the output folders and delete all generated files.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are now ready to create a complete continuous integration pipeline of your project in gitlab.
A complete &lt;em&gt;.gitlab-ci.yml&lt;/em&gt; configuration for a gradle project would be:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color: #116329&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;openjdk:15&lt;/span&gt;

&lt;span style=&#34;color: #116329&#34;&gt;variables&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;:&lt;/span&gt;

&lt;span style=&#34;color: #116329&#34;&gt;before_script&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;export GRADLE_USER_HOME=`pwd`/.grade&lt;/span&gt;

&lt;span style=&#34;color: #116329&#34;&gt;stages&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;build&lt;/span&gt;
  &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;test&lt;/span&gt;

&lt;span style=&#34;color: #116329&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #116329&#34;&gt;stage&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;build&lt;/span&gt;
  &lt;span style=&#34;color: #116329&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;./gradlew --build-cache assemble&lt;/span&gt;
  &lt;span style=&#34;color: #116329&#34;&gt;cache&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;$CI_COMMIT_REF_NAME&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;policy&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;push&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;paths&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;build&lt;/span&gt;
      &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;.gradle&lt;/span&gt;

&lt;span style=&#34;color: #116329&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #116329&#34;&gt;stage&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;test&lt;/span&gt;
  &lt;span style=&#34;color: #116329&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;./gradlew check&lt;/span&gt;
  &lt;span style=&#34;color: #116329&#34;&gt;cache&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;$CI_COMMIT_REF_NAME&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;policy&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;pull&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;paths&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;build&lt;/span&gt;
      &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;.gradle&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_java_development_environment&#34;&gt;Java Development Environment&lt;/h3&gt;
&lt;div class=&#34;admonitionblock warning&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-warning&#34; title=&#34;Warning&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Please prefer workstation powered with Linux or macOS if you are developing in Java, Groovy or Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You will be more efficient and avoid all the problems related to virus scanners, missing packages or arcane path length problems.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Install the latest LTS JDK and the latest JDK on your workstation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install IntelliJ IDEA IDE.
Students can request a student license and work with the Ultimate edition.
The community edition is free for everybody.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the static analysis function of the IntelliJ IDEA has a static analysis feature.&lt;/p&gt;
&lt;div class=&#34;olist loweralpha&#34;&gt;
&lt;ol class=&#34;loweralpha&#34; type=&#34;a&#34;&gt;
&lt;li&gt;
&lt;p&gt;Select the file or package to inspect in the project view.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click the right mouse button to display the context menu and select the menu item &lt;em&gt;Analyze/Inspect Code…​&lt;/em&gt;.
The findings will teach you how to write better Java code and eliminate common errors.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Gradle to build your application&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;IntelliJ IDEA environment provides all the tools to work efficiently locally.
All the tools identified in the above mindmap are supported in IDE and associated plugins.
Students can work offline and learn the tools in a gentle manner.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The students can use the &lt;a href=&#34;https://www.jetbrains.com/help/idea/running-inspections.html&#34;&gt;IDEA Static Code Analyzer&lt;/a&gt; without any additional configuration.
The quality is good enough, and the feature empowers junior developers to learn modern and correct Java code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;More advanced scenarios use &lt;a href=&#34;https://spotbugs.github.io/&#34;&gt;SpotBugs&lt;/a&gt; and the associated IDEA plugin.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_how_to_write_unit_tests_for_a_java_application&#34;&gt;How to Write Unit Tests for a Java Application&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You should write unit and integration tests for your Java application using:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://junit.org/junit5/&#34;&gt;JUnit 5&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://site.mockito.org/&#34;&gt;Mockito&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://assertj.github.io/doc/&#34;&gt;AssertJ&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_how_to_document_your_project&#34;&gt;How to Document Your Project&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Static code generators are becoming the standard approach for the technical documentation.
One huge advantage is you can check the whole documentation into your git repository.
You have a synchronization between a released version of your application and the corresponding documentation.
Both are stored in the same repository and can be marked with a version label You can use:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.markdownguide.org/&#34;&gt;Markdown&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://asciidoc.org/&#34;&gt;AsciiDoc&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;IntelliJ has native support for markdown and an excellent plugin for Asciidoc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Gitlab provides the &lt;a href=&#34;https://docs.gitlab.com/ee/user/project/pages/&#34;&gt;Pages&lt;/a&gt; concept to create and publish complete documentation of a product.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_diagrams&#34;&gt;Diagrams&lt;/h3&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2021-01-03-diagrams.png&#34; alt=&#34;720&#34; width=&#34;480&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://plantuml.com/&#34;&gt;PlantUML&lt;/a&gt; is a simple and powerful tool for diagramming.
The tool is compatible with git philosophy and static website generators.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The IntelliJ Asciidoc is used to write technical documentation and to display embedded PlantUML diagrams.
Asciidoc format has native support for PlantUML diagrams.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Students have training in technical notation such as UML, BPNM, C4 and others.
They can now apply these notations to their projects using plantUML.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_agile_and_scrum&#34;&gt;Agile and Scrum&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Students have training in agile development and the Scrum framework.
Gitlab allows them to apply these &lt;a href=&#34;https://about.gitlab.com/solutions/agile-delivery/&#34;&gt;Agile Delivery Concepts&lt;/a&gt; to their semester and bachelor projects.
Lecturers have access to the agile and Scrum artifacts and can qualify the quality of the work.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_advanced_git_for_complex_team_development&#34;&gt;Advanced Git for Complex Team Development&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once you master the basic commands, consider learning advanced commands like:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_merge&#34;&gt;Merge&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Merge your branch &lt;em&gt;my-branch&lt;/em&gt; back into &lt;em&gt;trunk&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git commit –m &amp;#34;Some commit message&amp;#34; &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
git checkout trunk &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt; &lt;/span&gt;git merge my-branch &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Develop some code and commit it in the currently selected my-branch.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Switched to branch &lt;em&gt;trunk&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Merge the branch &lt;em&gt;my-branch&lt;/em&gt; into &lt;em&gt;trunk&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_rebase&#34;&gt;Rebase&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Rebase trunk into your branch &lt;em&gt;my-branch&lt;/em&gt;.
Note that after a rebase, the commit ids of the rebased branch are new.
A rebase is not simply a moving of commits around in history.
Git actually creates brand-new commits with new commit ids and permanently deletes the old commits.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You should prefer to rebase only with local branches.
Avoid rebasing shared branches.
If you rebase a branch that was pulled from GitHub or GitLab, and then push it back, the server will reject it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git rebase my-branch trunk&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_squash&#34;&gt;Squash&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Git squash is a technique that helps you to take a series of commits and condense it to a few commits.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So let’s see how to squash the last three commits to a single commit.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git rebase -i HEAD~3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The following content will be shown:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;pick 474bfdc2 3rd last commit
pick 1bffc15c 2nd last commit
pick 474bf0c2 last commit&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For the commits that you want to squash, replace the pick instruction with fixup, so it becomes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;fixup 474bfdc2 3rd last commit
fixup 1bffc15c 2nd last commit
pick 474bf0c2 last commit&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_cherry_picking&#34;&gt;Cherry Picking&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Cherry-picking in Git means choosing a commit from one branch and applying it onto another.
This is in contrast with other ways, such as &lt;em&gt;merge&lt;/em&gt; and &lt;em&gt;rebase&lt;/em&gt;, which normally apply many commits onto another branch.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can display the hashes of your commits in the &lt;em&gt;trunk&lt;/em&gt; with the command:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git log --oneline trunk&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now you can cherry-pick the commit you are interested in and apply it into your branch.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git checkout my-branch
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git cherry-pick &amp;lt;commit-hash&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_local_and_remote_branch&#34;&gt;Local and Remote Branch&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Read the post &lt;a href=&#34;../../2016/git-branches-for-the-impatient&#34;&gt;Git Branches for the Impatient&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_pull_request&#34;&gt;Pull Request&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Read the documentation of GitLab, BitBucket or GitHub.
You will use pull requests if you are working in a team for a project.
Sadly, students rarely work teams during their studies.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2017/git-local-repositories-for-the-impatient&#34;&gt;Git Local Repositories for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2016/git-branches-for-the-impatient&#34;&gt;Git Branches for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2020/creating-a-technical-website-with-hugo-and-asciidoc&#34;&gt;Creating a Technical Website with Hugo and AsciiDoc&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2020/support-comments-for-static-hugo-website&#34;&gt;Support Comments For Static Hugo Website&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;ubs-gitlab&#34;&gt;&lt;/a&gt;[1] &lt;a href=&#34;https://www.inside-it.ch/de/post/ubs-schliesst-den-umzug-in-die-devcloud-ab-20210813&#34;&gt;UBS schliesst Umzug auf GitLab&lt;/a&gt;.
&lt;a href=&#34;https://www.inside-it.ch/&#34;&gt;inside-it&lt;/a&gt;. 2021-08-13.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;siemens-gitlab&#34;&gt;&lt;/a&gt;[2] &lt;a href=&#34;https://about.gitlab.com/customers/siemens/&#34;&gt;Siemens GitLab&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Support Comments for Static Hugo Website</title>
      <link>https://blog.tangly.net/blog/2020/support-comments-for-static-hugo-website/</link>
      <pubDate>Fri, 11 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2020/support-comments-for-static-hugo-website/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_support_comments_for_static_hugo_website&#34;&gt;Support Comments for Static Hugo Website&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2020-12-02-head.png&#34; alt=&#34;2020 12 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are times in software when you are facing a problem, you find an off-the-shelf solution, and a few lines of code later it just works.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Today I lived one of those moments.
The whole configuration of comments and modification of the &lt;a href=&#34;https://www.docsy.dev/&#34;&gt;Docsy&lt;/a&gt; theme took around one hour.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_motivation&#34;&gt;Motivation&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I wanted to add a comment section to this blog for a while.
I was reluctant to implement one myself the classical way, using an external service such as disqus.
This blog is a static website created with &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; and does not use a database.
All pages are written with &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt;, stored in a Git repository and rendered using &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;.
I wanted to store comments in a personally owned repository and protect my readers from an advertisement and personal information collection.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_meeting_utterances&#34;&gt;Meeting Utterances&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Some information on the Internet about &lt;a href=&#34;https://utteranc.es/&#34;&gt;utteranc.es&lt;/a&gt; is wrong.
Facts are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The Utterances library uses a GitHub repository to store comments associated with your website articles and pages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your website can be hosted &lt;strong&gt;anywhere&lt;/strong&gt;.
You do &lt;strong&gt;not&lt;/strong&gt; need to host your static website repository on GitHub, but you can.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Readers wanting to comment &lt;strong&gt;must&lt;/strong&gt; login once with their GitHub account to authorize the &lt;a href=&#34;https://utteranc.es/&#34;&gt;utteranc.es&lt;/a&gt; application.
Anonymous commenting is not supported.
&lt;em&gt;This restriction is reasonable for a technical website whose readers are technically affine and already have a GitHub account.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Utterance products are free.
It claims to have no tracking, no advertisement, and no lock-in.
The comments are stored in your repository as GitHub issues.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Utterances layout looks nice and can be styled.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Utterances is an open source app built and maintained by Jeremy Danyow.
He announced the project in 2018.
It provides a lightweight web widget &lt;em&gt;&amp;lt;iframe&amp;gt;&lt;/em&gt; to add a comment section to a website.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When someone posts a comment, the Utterances bot literally leaves a corresponding comment on the issue.
In other words, each page gets its own issue with a comment feed, and so you benefit from the entire feature set of issues out-of-the-box.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Comments are stored as issues inside a GitHub repository of your choosing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can edit, report and delete comments.
&lt;em&gt;These functions are great for moderation.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are watching the repository, you will get email notifications when comments are posted to your site.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The other wonderful aspect of Utterances is how simple the entire setup really is.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_setting_up_utterances&#34;&gt;Setting Up Utterances&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The process is described in details on &lt;a href=&#34;https://utteranc.es/&#34;&gt;utteranc.es&lt;/a&gt;.
The steps are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Create a public GitHub repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install the &lt;a href=&#34;https://utteranc.es/&#34;&gt;utteranc.es&lt;/a&gt; app on the repo you would like to host comments on.
You can use the repository of your blog, or set up a dedicated repository.
This option means your blog or website does not need to be hosted on GitHub.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure the code snippet on the &lt;a href=&#34;https://utteranc.es/&#34;&gt;utteranc.es&lt;/a&gt; website and copy it.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can skip the code snippet step if you are using Docsy and follow the below instructions to configure your theme.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;script
  &lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;async&lt;/span&gt;
  &lt;span style=&#34;color: #116329&#34;&gt;src=&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;https://utteranc.es/client.js&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color: #116329&#34;&gt;repo=&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;&amp;lt;OWNER&amp;gt;/&amp;lt;NAME&amp;gt;&amp;#34;&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
  &lt;span style=&#34;color: #116329&#34;&gt;issue-term=&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color: #116329&#34;&gt;theme=&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;github-light&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color: #116329&#34;&gt;crossorigin=&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;anonymous&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color: #f6f8fa;background-color: #82071e&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;&amp;lt;OWNER&amp;gt;/&amp;lt;NAME&amp;gt; is the name of your repository.
In my case, it would be &lt;em&gt;marcelbaumann/tangly-team-comments&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_configure_docsy_theme&#34;&gt;Configure Docsy Theme&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I use the Hugo theme &lt;a href=&#34;https://www.docsy.dev/&#34;&gt;Docsy&lt;/a&gt; to style the &lt;a href=&#34;https://blog.tangly.net/&#34;&gt;Open Source Components&lt;/a&gt;.
I put some effort to have a configurable extension through site parameters.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_create_the_comments_partial_for_utterances&#34;&gt;Create the comments partial for utterances&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The partial file contains the code to display for commenting using utterances.
It is a modified version of the snippet you can generate on the &lt;a href=&#34;https://utteranc.es/&#34;&gt;utteranc.es&lt;/a&gt; website.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Create a partial in &lt;em&gt;docsy/layout/partial&lt;/em&gt;.
I named my partial &lt;em&gt;comments-utterances.html&lt;/em&gt; and add the following snippet.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;div&lt;/span&gt; &lt;span style=&#34;color: #116329&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;page-blank&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;div&lt;/span&gt; &lt;span style=&#34;color: #116329&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;utterancers_thread&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;script &lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;src=&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;https://utteranc.es/client.js&amp;#34;&lt;/span&gt;
            &lt;span style=&#34;color: #116329&#34;&gt;repo= &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;{{&lt;/span&gt; &lt;span style=&#34;color: #f6f8fa;background-color: #82071e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;Site.Params.comments_utterances_repo&lt;/span&gt; &lt;span style=&#34;color: #f6f8fa;background-color: #82071e&#34;&gt;}}&lt;/span&gt;                   &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
            &lt;span style=&#34;color: #116329&#34;&gt;issue-term= &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;{{&lt;/span&gt; &lt;span style=&#34;color: #f6f8fa;background-color: #82071e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;Site.Params.comments_utterances_issue_term&lt;/span&gt; &lt;span style=&#34;color: #f6f8fa;background-color: #82071e&#34;&gt;}}&lt;/span&gt;       &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
            &lt;span style=&#34;color: #116329&#34;&gt;theme= &lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;{{&lt;/span&gt; &lt;span style=&#34;color: #f6f8fa;background-color: #82071e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;Site.Params.comments_utterances_theme&lt;/span&gt; &lt;span style=&#34;color: #f6f8fa;background-color: #82071e&#34;&gt;}}&lt;/span&gt;                 &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
            &lt;span style=&#34;color: #116329&#34;&gt;crossorigin=&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;anonymous&amp;#34;&lt;/span&gt;
            &lt;span style=&#34;color: #116329&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;GitHub repository where the issues are stored&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;See &lt;a href=&#34;https://utteranc.es/&#34;&gt;utteranc.es&lt;/a&gt; documentation how the reference to a page, or an article can be tailored&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;See &lt;a href=&#34;https://utteranc.es/&#34;&gt;utteranc.es&lt;/a&gt; documentation about supported themes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_edit_the_blog_content_file&#34;&gt;Edit the blog content file&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The template &lt;em&gt;docsy/layouts/blog/content.html&lt;/em&gt; is edited to include the above defined partial file.
The original file supports connecting to disqus.
I replaced the disqus specific code with the inclusion of the partial defined above for utterances comment support.
&lt;em&gt;Perhaps &lt;a href=&#34;https://www.docsy.dev/&#34;&gt;Docsy&lt;/a&gt; will introduce a more generic mechanism in the future to integrate commenting systems.
I assume they are waiting on &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; to first provide such a mechanism.
Currently, Hugo and Docsy only provide out of the box support for Disqus.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;div&lt;/span&gt; &lt;span style=&#34;color: #116329&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;td-content&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;{{ .Title }}&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
	{{ with .Params.description }}&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;div&lt;/span&gt; &lt;span style=&#34;color: #116329&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;lead&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;gt;&lt;/span&gt;{{ . | markdownify }}&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;{{ end }}
	&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;div&lt;/span&gt; &lt;span style=&#34;color: #116329&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;td-byline mb-4&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;gt;&lt;/span&gt;
		{{ with .Params.author }}{{ T &amp;#34;post_byline_by&amp;#34; }} &lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;{{ . | markdownify }}&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt; |{{ end}}
		&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;time&lt;/span&gt; &lt;span style=&#34;color: #116329&#34;&gt;datetime=&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;{{  $.Date.Format &amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f6f8fa;background-color: #82071e&#34;&gt;2006&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;-01-02&lt;/span&gt;&lt;span style=&#34;color: #f6f8fa;background-color: #82071e&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #f6f8fa;background-color: #82071e&#34;&gt;}}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #116329&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;text-muted&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;&amp;gt;&lt;/span&gt;{{ $.Date.Format $.Site.Params.time_format_blog  }}&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/time&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
	{{ if (and (not .Params.hide_readingtime) (.Site.Params.ui.readingtime.enable)) }}
	    {{ partial &amp;#34;reading-time.html&amp;#34; . }}
	{{ end }}
	{{ .Content }}
	{{ if (.Site.Params.comments_utterances) }}
		&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;br&lt;/span&gt; &lt;span style=&#34;color: #116329&#34;&gt;/&amp;gt;&lt;/span&gt;
		{{ partial &amp;#34;comments-utterances.html&amp;#34; . }}
		&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;br&lt;/span&gt; &lt;span style=&#34;color: #116329&#34;&gt;/&amp;gt;&lt;/span&gt;
	{{ end }}

	{{ partial &amp;#34;pager.html&amp;#34; . }}
&lt;span style=&#34;color: #116329&#34;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_add_four_site_variables_to_config_toml&#34;&gt;Add four site variables to config.toml&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The above changes try to be generic and are configured through site variables in the site configuration file under the &lt;em&gt;[params]&lt;/em&gt; block.
You do not need to edit partial files to tailor them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;color: #6e7781&#34;&gt;# flag indicating if the utterances (https://utteranc.es/) should be displayed&lt;/span&gt;
&lt;span style=&#34;color: #0550ae&#34;&gt;comments_utterances&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;true&lt;/span&gt;

&lt;span style=&#34;color: #6e7781&#34;&gt;# GitHub repository name where all comments are stored. The repository can be the same as the website repository or a different one.&lt;/span&gt;
&lt;span style=&#34;color: #0550ae&#34;&gt;comments_utterances_repo&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;marcelbaumann/tangly-team-comments&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color: #6e7781&#34;&gt;# Encoding used to map a site page to a GitHub issue. See utterances (https://utteranc.es/) documentation.&lt;/span&gt;
&lt;span style=&#34;color: #0550ae&#34;&gt;comments_utterances_issue_term&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;pathname&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color: #6e7781&#34;&gt;# Theme used by utterance on the website. See utterances (https://utteranc.es/) documentation.&lt;/span&gt;
&lt;span style=&#34;color: #0550ae&#34;&gt;comments_utterances_theme&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0a3069&#34;&gt;&amp;#34;github-light&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_hugo_and_docsy_related_articles&#34;&gt;Hugo and Docsy Related Articles&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2020/creating-a-technical-website-with-hugo-and-asciidoc&#34;&gt;Creating a technical Website with Hugo and Asciidoc&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2020/support-comments-for-static-hugo-website&#34;&gt;Support Comments for Static Hugo Website&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Creating a technical Website with Hugo and Asciidoc</title>
      <link>https://blog.tangly.net/blog/2020/creating-a-technical-website-with-hugo-and-asciidoc/</link>
      <pubDate>Fri, 02 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2020/creating-a-technical-website-with-hugo-and-asciidoc/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_creating_a_technical_website_with_hugo_and_asciidoc&#34;&gt;Creating a technical Website with Hugo and Asciidoc&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2020-10-01-head.jpg&#34; alt=&#34;2020 10 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I hosted my technical blogs on &lt;a href=&#34;https://www.blogger.com/&#34;&gt;blogger&lt;/a&gt; for years.
If I correctly remember, I started to use blogger ten years ago.
It is a great tool with some drawbacks.
Over the years, the drawbacks sting more and more:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Their editor is brittle, with limited functionality and unreliable.
The generated HTML is not legible and does not support concepts such as micro fragments, meta information or simple functions such as source code highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The last quarter, they started to tinker with their editor and output format.
My older posts are now a mess and can only be open in the HTML mode.
If I switch to their WYSIWYG editor, the layout is destroyed and random fonts family and sizes are displayed.
Worse, the blogs are also displayed mangled to the readers even if I do not edit them.
This destruction of all older blogs and the missing migration path were killer criteria.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Blogger does not support modern markup language such &lt;a href=&#34;https://www.markdownguide.org/&#34;&gt;Markdown&lt;/a&gt; or &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt;.
Blogger uses a proprietary and not easy to port format.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It is &lt;strong&gt;time&lt;/strong&gt; to find an alternative, and I have to confess I am a huge fan of &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;OK, so why not go with Markdown?
Don’t get me wrong, there is nothing bad with Markdown; except that no one should probably use it when &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; and Asciidoctor are available.
I’m writing all my documents with &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt;
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The following needs are identified:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;I shall write blogs with the selected solution.
The blogs shall be written in &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt;.
The blog platform should support multiple years of publishing and referencing between blogs.
Our projects and our collaborators put effort to regularly publish articles.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I shall be able to write technical articles and publish them on the same site.
The articles are naturally written in &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt;.
We want professional looking documentation to encourage new users to try our open source components.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I shall publish the technical documentation of the open source components I develop on the same site.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; was selected as static site generator because its support for &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; is tremendously improving.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Static website generators have strong advantages for technical savvy people:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hosting is cheap.
GitHub, GitLab or Bitbucket pages even host static websites for free.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The source files go into &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; for backup and history.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The source files are in plain text:&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Changes come in as a &lt;em&gt;Pull Request&lt;/em&gt; for proper review and CI pipeline validation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The sources are open in our IDEs, which encourages refactoring them alongside the code.
This results in less stale content.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;First I used the &lt;a href=&#34;https://github.com/thingsym/hugo-theme-techdoc/&#34;&gt;hugo-theme-techdoc&lt;/a&gt; to customize &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;.
It worked great for the technical documentation and technical articles but fell short of my wishes for the blog part.
When I discover the theme &lt;a href=&#34;https://www.docsy.dev/&#34;&gt;Docsy&lt;/a&gt;.
It supports the technical documentation, technical articles, and blogging.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The best part is that &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; now supports &lt;a href=&#34;https://asciidoctor.org/&#34;&gt;Asciidoctor&lt;/a&gt; natively.
No more strange manipulation to load &lt;em&gt;gem&lt;/em&gt; modules you need.
And diagrams through asciidoc-diagram and plantUml are generated in the expected folders.
The documentation is still on the light side, but you find the need information on the various pull requests.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The bonus is that &lt;a href=&#34;https://asciidoctor.org/&#34;&gt;Asciidoctor&lt;/a&gt; newer versions have native support for &lt;em&gt;rouge&lt;/em&gt; syntax highlighter.
It is no more necessary to load &lt;em&gt;pygment&lt;/em&gt; highlighter and configure CSS files.
Another huge gain is that &lt;em&gt;plantuml&lt;/em&gt; and other diagrams are generated at the right location.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_install_the_tools&#34;&gt;Install the Tools&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;My development platform is a MacBookPro and macOS.
I use &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; as a package manager.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The instructions to install hugo and asciidoctor are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;brew install hugo                         &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;

brew install asciidoctor                  &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
gem install asciidoctor-diagram
gem install asciidoctor-rouge
gem install asciidoctor-bibtex
gem install asciimath

brew install plantuml                     &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
brew install graphviz

sudo npm install -D --save autoprefixer   &lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;(4)&lt;/b&gt;
sudo npm install -D --save postcss-cli
sudo npm install -D --save postcss&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Install &lt;a href=&#34;https://gohugo.io/&#34;&gt;hugo&lt;/a&gt; application&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Install &lt;a href=&#34;https://asciidoctor.org/&#34;&gt;asciidoctor&lt;/a&gt; and additional asciidoctor packages&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Install &lt;a href=&#34;https://plantuml.com/&#34;&gt;plantuml&lt;/a&gt; and &lt;a href=&#34;https://graphviz.org/&#34;&gt;graphviz&lt;/a&gt; for diagrams, in particular UML sketches&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Install &lt;a href=&#34;https://postcss.org/&#34;&gt;PostCSS&lt;/a&gt; and additional packages used by docsy to generate deployment site.
See also &lt;a href=&#34;https://www.docsy.dev/docs/getting-started/&#34;&gt;docsy documentation&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_asciidoctor_configuration&#34;&gt;Asciidoctor Configuration&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Below the configuration of asciidoctor in the &lt;em&gt;config.toml&lt;/em&gt; file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;markup.asciidocext&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #0a3069&#34;&gt;extensions = [&amp;#34;asciidoctor-html5s&amp;#34;, &amp;#34;asciidoctor-diagram&amp;#34;]&lt;/span&gt;
  &lt;span style=&#34;color: #0a3069&#34;&gt;workingFolderCurrent = &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;true&lt;/span&gt;
  &lt;span style=&#34;color: #0a3069&#34;&gt;[markup.asciidocext.attributes]&lt;/span&gt;
    &lt;span style=&#34;color: #0a3069&#34;&gt;imagesdir = &amp;#34;../pics&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color: #0a3069&#34;&gt;source-highlighter = &amp;#34;rouge&amp;#34;&lt;/span&gt;            &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
    &lt;span style=&#34;color: #0a3069&#34;&gt;rouge-style = &amp;#34;github&amp;#34;&lt;/span&gt;                  &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
    &lt;span style=&#34;color: #0a3069&#34;&gt;rouge-css = &amp;#34;style&amp;#34;&lt;/span&gt;                     &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
    &lt;span style=&#34;color: #0a3069&#34;&gt;icons = &amp;#34;font&amp;#34;&lt;/span&gt;                          &lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;(4)&lt;/b&gt;
    &lt;span style=&#34;color: #0a3069&#34;&gt;ref-less = &amp;#34;https://less.works/[LeSS]&amp;#34;&lt;/span&gt;  &lt;i class=&#34;conum&#34; data-value=&#34;5&#34;&gt;&lt;/i&gt;&lt;b&gt;(5)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Select &lt;a href=&#34;https://rouge-ruby.github.io/docs/&#34;&gt;rouge&lt;/a&gt; as source highlighter.
You should not add it to the extensions because since &lt;a href=&#34;https://asciidoctor.org/&#34;&gt;Asciidoctor&lt;/a&gt; version 2.0 rouge is included.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Define the style used to highlight source code.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Configure rouge to generate all formatting data into the generated HTML file, avoiding any CSS file configuration.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Icons provide better looking icons for various &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt;} constructs.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;5&#34;&gt;&lt;/i&gt;&lt;b&gt;5&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Define document attributes which are accessible to all processed documents (DRY concepts for the whole site).&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CAUTION&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;exampleblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Newer versions of hugo have stricter security restrictions.
You must explicitly enable asciidoctor support by adding the following statements in your configuration file&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;security&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;security.exec&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #0a3069&#34;&gt;allow = [&amp;#39;^dart-sass-embedded$&amp;#39;, &amp;#39;^go$&amp;#39;, &amp;#39;^npx$&amp;#39;, &amp;#39;^postcss$&amp;#39;, &amp;#39;^asciidoctor$&amp;#39;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_docsy_configuration&#34;&gt;Docsy Configuration&lt;/h4&gt;
&lt;div class=&#34;sect4&#34;&gt;
&lt;h5 id=&#34;_add_first_level_folders&#34;&gt;Add First Level Folders&lt;/h5&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Each time you add your own first level folder – meaning at the same level as docs, blog, about, or community, you need to extend the layout to support it.
For example, I store technical articles in the folder ideas and use the standard template.
So I need to add (if not, no items are visible in the sidebar).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;cp -R ./layouts/docs ./layouts/ideas&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect4&#34;&gt;
&lt;h5 id=&#34;_change_layouts&#34;&gt;Change layouts&lt;/h5&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We had to change the partial &lt;em&gt;footer.html&lt;/em&gt; to display a better looking copyright clause.
The original version has hard coded text not really compatible with the creative commons license we are using.
The layout is updated by overwriting the involved partial file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;cp $&lt;/span&gt;prjDir/src/site/website/docsy/layouts/partials/footer.html &lt;span style=&#34;color: #0550ae&#34;&gt;$siteDir&lt;/span&gt;/themes/docsy/layouts/partials&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_enable_local_search_engine&#34;&gt;Enable Local Search Engine&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One cool feature of &lt;a href=&#34;https://www.docsy.dev/&#34;&gt;Docsy&lt;/a&gt; is local search support through &lt;a href=&#34;https://lunrjs.com/&#34;&gt;lunrjs&lt;/a&gt; engine.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color: #0a3069&#34;&gt;algolia_docsearch = &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;false&lt;/span&gt;

&lt;span style=&#34;color: #0a3069&#34;&gt;offlineSearch = &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;true&lt;/span&gt;
&lt;span style=&#34;color: #0a3069&#34;&gt;offlineSearchSummaryLength = &lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;200&lt;/span&gt;
&lt;span style=&#34;color: #0a3069&#34;&gt;offlineSearchMaxResults = 25&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_learning&#34;&gt;Learning&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The static website is published under &lt;a href=&#34;https://blog.tangly.net/&#34;&gt;Open Source Components&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The source of the whole website is available under &lt;a href=&#34;https://bitbucket.org/tangly-team/tangly-os/src/master/src/site/website/&#34;&gt;Website Source Code&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Printing of a single article is supported through your browser.
You can configure printing a whole section with or without a table of contents through &lt;a href=&#34;https://www.docsy.dev/docs/adding-content/print/&#34;&gt;configuration options&lt;/a&gt;.
For advanced cases, you can define the layout of the printed document.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can use relative links in your &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; documents.
Beware where the files are located by &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; engine and the naming conventions shall follow &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; rules.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Avoid the specialized but uncompleted &lt;em&gt;html5s&lt;/em&gt; backend and use instead the &lt;em&gt;html5&lt;/em&gt; backend.
I was not able to find good examples of stylesheets for the semantic backend.
The &lt;em&gt;html5s&lt;/em&gt; backend uses new names for classification and sometimes different HTML structures.
The regular available stylesheets will not style correctly the generated website.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Docsy theme does not explicitly support asciidoc documents and the associated stylesheets.
I had to extend the Docsy stylesheets with styling for admonition blocks, quote blocks, and embedded images to improve the quality of the texts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
The Hugo theme community is slow to better support asciidoc documents.
The Hugo developers clearly stated that styling for asciidoc documents is the responsibility of theme authors.
All Hugo users shall be aware that asciidoc is an officially supported input format.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Funny is that the blogger software and the docsy theme are from the same company as &lt;strong&gt;Google&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;This blog article is naturally written in &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; syntax&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_hugo_and_docsy_related_articles&#34;&gt;Hugo and Docsy Related Articles&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2020/creating-a-technical-website-with-hugo-and-asciidoc&#34;&gt;Creating a technical Website with Hugo and Asciidoc&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2020/support-comments-for-static-hugo-website&#34;&gt;Support Comments for Static Hugo Website&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. You find tutorials how to write asciidoc documentation and how to use the toolchain on YouTube and Udemy.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Git Local Repositories for the Impatient</title>
      <link>https://blog.tangly.net/blog/2017/git-local-repositories-for-the-impatient/</link>
      <pubDate>Wed, 17 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2017/git-local-repositories-for-the-impatient/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_git_local_repositories_for_the_impatient&#34;&gt;Git Local Repositories for the Impatient&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2017-05-02-head.png&#34; alt=&#34;2017 05 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You shall put your source code and text documentation under a version management system.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The actual industrial standard for version control system is &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt;, a distributed version control system -
&lt;a href=&#34;https://en.wikipedia.org/wiki/Distributed_version_control&#34;&gt;DVCS&lt;/a&gt; -.
It tracks changes in any set of computer files, usually used for coordinating work among programmers who are collaboratively developing source code during software development.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://subversion.apache.org/&#34;&gt;Subversion&lt;/a&gt; was a great tool and should now be retired.
Simple refactoring activities with renaming will already corrupt a subversion repository.
Commit operations can take quite some time before completing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Install git on your development machine.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Binaries are available for all major platforms and can be found under &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Downloads&lt;/a&gt;
GUI clients are also provided for all major platforms
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want higher security, you should install &lt;em&gt;ssh&lt;/em&gt;.
The operation is trivial for linux and macOS systems.
It is more cumbersome on Microsoft Windows systems.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In case you are using the IntelliJ IDEA configure &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; in the IDE through the preference pane.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Graphical &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; clients are available.
I sometimes use the free available &lt;a href=&#34;https://www.sourcetreeapp.com/&#34;&gt;SourceTree&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_create_a_local_repository&#34;&gt;Create a Local Repository&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To put your product under git version management, go to the root of the product and perform the command&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git init&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You have want to have a local copy of an existing git repository:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git clone &amp;lt;repository link&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;     &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The link is either a https or a ssh link to the remote repository.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once you have a local copy of a shared repository, you can update your copy with the changes of the remote repository using:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git pull&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To add a specific file or all your source files to git.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git add [filename]
git add *&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You shall perform these operations to add a product to a local &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; repository directly in IntelliJ IDEA:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Open the product you want to store in a repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On the main menu, choose VCS | Import into Version Control | Create Git Repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the dialog that opens, specify the directory where you want to create a new Git repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Put the required files under &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; version control.
The files appear in the Local Changes tab of the Version Control tool window, under the Default change list.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can define the set of files which should be ignored by git in the &lt;em&gt;.gitignore&lt;/em&gt; configuration file.
See &lt;a href=&#34;https://git-scm.com/docs/gitignore&#34;&gt;gitignore&lt;/a&gt; for details.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Your IDE shall support this feature and would add files or folder to ignore through its user interface.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_commit_changes&#34;&gt;Commit Changes&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To commit your changes you simply:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git commit -m &amp;#34;commit message, should be clear and legible&amp;#34;         &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Development platforms such as &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;, &lt;a href=&#34;https://gitlab.com/&#34;&gt;GitLab&lt;/a&gt; orhttps://bitbucket.org/[Bitbucket] often support linking commit messages containing keywords with work items and tickets.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can perform these operations directly in IntelliJ IDEA using the provided VCS functions.
Switch to the Version Control tool window and switch to the Local Changes tab.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Expand the Un-versioned Files node, and select the files to be added.
From the context menu, choose &lt;em&gt;to Add to VCS&lt;/em&gt;, or press ⌥⌘A.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Switch to the Project tool window and select the files to be added.
From the context menu, choose Git | Add or press⌥⌘A.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Each time you commit your changes, you gain the ability to reverse back to exactly this state.
Each time you made a modification and tested it, just commit it.
The cost of a commit is marginal.
When working with Git, TDD, and ATDD, it is normal to commit every few minutes.
By a few minutes, we mean 5 or 10 minutes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Observe yourself.
If you commit at the end of the day, you are using your DVCS as a backup medium.
It is time to change your habits.
Use Git as a history of all successful changes you implement, and simply roll back all unsuccessful ones, simply discarding them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you forget some files when performing the last commit, you can correct it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git commit --amend   &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Please do not amend shared commits.
Amending a commit that is shared with another user will potentially require confusing and lengthy merge conflict resolutions.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once you are satisfied with your changes, you can propagate them to the remote repository using:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git push&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_what_is_your_project_status&#34;&gt;What is Your Project Status?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To find out what the status of your product is, simply&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git status                                      &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
git log                                         &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
git diff                                        &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;status of your local copy with modified files, and untracked files.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;list of commits with detailed information.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;shows the changes in edited files.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The same information is available in IntelliJ IDEA under&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Open the required product&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On the main menu, choose VCS | Refresh File Status&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Switch to the Version Control window and open the Local Changes tab.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_always_work_with_trunk&#34;&gt;Always Work with Trunk&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Ideally, you shall always work against trunk, also called the main branch.
Because you develop using TDD and ATTD approaches, you know your source code is always working.
This approach is deeply compatible with lean and agile values.
It is also the one with the least waste of effort.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If your team decides to work with branches, make them short-lived!.
See how you can do it in the &lt;a href=&#34;../../2016/git-branches-for-the-impatient/&#34;&gt;Git Branches for the Impatient&lt;/a&gt; post.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_discarding_changes&#34;&gt;Discarding Changes&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You find the changes you made locally were not a good decision.
No problem, you can erase these changes with:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Undo last commit putting everything back into the staging area:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git reset --soft HEAD^&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Undo last and remove changes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git reset --hard HEAD^          &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Short form is &lt;em&gt;git reset --hard&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You revert to the last save-committed set of files.
Resetting with the hard option recursively discards all of your currently uncommitted (unstaged or staged) changes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You want to restore just one file to its previous committed state.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git checkout --[filename]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_configuration_tips&#34;&gt;Configuration Tips&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You shall avoid the end of online character warnings by configuring git to handle them.
The situation arises because Microsoft OS uses CRLF for the end of lines instead of CR.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can configure git to handle it by running on Windows:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git config --global core.autocrlf true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Or on Linux and macOS:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git config --global core.autocrlf input&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_thoughts&#34;&gt;Thoughts&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When using an IDE, consider the &lt;a href=&#34;https://editorconfig.org&#34;&gt;Editor Configuration&lt;/a&gt; approach for the end of line, indentation, and tabs versus spaces.
All major integrated development environments support this configuration approach.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can find a lot of information on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/git&#34;&gt;Stack Overflow&lt;/a&gt;.
Beware when reading the answers on Stack Overflow that Git commands have changed over time.
Select new posts to find the best answers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The nifty-gritty details can be found in the official &lt;a href=&#34;https://git-scm.com/book/en/v2&#34;&gt;Git documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;em&gt;Pro Git&lt;/em&gt; book can be downloaded from &lt;a href=&#34;https://git-scm.com&#34;&gt;Git SCM&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2016/git-branches-for-the-impatient/&#34;&gt;Git Branches for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2017/git-local-repositories-for-the-impatient/&#34;&gt;Git Local Repositories for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2023/git-rebase-and-merge-for-the-impatient/&#34;&gt;Git Rebase and Merge for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2023//git-tag-for-the-impatient/&#34;&gt;Git Tag for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2023/semantic-commits-for-the-impatient/&#34;&gt;Semantic Commits for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. Major platforms are Unix, Linux, macOs, and Microsoft Windows.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Git Branches for the Impatient</title>
      <link>https://blog.tangly.net/blog/2016/git-branches-for-the-impatient/</link>
      <pubDate>Thu, 21 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2016/git-branches-for-the-impatient/</guid>
      <description>
        
        
        &lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_git_branches_for_the_impatient&#34;&gt;Git Branches for the Impatient&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2016-07-01-head.png&#34; alt=&#34;2016 07 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are working in a small mostly collocated development team.
Sometimes a team member works from a remote location.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You have one git repository accessible to all team members.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This repository is used to share source code and documentation artifacts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You use the actual industrial standard for version control systems is &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You decided to use branches to implement new features or fix errors instead of using &lt;a href=&#34;https://trunkbaseddevelopment.com/&#34;&gt;Trunk-Based Development&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here the cookbook to create, edit, merge and delete local and remote branches in &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; (version 2.x).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Git branches have two important qualities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A branch is like an idea.
Once you implemented the idea, feature or fix, you just merge back to trunk and delete the branch.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multiple branches coexist in a repository.
Ideally branches should be short-lived to avoid waste.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The history of the branch commits is still visible upon deletion of the branch.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In an agile working setup, a branch should be merged before the end of the sprint.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All stories should be completed inside a sprint time slot.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;You should use meaningful names for your branch name and associated commit messages.&lt;/em&gt;
&lt;em&gt;Put the ticket number into the branch name and messages for future searches.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A lot of servers support keywords such as &lt;em&gt;fix #42&lt;/em&gt; to automatically close ticket 42.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The described approach is optimal for small teams.
The approach is compatible with pull requests if you introduce such a workflow later.
You do not need to pull requests when you are working collocated.
I prefer pair programming and pair check-in sessions against the trunk.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For a short introduction to how to start using Git in software projects, see the blog
&lt;a href=&#34;../../2017/git-local-repositories-for-the-impatient/&#34;&gt;Git Local Repositories for the Impatient&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_create_the_branch&#34;&gt;Create the Branch&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You get a list of branches with:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git branch                                      &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
git fetch                                       &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;List of all branches in the local repository.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Retrieve all changes from the remote repository including new branches and store them in the local repository.
Your working directory is not modified.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Create new branch feat-#42 locally.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git checkout -b feat-#&lt;/span&gt;42                        &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git checkout feat-#&lt;/span&gt;42                           &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Create a new local branch.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Select an existing branch.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Create the remote branch with the same name and initiate tracking, assuming your remote uses the standard default name origin.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git push -u origin feat-#&lt;/span&gt;42&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock caution&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-caution&#34; title=&#34;Caution&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Publish files on branch when you are ready to share your changes.
Once files are available on remote repository, you should avoid rebasing your branch.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_work_on_the_branch&#34;&gt;Work on the Branch&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Add your changes and commit them regularly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git commit -a -m “commit message describing activities for feat-#&lt;/span&gt;42“&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As long as you are working alone on the branch, regularly synchronize it with the main trunk using rebase operations.
I suggest performing the synchronization at least daily.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once you share your branch, synchronize using merge operations.
Doing a rebase will confuse other developers by providing an alternate version of the same change.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This housekeeping avoids stress when you finally merge your branch back to trunk.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Upon running the unit tests locally, push the changes to the repository.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git push&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;Now you can test the branch from the central repository and deploy it to your continuous integration pipeline environment.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When working in a team, you can request a review of your branch before closing it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; calls such a request a &lt;em&gt;pull request&lt;/em&gt;.
You can open a request through the platform.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://gitlab.com/&#34;&gt;GitLab&lt;/a&gt; calls such a request a &lt;em&gt;merge request&lt;/em&gt;.
You can open a request through the platform.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These platforms provide tools to identify open requests you are requested to provide feedback.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Major IDEs provide some support to create and edit a merge request.
Often &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; is better supported than &lt;a href=&#34;https://gitlab.com/&#34;&gt;GitLab&lt;/a&gt; or &lt;a href=&#34;https://bitbucket.org/&#34;&gt;Bitbucket&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_merge_the_branch&#34;&gt;Merge the Branch&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Switch to main and synchronize with your remote repository, the &lt;em&gt;-p&lt;/em&gt; parameter means &lt;em&gt;--prune&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git checkout main       &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
git fetch --all -p
git pull&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The default branch is often called main, master, or trunk.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Merge to main.
The option --no-ff will always keep branch information.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git merge --no-ff feat-#&lt;/span&gt;42&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Or if you want a single commit to the complete branch.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git merge —squash —no-ff feat-#&lt;/span&gt;42       &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;You can perform complex squashing of selected commits using &lt;em&gt;git rebase -i HEAD-X&lt;/em&gt;.
X the number of commits in the past you want to manipulate.
Please consult a tutorial or an expert before trying it.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The strategy using squash when merging is often used when a Pull Request is closed.
Code hosting platforms like &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;, &lt;a href=&#34;https://gitlab.com/&#34;&gt;GitLab&lt;/a&gt;, or &lt;a href=&#34;https://bitbucket.org/&#34;&gt;Bitbucket&lt;/a&gt; support this as an option when merging a pull request.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Push the changes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git push&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For advanced users, you can first rebase your branch and squash superfluous commits before merging the branch back to trunk.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_delete_the_branch&#34;&gt;Delete the Branch&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Delete the remote branch (also &lt;em&gt;git branch -dr origin/feat-#42&lt;/em&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git push origin --delete feat-#&lt;/span&gt;42&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Delete the local branch.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git branch -d feat-#&lt;/span&gt;42&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are done.
Now you are ready to implement the next feature.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_view_local_and_remote_branches&#34;&gt;View Local and Remote Branches&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want to view branches, use the following commands for the local branches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git branch
git branch --no-merged&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want to view remote branches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git branch -r
git branch -r --no-merged&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_checkout_remote_branch&#34;&gt;Checkout Remote Branch.&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The -p parameter means --prune&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git fetch --all -p
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git checkout #&lt;/span&gt;feat_42&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_thoughts&#34;&gt;Thoughts&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can find a lot of information on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/git&#34;&gt;Stack Overflow&lt;/a&gt;.
Beware when reading the answers on Stack Overflow that Git commands have changed over time.
Select new posts to find the best answers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The nifty-gritty details can be found in the official &lt;a href=&#34;https://git-scm.com/book/en/v2&#34;&gt;Git documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;em&gt;Pro Git&lt;/em&gt; book can be downloaded from &lt;a href=&#34;https://git-scm.com&#34;&gt;Git SCM&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock warning&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-warning&#34; title=&#34;Warning&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Beware that &lt;a href=&#34;https://gitolite.com/&#34;&gt;gitolite&lt;/a&gt; does not support special characters such as # in branch names.
Use them only in the commit messages.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These same characters work in &lt;a href=&#34;https://bitbucket.org/&#34;&gt;bitbucket&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_links&#34;&gt;Links&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2016/git-branches-for-the-impatient/&#34;&gt;Git Branches for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2017/git-local-repositories-for-the-impatient/&#34;&gt;Git Local Repositories for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2023/git-rebase-and-merge-for-the-impatient/&#34;&gt;Git Rebase and Merge for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2023//git-tag-for-the-impatient/&#34;&gt;Git Tag for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2023/semantic-commits-for-the-impatient/&#34;&gt;Semantic Commits for the Impatient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
  </channel>
</rss>
