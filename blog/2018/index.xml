<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tangly Components – 2018</title>
    <link>https://blog.tangly.net/blog/2018/</link>
    <description>Recent content in 2018 on tangly Components</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 11 Dec 2018 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://blog.tangly.net/blog/2018/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Blog: How Healthy is Your Product? - Product Strategy Check</title>
      <link>https://blog.tangly.net/blog/2018/how-healthy-is-your-product-product-strategy-check/</link>
      <pubDate>Tue, 11 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2018/how-healthy-is-your-product-product-strategy-check/</guid>
      <description>
        
        
        &lt;div class=&#34;openblock float-group&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2018-12-01-head.png&#34; alt=&#34;2018 12 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are developing your product using agile and lean approaches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;How can you check your approach and distill improvements?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Health check of your product and your development approach are certainly a good solution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This post is the third of a set of articles identifying health checks with different focus.
We will identify strengths, potential weaknesses and hopefully find room for improvement.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What is your product strategy?
How do you involve your customers and stakeholders?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_rules&#34;&gt;Rules&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The patient solely decides if a health check shall be performed.
The effort and depth of a health check is defined together with the patient.
The findings are considered confidential.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A short check with a feedback workshop presenting the insights requires around two work days.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A deeper and more intensive check requests more effort, between one and four weeks.
Upon completion, you can also hire a coach to implement selected findings and improve durably the health of your application.
The findings are often clear and the measures are straightforward.
The real work is to implement consistently the measures.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I have the same personal challenge when trying to lose weight or improve my running form.
The long term implementation is the crux.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_product_strategy_checks&#34;&gt;Product Strategy Checks&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Vision of the product&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;You can communicate the vision on your product in an elevator pitch and have it hanging in the team workplace.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Roadmap of the product&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;You have a visible roadmap describing the major releases for the next 12 to 18 months.
Define the &lt;a href=&#34;https://www.romanpichler.com/blog/choosing-the-right-planning-horizons-for-your-product/&#34;&gt;right planning horizon&lt;/a&gt; for your article.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Release plan of the product&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;You have a release plan for the next 6 to 9 months.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Story map&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;You have a story map grouping the stories and epics to reflect your release plan.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Customer involvement&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;You have customer interaction in every sprint.
Not only during the review event, but also during the planning meeting and architecture discussion.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Review with customer involvement&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Realized stories are discussed during the review and demonstration meeting and timely feedback is provided to allow backlog refinement before the next planning meeting.
A mature organization has acceptance criteria for each story and automated verification of the criteria at any time.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Early and regular delivery of a product increment&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;You get feedback on the delivered and installed product increment.
This goal is only achievable if your organization has implemented a delivery pipeline.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Risk List&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;You have a documented risk lists with description of risks, probability of occurrence and cost per event, and mitigation measures,&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Solution architecture&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;You have an emergent solution architecture with a prototype and support the team to refine the architecture proposal and to implement it in the solution.
Do not forget an agile product needs an &lt;a href=&#34;https://en.wikipedia.org/wiki/Agile_Architecture&#34;&gt;agile architecture&lt;/a&gt;.
See also the &lt;a href=&#34;https://less.works/&#34;&gt;LeSS&lt;/a&gt; approach for creating an &lt;a href=&#34;https://less.works/less/technical-excellence/architecture-design.html&#34;&gt;agile architecture&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Non-functional requirements&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;You have identified your non-functional requirements and constraints and have fitness measures in place.
The measures guarantee the continuous achievement of the constraints - often defined as -ility requirements -.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;See the &lt;a href=&#34;../../2018/how-healthy-is-your-product-delivery-pipeline-check/&#34;&gt;Delivery Pipeline Check&lt;/a&gt; to enable your organization to provide realtime feedback on how well the above constraints are correctly implemented in the product.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_posts_in_the_health_check_series&#34;&gt;Posts in the Health Check Series&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2018/how-healthy-is-your-product-source-code-check/&#34;&gt;Source Code Check&lt;/a&gt;
Marcel Baumann. 2018.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2018/how-healthy-is-your-product-delivery-pipeline-check/&#34;&gt;Delivery Pipeline Check&lt;/a&gt;
Marcel Baumann. 2018.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2018/how-healthy-is-your-product-product-strategy-check/&#34;&gt;Product Strategy Check&lt;/a&gt;
Marcel Baumann. 2018.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2019/how-healthy-is-your-product-company-culture-check/&#34;&gt;Company Culture Check&lt;/a&gt;
Marcel Baumann. 2019.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: SAFE 4.6: Improvements Direly Needed</title>
      <link>https://blog.tangly.net/blog/2018/safe-4.6-improvements-direly-needed/</link>
      <pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2018/safe-4.6-improvements-direly-needed/</guid>
      <description>
        
        
        &lt;div class=&#34;openblock float-group&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2018-11-02-head.png&#34; alt=&#34;2018 11 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It is official.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The power engine of the SAFe 4.6 vehicle is the team and technical agility.
View the &lt;a href=&#34;https://www.scaledagileframework.com/&#34;&gt;SAFe&lt;/a&gt; for more information
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It is one of their five Lean Enterprise competencies and one of their four core values.
SAFe finally recognizes the tremendous importance of &lt;a href=&#34;https://scaledagileframework.com/team-and-technical-agility/&#34;&gt;technical proficiency and craftsmanship&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;They advocate two findings.
First, you need team agility, how you apply Scrum or Kanban.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In other words, &lt;em&gt;being agile instead of doing agile&lt;/em&gt;.
Second, you need technical agility, how you develop a quality product.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I challenge you.
If you are following &lt;a href=&#34;https://www.scaledagileframework.com/&#34;&gt;SAFe&lt;/a&gt;, talk with your teams and checks how many of their official good practices are you using on a daily basis.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I have seen &lt;a href=&#34;https://www.scaledagileframework.com/&#34;&gt;SAFe&lt;/a&gt; introductions in Swiss, German and Czech companies.
Attention was set on the structure of the release train.
A lot of effort was spent on the various ceremonies, meetings and artifacts.
But how to produce quality software and apply technical excellence was sadly always an afterthought.
And more than once a senior &lt;a href=&#34;https://www.scaledagileframework.com/&#34;&gt;SAFe&lt;/a&gt; coach just publicly stated that the &lt;a href=&#34;https://www.scaledagileframework.com/&#34;&gt;SAFe&lt;/a&gt; core value x is not so important for a successful introduction.
Quite a denial approach of his own methodology, I think!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Be honest with yourself and your teams, either you implement the techniques described in &lt;a href=&#34;https://scaledagileframework.com/team-and-technical-agility/&#34;&gt;Technical Agility&lt;/a&gt;
and https:scaledagileframework.com/built-In-quality/[Build-In Quality] chapters of &lt;a href=&#34;https://www.scaledagileframework.com/&#34;&gt;SAFe&lt;/a&gt; or you are not agile and have no &lt;a href=&#34;https://www.scaledagileframework.com/&#34;&gt;SAFe&lt;/a&gt; power engine.
It is called &lt;a href=&#34;https://en.wikipedia.org/wiki/Cargo_cult_programming&#34;&gt;cargo cult&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A good starting point is the five dimensions of build-in quality described in &lt;a href=&#34;https://www.scaledagileframework.com/&#34;&gt;SAFe&lt;/a&gt; 4.6.
And yes now &lt;a href=&#34;https://www.scaledagileframework.com/&#34;&gt;SAFe&lt;/a&gt; acknowledged the tremendous importance of a
https:scaledagileframework.com/continuous-delivery-pipeline/[continuous delivery pipeline].
Experts agree you can apply DevOps only if you have continuous integration, delivery, and deployment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once you realize where your organization stands remember that build-in quality is one of tour core values of &lt;a href=&#34;https://www.scaledagileframework.com/&#34;&gt;SAFe&lt;/a&gt;.
That I mean is walk the talk.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And please read some Internet blogs and books about &lt;a href=&#34;https://less.works/&#34;&gt;LeSS&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Software_craftsmanship&#34;&gt;Software Craftsmanship&lt;/a&gt;,
&lt;a href=&#34;https://en.wikipedia.org/wiki/Extreme_programming&#34;&gt;Extreme Programming&lt;/a&gt;, TDD, ATTD, clean code.
Most of these concepts were defined and published in the last millennium.
It is time your teams finally adopt them and produce high quality, maintainable and cost-effective products.
This is the whole concept of the lean movement.
And I welcome the fact that &lt;a href=&#34;https://www.scaledagileframework.com/&#34;&gt;SAFe&lt;/a&gt; now explicitly mention https:scaledagileframework.com/built-in-quality/[Cost of Delay].&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One of the strengths of &lt;a href=&#34;https://www.scaledagileframework.com/&#34;&gt;SAFe&lt;/a&gt; is their clear statement that an agile organization transformation is only successful with lean-agile leadership.
All C-level managers are trained in lean and agile, they advocate these approaches and are visible champions.
Therefore, all managers shall advocate technical excellence on a daily basis.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If not, the seminal work of John Kotter clearly states the transformation will fail.
You will have a bunch of Scrum teams in your development department, but have none of the expected synergies at the product or company level.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Personally I prefer the &lt;a href=&#34;https://less.works/&#34;&gt;LeSS&lt;/a&gt; approach, but I respect your choice - &lt;a href=&#34;https://www.scaledagileframework.com/&#34;&gt;SAFe&lt;/a&gt;,
&lt;a href=&#34;https://www.scrum.org/resources/nexus-guide&#34;&gt;Nexus&lt;/a&gt;, or &lt;a href=&#34;https://www.scrumatscale.com/scrum-at-scale-guide/&#34;&gt;Scrum@Scale&lt;/a&gt; - as long as technical excellence is a key aspect of your agile strategy.
Embrace technical agility and do not let your train of teams produce mediocre software every two weeks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Employ professional software craftsmen and deliver quality products.
Follow your &lt;a href=&#34;https://www.scaledagileframework.com/&#34;&gt;SAFe&lt;/a&gt; approach, respect one of the https:scaledagileframework.com/safe-core-values/[four core values] and one of the
&lt;a href=&#34;https://scaledagileframework.com/&#34;&gt;five core competencies&lt;/a&gt; of your method.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;See also my blogs &lt;a href=&#34;../../2018/pragmatic-craftsmanship-professional-software-developer/&#34;&gt;Pragmatic Craftsmanship&lt;/a&gt;,
&lt;a href=&#34;../../2018/how-to-reach-the-software-quality-graal/&#34;&gt;Software Quality Graal&lt;/a&gt;, and
&lt;em&gt;How healthy is your Product?&lt;/em&gt; article series for information about technical excellence.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2018/how-healthy-is-your-product-source-code-check/&#34;&gt;Source Code Check&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2018/how-healthy-is-your-product-delivery-pipeline-check/&#34;&gt;Delivery Pipeline Check&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2018/how-healthy-is-your-product-product-strategy-check/&#34;&gt;Product Strategy Check&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2019/how-healthy-is-your-product-company-culture-check/&#34;&gt;Company Culture Check&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The other big improvement is that the PI horizon is now &lt;em&gt;limited&lt;/em&gt; to 8 or 12 weeks.
No more semester or hopefully quarter cadence.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It still does not make sense to plan for three months and at the same time advocate DevOps and design thinking.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;DevOps has a time horizon of days.
It is waste to have huge quarterly PI gatherings and plans just to discard them after the next DevOps finding.
You should probably just update your PI roadmap.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_call_for_action&#34;&gt;Call for Action&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;My call for action is fewer meetings and paper artifacts and more technical excellence.
You want to sell excellent and well-designed products, not mediocre software.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. scaled agile framework site has discarded the information for older versions of the framework. Try to find the news and the slides for version 4.6.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: How Healthy is Your Product? - Delivery Pipeline Check</title>
      <link>https://blog.tangly.net/blog/2018/how-healthy-is-your-product-delivery-pipeline-check/</link>
      <pubDate>Thu, 01 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2018/how-healthy-is-your-product-delivery-pipeline-check/</guid>
      <description>
        
        
        &lt;div class=&#34;openblock float-group&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2018-11-01-head.png&#34; alt=&#34;2018 11 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are developing your product using agile and lean approaches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;How can you check your approach and distill improvements?
A health check of your product and your development approach is certainly a good solution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This post is the second of a series identifying health checks with different focus.
We will identify strengths, potential weaknesses and hopefully find room for improvement.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;How you build and deliver your software product has direct implications on your liquidity and cash flow.
Improvements in your delivery pipeline have a direct impact on your finances.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_rules&#34;&gt;Rules&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The patient solely decides if a health check shall be performed.
The effort and depth of a health check are defined together with the patient.
The findings are considered confidential.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A short check with a feedback workshop presenting the insights requires around two work days.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A deeper and more intensive check requests more effort, between one and four weeks.
Upon completion, you can also hire a coach to implement selected findings and improve durably the health of your application.
The findings are often clear and the measures are straightforward.
The real work is to implement consistently the measures.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I have the same personal challenge when trying to lose weight or improve my running form.
The long term implementation is the crux.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_delivery_pipeline_checks&#34;&gt;Delivery Pipeline Checks&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;How reproducible, fast and economic is your product deliver pipeline?
At the end of the day, you deliver regularly a reproducible and trackable product version to your customers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One nice aspect about delivery pipeline checks is that a whole set of tools and methods emerged with the &lt;a href=&#34;https://en.wikipedia.org/wiki/DevOps&#34;&gt;DevOps&lt;/a&gt; movement.
You still need an expert to tune the diagnostic to your company’s specific needs, but the approach is well-documented.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Below a list of capabilities we have build-up over time for delivery pipeline checks.
Use common sense and strategic goals to identify the objectives you want to measure.
Expertise is needed to define values to measure if the source code of your product reaches the selected objectives.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Continuous integration pipeline with quality checks and automatic tests.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Continuous delivery pipeline packaging the same binary to all your environments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Continuous deployment if adequate for your solution, certainly it is adequate for the test and integration stages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Automatic source code quality checks and mandatory quality gates.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Automatic unit tests, integration tests, and end-to-end tests.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://trunkbaseddevelopment.com/&#34;&gt;Golden Trunk&lt;/a&gt; in Git.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No branches or only short-lived branches shall be the policy.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.crisp.se/2018/08/27/yassalsundman/the-story-of-how-to-implement-a-zero-bug-policy&#34;&gt;Zero bugs policy&lt;/a&gt;
eliminates the change management processes and board for errors.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Traceability of specifications to delivered features and product versions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Semantic versioning and API documentation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configuration and infrastructure as managed artifacts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Generation of documentation part of the delivery pipeline&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Monitoring and alarming&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DevOps pipeline analysis provides another look at your processes&lt;/p&gt;
&lt;div class=&#34;olist loweralpha&#34;&gt;
&lt;ol class=&#34;loweralpha&#34; type=&#34;a&#34;&gt;
&lt;li&gt;
&lt;p&gt;Code development and Review, Continuous integration and build status&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Continuous testing and business risks feedback&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Artifact repository and pre-deployment staging&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Release automation including change management and release approvals&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Infrastructure configuration and management and infrastructure as code&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Applications performance monitoring and end-user experience.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You should know how often you can deliver your product without failures and track your lead time between fixes.
The overall goal is faster time to market and improved delivery frequency.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The overall features and processes can be implemented through your development organization is less than a year.
Stop evaluating, start implementing!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_continuous_integration_practices&#34;&gt;Continuous Integration Practices&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Check your process to see which continuous practices you are really mastering&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Maintain a single source repository - no long-lived branches.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Automate the build - no manual inputs, no manual configuration, automatically triggered.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make your build self testing - TDD, ATDD, static metrics, semantic checks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Everyone commits to trunk every day.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Every commit should build trunk on an integration machine.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fix broken build immediately - &lt;em&gt;lean red button stopping production, everybody helps fix the broken build&lt;/em&gt;.
Keep the build fast - &lt;em&gt;We are talking of minutes, not hours&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Test within an integration staging area which is a clone of the production environment.
The goal is to have docker images, virtual network, and in-memory database to be fast.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make it easy for anyone to get the latest-packaged release.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Everyone can see the build status - &lt;em&gt;transparency, information radiator&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Automate deployment.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_posts_in_the_health_check_series&#34;&gt;Posts in the Health Check Series&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2018/how-healthy-is-your-product-source-code-check/&#34;&gt;Source Code Check&lt;/a&gt;
Marcel Baumann. 2018.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2018/how-healthy-is-your-product-delivery-pipeline-check/&#34;&gt;Delivery Pipeline Check&lt;/a&gt;
Marcel Baumann. 2018.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2018/how-healthy-is-your-product-product-strategy-check/&#34;&gt;Product Strategy Check&lt;/a&gt;
Marcel Baumann. 2018.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2019/how-healthy-is-your-product-company-culture-check/&#34;&gt;Company Culture Check&lt;/a&gt;
Marcel Baumann. 2019.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: How Should You handle Definition of Done?</title>
      <link>https://blog.tangly.net/blog/2018/how-should-you-handle-definition-of-done/</link>
      <pubDate>Tue, 02 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2018/how-should-you-handle-definition-of-done/</guid>
      <description>
        
        
        &lt;div class=&#34;openblock float-group&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2018-10-02-head.jpg&#34; alt=&#34;2018 10 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;An agile team is the sole responsible for the internal quality of the product they build and maintain.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The developers shall be accountable for producing the expected quality and optimizing long term goals of the organization.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You as a developer have an ethical, professional and legal responsibility to ensure adequate quality for your products.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Laws protect the confidentiality of their personal and financial data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It is a potential crime to leak credit card information, geolocation data or the worst personal documents.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Scrum as a clear concept to answer to the seminal question:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph text-center&#34;&gt;
&lt;p&gt;&lt;em&gt;Did we build it right?&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://less.works/less/framework/definition-of-done.html&#34;&gt;Definition of Done&lt;/a&gt; &lt;em&gt;DoD&lt;/em&gt; is a major building block to answer this question with a sounding &lt;strong&gt;yes&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_definition_of_done&#34;&gt;Definition of Done&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.scrumguides.org/scrum-guide.html&#34;&gt;Scrum&lt;/a&gt; and &lt;a href=&#34;https://less.works/&#34;&gt;LeSS&lt;/a&gt; have a stringent discussion concerning &lt;em&gt;Definition of Done&lt;/em&gt;.
The key question is&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph text-center&#34;&gt;
&lt;p&gt;&lt;em&gt;Considering our current context and capability, what activities can be completed in each sprint?&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph text-center&#34;&gt;
&lt;p&gt;&lt;em&gt;This subset is the initial Definition of Done.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A &lt;em&gt;Definition of Done&lt;/em&gt; is weak when it is a small subset and strong when it almost equals &lt;em&gt;Potentially Shippable&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In huge organizations, the development teams discuss their context and select the subset of the activities that all teams think they realistically can do during the sprint.
This is their initial Definition of Done.
The teams that can do more will expand this product &lt;em&gt;Definition of Done&lt;/em&gt; within their members.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The difference between the Definition of Done and Potentially Shippable is referred to as Undone Work.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph text-center&#34;&gt;
&lt;p&gt;&lt;em&gt;Potentially Shippable - Definition of Done = Undone Work&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Sprint is planned according to the &lt;em&gt;Definition of Done&lt;/em&gt; and thus the &lt;em&gt;Undone Work&lt;/em&gt; is excluded.
It is planned to be left undone.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The terms &lt;em&gt;Potentially Shippable&lt;/em&gt; and &lt;em&gt;Definition of Done&lt;/em&gt; are often not used consistently.
To clarify the terms:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;hdlist&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Potentially Shippable
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;All activities that must be performed before the product can be shipped.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Definition of Done
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;An agreement between the teams and their Product Owner on which activities are performed inside the Sprint.
A &lt;em&gt;Definition of Done&lt;/em&gt; is perfect when it equals Potentially Shippable.
Teams strive to improve towards an ideal Definition of Done.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Undone Work
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;The difference between the Definition of Done and Potentially Shippable.
When the &lt;em&gt;Definition of Done&lt;/em&gt; is perfect, then there is no &lt;em&gt;Undone Work&lt;/em&gt;.
If this is not the case, the organization has to decide.
First, how we deal with the &lt;em&gt;Undone Work&lt;/em&gt;.
Second, how we improve so that there is less &lt;em&gt;Undone Work&lt;/em&gt; in the future.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Unfinished, or not done—work
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;that was planned in a sprint but was not completed.
This is often confused with Undone Work.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Unfinished
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;is work that the team planned for but did not finish, whereas Undone Work was never even planned for.
When a team has work that was not finished, then they ought to feel anxious and discuss improvement actions during their retrospective.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Teams should never leave work-in-progress at the end of the sprint and &lt;em&gt;carry over&lt;/em&gt; to the next one.
This causes a lack of transparency and reduces flexibility.
The product owner has more trouble to change the scope of the application.
If they forecast too much work, they need to remove completed items, which they have not started yet.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_scrum_guide_definition&#34;&gt;Scrum Guide Definition&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Scrum guide characterizes the &lt;em&gt;Definition of Done&lt;/em&gt; as follows:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;em&gt;Definition of Done&lt;/em&gt; is a &lt;strong&gt;formal description&lt;/strong&gt; of the state of the &lt;em&gt;Increment&lt;/em&gt; when it meets the &lt;strong&gt;quality measures required for the product&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The moment a &lt;em&gt;Product Backlog Item&lt;/em&gt; meets the &lt;em&gt;Definition of Done&lt;/em&gt;, an &lt;em&gt;Increment&lt;/em&gt; is born.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;em&gt;Definition of Done&lt;/em&gt; creates &lt;strong&gt;transparency&lt;/strong&gt; by providing everyone a shared understanding of what work was completed as part of the &lt;em&gt;Increment&lt;/em&gt;.
If a &lt;em&gt;Product Backlog Item&lt;/em&gt; does not meet the &lt;em&gt;Definition of Done&lt;/em&gt;, &lt;strong&gt;it cannot be released or even presented&lt;/strong&gt; at the &lt;em&gt;Sprint Review&lt;/em&gt;.
Instead, it returns to the &lt;em&gt;Product Backlog&lt;/em&gt; for future consideration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the &lt;em&gt;Definition of Done&lt;/em&gt; for an increment is part of the standards of the organization, all &lt;em&gt;Scrum Teams&lt;/em&gt; must follow it as &lt;strong&gt;a minimum&lt;/strong&gt;.
If it is not an organizational standard, the &lt;em&gt;Scrum Team&lt;/em&gt; &lt;strong&gt;must&lt;/strong&gt; create a &lt;em&gt;Definition of Done&lt;/em&gt; appropriate for the product.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;em&gt;Developers&lt;/em&gt; are &lt;strong&gt;required to conform&lt;/strong&gt; to the &lt;em&gt;Definition of Done&lt;/em&gt;.
If there are multiple &lt;em&gt;Scrum Teams working&lt;/em&gt; together on a product, they must mutually define and comply with the same &lt;em&gt;Definition of Done&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_items_of_a_definition_of_done&#34;&gt;Items of a Definition of Done&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A delivery standard as defined by the team.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It contains all requirements to get a user story into production.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The fitness for use is evident (enough value was built to justify releasing?).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The external quality is verified (we have built the right thing?).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The internal quality is verified, you wrote unit tests – and all tests are green.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The code is checked in. The branch was merged and deleted.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Coding standards are enforced through static check tools and integrated in the continuous delivery pipeline.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The code review was completed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All improvements from the code review were implemented.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All existing unit tests remain green.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The acceptance tests were verified by the development team.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All integration tests were passed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And the Status of &lt;em&gt;done&lt;/em&gt; was confirmed by the product owner.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The following criteria are often overlooked and also need to be checked:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Was the technical documentation updated?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Was the user documentation updated?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Was the user documentation localized?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The localization for the application is done.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The localization testing is done.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The marketing input is done.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The legal documents are done.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The deployment and migration scripts are available.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The extension of the definition of done &lt;em&gt;DoD&lt;/em&gt; to deliver a potentially shippable product has often significant and profound impact on the structure of the organization and its processes.
Experienced agile coaches use the definition of done as an instrument for organizational changes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When the undone work is slowly removed from the delivery process, it triggers structural and process changes.
For example, the separate quality department responsible for the final tests is dissolved and their expertise is integrated in the development teams.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;See also the blog &lt;a href=&#34;../../2018/pragmatic-craftsmanship-professional-software-developer&#34;&gt;Pragmatic Craftsmanship&lt;/a&gt; for a discussion of build-in quality.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: How Healthy is Your Product? - Source Code Check</title>
      <link>https://blog.tangly.net/blog/2018/how-healthy-is-your-product-source-code-check/</link>
      <pubDate>Mon, 01 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2018/how-healthy-is-your-product-source-code-check/</guid>
      <description>
        
        
        &lt;div class=&#34;openblock float-group&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2018-10-01-head.png&#34; alt=&#34;2018 10 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are developing your product using agile and lean approaches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;How can you check your approach and distill improvements?
Health check of your product and your development approach are certainly a good solution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This post is the first of a series identifying health checks with different focus.
We will identify strengths, potential weaknesses and hopefully find room for improvement.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The initial examination shall always be the source code.
Your code base is a key asset of your company.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_rules&#34;&gt;Rules&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The patient solely decides if a health check shall be performed.
The effort and depth of a health check are defined together with the patient.
The findings are considered confidential.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A short check with a feedback workshop presenting the insights requires around two work days.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A deeper and more intensive check requests more effort, between one and four weeks.
Upon completion, you can also hire a coach to implement selected findings and improve durably the health of your application.
The findings are often clear and the measures are straightforward.
The real work is to implement consistently the measures.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I have the same personal challenge when trying to lose weight or improve my running form.
The long term implementation is the crux.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_source_code_checks&#34;&gt;Source Code Checks&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;How clean, legible and maintainable is your source code?
Often it is best to start your health evaluation with your product source code.
At the end of the day, it is compiled source code you deliver to all your customers to work with.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One nice aspect of source code checks is that a whole set of tools is available on the market.
You still need an expert to provide the diagnostic, but the gathering of data can be automated and quite inexpensive to gather.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Below a list of capabilities we have build-up over time for source code checks.
Use common sense and strategic goals to identify the objectives you want to measure.
Expertise is needed to define values to measure if the source code of your product reaches the selected objectives.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Java&lt;/strong&gt; 11/10/9/8/7/6 code and how to migrate to the current version and use the new Java features,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multithreaded, parallel programming and reactive systems,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Functional and object-oriented detailed design approaches,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Test driven development TDD and build-in quality - gradle or maven -,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Acceptance test driven development ATDD&lt;/strong&gt; and user acceptance,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clean code approach and detection of code smells,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Static analysis tools&lt;/strong&gt; to measure the quality attributes of source code,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compilation and test automation,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Software craftsmanship approach, values and techniques,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Domain driven development&lt;/strong&gt; and micro services,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Database models and open data,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Software architecture and Enterprise architecture,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CI and CD - continuous integration, continuous delivery, continuous deployment,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Static quality assurance approaches for quick diagnostics,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Development tools to improve quality and productivity,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;User Experience and UI design.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;My blogs &lt;a href=&#34;../../2018/pragmatic-craftsmanship-professional-software-developer&#34;&gt;Pragmatic Craftsmanship&lt;/a&gt; and How to Reach the
&lt;a href=&#34;../../2018/how-to-reach-the-software-quality-graal&#34;&gt;Software Quality Graal&lt;/a&gt; provide insights on why source code quality is of tremendous importance for any company.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The blog &lt;a href=&#34;../../2018/sonar-lint-for-the-impatient/&#34;&gt;SonarLint&lt;/a&gt; for the Impatient would be a pragmatic first measure to measure and improve your source code health.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Any product should have a battery of measures deployed to continuously monitor the source code and detect trends over time.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_posts_in_the_health_check_series&#34;&gt;Posts in the Health Check Series&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2018/how-healthy-is-your-product-source-code-check/&#34;&gt;Source Code Check&lt;/a&gt;
Marcel Baumann. 2018.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2018/how-healthy-is-your-product-delivery-pipeline-check/&#34;&gt;Delivery Pipeline Check&lt;/a&gt;
Marcel Baumann. 2018.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2018/how-healthy-is-your-product-product-strategy-check/&#34;&gt;Product Strategy Check&lt;/a&gt;
Marcel Baumann. 2018.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2019/how-healthy-is-your-product-company-culture-check/&#34;&gt;Company Culture Check&lt;/a&gt;
Marcel Baumann. 2019.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Introduce Agile in A Company</title>
      <link>https://blog.tangly.net/blog/2018/introduce-agile-in-a-company/</link>
      <pubDate>Tue, 25 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2018/introduce-agile-in-a-company/</guid>
      <description>
        
        
        &lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2018-09-01-head.png&#34; alt=&#34;2018 09 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;First teams have successfully used Scrum to develop applications.
The news spread out and everybody wants to apply Scrum.
It is time to introduce Enterprise wide Agile with Scrum or Kanban or XP.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Your Company wants to introduce Enterprise Agility in their product development, quality assurance and sales departments.
The company as a whole shall transition to an agile organization and all teams shall adopt &lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Try the &lt;a href=&#34;https://martinfowler.com/bliki/ShuHaRi.html&#34;&gt;Shu Ha Ri&lt;/a&gt; approach for such a change process.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Based on our exhaustive experience, we recommend starting with a set of workshops with the goal of defining a tailored approach to adapt the structure and processes of the company and introduce enterprise agile.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These workshops provide the platform to identify the company’s needs and strategic goals, and gather support from all participants.
Try the &lt;a href=&#34;https://en.wikipedia.org/wiki/Open_Space_Technology&#34;&gt;open space&lt;/a&gt; format to involve all collaborators and identify their needs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Below, we provide an approach which must be later tailored to the specific needs of the Company during the above-mentioned workshops.
The organizational needs for feature oriented planning and development of an application portfolio should be considered.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_approach&#34;&gt;Approach&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We work with the Shu Ha Ri agile approach when introducing enterprise agile in the Company.
All collaborators will progress from the novice level through the proficient level before reaching the expert level.
You can also use the agile fluency model if you prefer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This model also maps very well to the “Awareness – Desire – Knowledge – Ability – Reinforcement “or ADFAR model.
The Company has already reached awareness and desire level because they want to introduce enterprise agile.
We describe below the activities for the development organization consisting of software development, product management and quality insurance departments, and the activities at company level.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_development_organization&#34;&gt;Development Organization&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_shu_novice_level_learn_the_rules&#34;&gt;Shu - Novice Level - „Learn the Rules“&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The duration of the novice level is at least six months.
The major activities are to align the collaborators and provide the needed knowledge through training and hands-on exercises.
Extensive training is aligned with experiences and industrial best practices.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All collaborators shall attend an introduction to agile and Scrum approaches.
All technical collaborators shall attend the Scrum - Master or Developer - training.
Each group of technical collaborators will learn specific techniques and skills necessary to work effectively in an agile product environment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The agile coaches have two roles.
First, they facilitate and support the teams to implement all meetings, artifacts, and rules of the Scrum approach.
Second, they train the team members how to use learnt techniques such as clean code, pair programming, pair check-in, agile architecture, requirements elicitation, test driven development, agile quality assurance, acceptance test driven development, continuous integration, deployment and delivery.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;After the initial training, the coaches ensure that this knowledge and ground rules are applied in daily activities.&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 20%;&#34;/&gt;
&lt;col style=&#34;width: 20%;&#34;/&gt;
&lt;col style=&#34;width: 20%;&#34;/&gt;
&lt;col style=&#34;width: 20%;&#34;/&gt;
&lt;col style=&#34;width: 20%;&#34;/&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-center valign-top&#34;&gt;Developer&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Business Analyst / PO&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;SM / PL / Line Manager&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Quality Manager / Tester&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Others&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-center valign-top&#34; colspan=&#34;5&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Agile and Scrum Introduction(1 day)&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-center valign-top&#34; colspan=&#34;4&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Scrum Master (2 days)&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-center valign-top&#34; colspan=&#34;4&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Product Owner (2 days)&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;div class=&#34;content&#34;&gt;&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;agile and clean developer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TDD&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ATTD&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agile Development Game&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DVCS – Git –&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Legacy code refactoring&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clean Code&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agile architecture and patterns such as an inversion of Control&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;div class=&#34;content&#34;&gt;&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Agile Requirement Management&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lean Startup&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lean UX&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Design Thinking&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ATDD&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;div class=&#34;content&#34;&gt;&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Agile Leadership&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Advanced Lean&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agile Quality&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Soft skills – coaching, mentoring -&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;div class=&#34;content&#34;&gt;&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Agile Quality Management&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ATDD&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Move them to a Scrum team&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;?&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;~ 20 days&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;~ 10 days&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;8 days&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;8 days&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;1 day&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We recommend&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;An Agile (eXtreme Programming techniques) and Scrum coach responsible for two to three Scrum teams.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Coach of coaches for the growth of internal agile and Scrum coaches for the company.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_ha_proficient_level_bend_the_rules&#34;&gt;Ha – Proficient Level - “Bend the Rules”&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The duration of the “proficient level” will be up to two years.
The goal is to reinforce the learning techniques and become proficient in using them.
The motto is&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph text-center&#34;&gt;
&lt;p&gt;&lt;em&gt;Most difficulties in Scrum do not arise from learning the Scrum framework.&lt;/em&gt;
&lt;em&gt;Rather, they arise in applying the framework on an existing organizational structure and culture.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This requires hands-on experienced guidance, and not just at the team level, but at the leadership and organizational level.
See below the discussion about enterprise transformation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We recommend&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;An Agile (eXtreme Programming techniques) and Scrum coach responsible for four to five Scrum teams.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Two coaches of coaches for the growth of internal Scrum coaches for the company.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start to blend team coaching with company-wide changes.
See below the chapter “Organization Transformation”.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Workshops could be organized for selected products or teams to solve identified major impediments.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_ri_expert_level_break_the_rules&#34;&gt;Ri – Expert Level - “Break the Rules”&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The “expert level” will be reached earliest after two years.
It is reasonable to state that not all collaborators will reach this level of expertise.
The goal is to transfer ownership of the agile approaches to Company collaborators.
The company will take over the responsibility to reinforce agile and Scrum activities and resolve newly identified impediments in products or at company level.
The motto is&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph text-center&#34;&gt;
&lt;p&gt;&lt;em&gt;*Doing* agile is easy.
&lt;strong&gt;Being&lt;/strong&gt; agile is hard.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We recommend&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;An Agile and Scrum coach responsible for six to eight Scrum teams.
The internal coaches should start taking responsibilities&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A center of competence for the growth of internal Scrum coaches for the company.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_company_transformation&#34;&gt;Company Transformation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;While teams implement Scrum, managers and leaders enable them.
We work on cultural, organization, and process level to enable agility in the company.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Workshops with key managers will&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Discuss the fact that the standard competencies of agile leadership and coaching – mentoring, facilitating, problem-solving, and conflict navigating – are essential to agile adoption, but simply not enough to sustain and grow agility within an organization.
We find that the unique blend of combining senior internal leaders with experienced agile coaches provides an unprecedented learning environment for all.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Understand that most organizations adopt agile &lt;em&gt;Outside-In&lt;/em&gt; - that means they start with a process change and expose organizational impediments.
The problem is that most of the organizational impediments are driven from cultural values deep within the organization.
The process changes rarely stick.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Identify an &amp;#34;Inside-Out&amp;#34; approach - that means we will start with the company culture.
Just as understanding the personality of a person is a key to working effectively with that person, understanding the culture of an organization is critical to its success in adopting, and more importantly sustaining, agility.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Explore a number of organizational systems and structures which enable (or impede) agility at an organizational level.
This approach sets the priority first to the culture, second to the structure and third to the processes of the company&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We recommend&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Workshop with key managers as described above,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;One Coach at C-level,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Transform the company one product line after the other, delay the broad deployment to have time to learn and improve.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Study &lt;a href=&#34;https://less.works/&#34;&gt;LeSS&lt;/a&gt; as a valuable approach.
We strongly support &lt;a href=&#34;https://less.works/&#34;&gt;LeSS&lt;/a&gt; as an ideal candidate for company-wide agile approach,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Implement selected company-wide measures during the second phase of the change management process when the development department moves to a proficient level.
Top managers must realize that cultural elements must first be modified before the structure and the processes of the company can be adapted.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be patient and do not lose your mojo.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_checklist&#34;&gt;Checklist&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here a checklist example to reflect why and how to transform into an agile organization&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Answer the question, “&lt;em&gt;Why move to Agile?&lt;/em&gt;” This is important, as the reasons for attempting such a fundamental change should be well understood from both a quantitative and qualitative standpoint.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Understand the current business culture.
Change is hard and there will be champions as well as potential saboteurs of the changes to come.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Spend time on the organization structure to understand how it helps or hinders the move to agile and lean.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Involve all levels of the business, including top level ‘C’ executives.
Their sponsorship and support will be important.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don’t neglect mid-level management as their support is vital to the success of the transformation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a roadmap with the explicit understanding that it will change over time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don’t attempt to change everything.
Pick an area where a win will be evident and beneficial.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Prefer narrow and deep change to broad and shallow approach.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: What does an Agile Coach?</title>
      <link>https://blog.tangly.net/blog/2018/what-does-an-agile-coach/</link>
      <pubDate>Thu, 16 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2018/what-does-an-agile-coach/</guid>
      <description>
        
        
        &lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2018-08-01-head.jpg&#34; alt=&#34;2018 08 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;An agile coach has three main areas of activity:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Foster Autonomy&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Teach and support the team and individuals to be autonomous within the given boundaries of the organization and its processes.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Create Ground for Motivation&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Help teams to maximize their autonomy, individual mastery and make sure the team has a purpose.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Provide Coaching&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Support teams and individuals to identify potential with their roles and within the agile organization and improve.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_how_can_you_do_it&#34;&gt;How Can You Do It?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Lateral Leadership&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Mediating the team through conflicts and help them with making decisions and foster the team’s self-organization.
After a few months, a team shall have jelled.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Facilitation&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Facilitate meetings for the team, including preparing, moderation and post-processing for the agile process as well as the supporting agile organization.
After a year of working with a team, the team members shall be empowered to run regularly all events without you attending.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Teaching&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Teach teams agile practices and lateral leadership.
A central area is technical excellence and software craftsmanship.
Long-lasting teaching shall concentrate on values: &lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt; values and principles, &lt;a href=&#34;https://less.works/&#34;&gt;LeSS&lt;/a&gt; principles, Agile manifesto and the associated 12 principles.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Impediments&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Actively identify impediments and foster their removal.
Consult the Scrum guide: You must select one impediment after each retrospective and add it as a high-priority item in the next Sprint backlog.
This mechanism insures continuous improvement.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph text-center text-center&#34;&gt;
&lt;p&gt;&lt;em&gt;To ensure continuous improvement, it includes at least one high priority way in which the team works, identified in the previous Retrospective meeting.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Culture&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Establish a culture of inspecting and adapting for teams.
Create structure to establish a continuous improvement process - also meaning establish a tolerance to failure -, advocate transparency, enlighten the organization of the relation between autonomy and accountability.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Ask yourself how your organisation handles meritocracy.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_one_approach_to_coaching&#34;&gt;One Approach to Coaching&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Agile teams thrive with purpose, autonomy and mastery.
One approach to coaching is to set your focus on&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Understand the domain: Talk with customers and users and understand their needs.
Your teams should have business expertise.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Master Technical Excellence: CI, CD, TDD, ATDD, pair programming, refactoring, lean UX, usability.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use Process Excellence and apply &lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt;, XP, &lt;a href=&#34;https://less.works/&#34;&gt;LeSS&lt;/a&gt; by the book:&lt;/p&gt;
&lt;div class=&#34;olist loweralpha&#34;&gt;
&lt;ol class=&#34;loweralpha&#34; type=&#34;a&#34;&gt;
&lt;li&gt;
&lt;p&gt;Discuss the core values of commitment, focus, openness, respect, and courage.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Present again the agile manifesto and the twelve principles.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Show the organization why commitment in the planning was replaced by forecast in the official Scrum guide cite:[scrum-pocket-guide-3rd].&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Require a vision, a roadmap, a release plan with a story map and a refined backlog for each product and team.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tell why an impediment resolution backlog item shall be part of each iteration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Teach the importance of the definition of done &lt;em&gt;DoD&lt;/em&gt; for the internal quality of the product.
And explain why the definition of ready is often an anti-pattern.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Show why velocity is not a productivity metric.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Show the difference between product and output.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extend the agile toolbox with Design Thinking, Lean Factory, Lean UX, DevOps.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pair Scrum master and technical master to implement a craftsmanship path and achieve product quality.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Explore Center of Competencies to nurture your product development group.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once you are a master fell free to break the rules, experiment with new rules, approaches cite:[great-scrum-master,succeeding-with-agile].
Define hypotheses and verify them empirically.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you are coaching software development groups, acknowledge you shall possess a profound understanding of technical excellence and software development practices.
I have never heard of a soccer coach not intimately knowing how the game is played.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_how_to_evaluate_yourself&#34;&gt;How to Evaluate Yourself?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Skill in a competency area is not a simple binary.
Skill mastery is a progression from no knowledge to unconscious mastery.
Try to define if you are a beginner, practitioner, guide, or catalyst for each relevant dimension.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock text-center&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2018-08-01-compentencies.png&#34; alt=&#34;2018 08 01 compentencies&#34; width=&#34;90%&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;hdlist&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Self Mastery
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;At the heart of great agile coaching is the need to invest in yourself through learning and reflection and take care of your well-being.
Self-mastery starts with a focus on yourself, having the emotional, social, and relationship intelligence to choose how you show up in any given context.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Agile/Lean Practitioner
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;an agile/lean practitioner has a deep and tacit understanding of the principles behind agile and lean and has experience in working with frameworks and practices of agile and lean.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Serving
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;serving is about being concerned with the needs of the team or business over your own agenda.
They do this from the stance of servant leadership which focuses primarily on the growth and well-being of the team or business and the communities to which they belong.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Coaching
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;coaching is partnering with a person, team, or organization (client) in a creative process to help the client to reach their goals by unlocking their own potential and understanding.
A coach is able to accept the client as a whole and capable, and serve their agenda ethically.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Facilitating
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;facilitating increases the effectiveness of groups to align in a collaborative way, to interpret their context, and mutually identify the most valuable outcomes desired.
A facilitator has the skills to create a neutral environment of openness, safety, and innovation in a group setting.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Guide to Learning
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;guide learning is about effectively growing an individual, a group, or a team skills and enabling them to be competent and resourceful.
With this competency, you choose the most effective learning method to help the learners achieve their learning objectives and inspire future learning.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Advising
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;advising is the ability to bring your experience, insights, and observations to guide the client towards a shared understanding of the value that can help them to achieve sustainable success, even after you have moved on.
As a trusted adviser, you are invested in the success of the client, creating a long-term and sustaining relationship with the client.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Leading
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;leading is about being the change you want to see to make the world a better place.
As a leader, you are capable of catalyzing growth and inspiring others to realize the shared vision.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Transforming
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;transforming is guiding sustainable change that will allow the individual teams and the organization to be more effective and learn how to change for themselves through leading, facilitation, coaching, facilitating learning, and advising.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_links&#34;&gt;Links&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;professional-coaching&#34;&gt;&lt;/a&gt;[1] &lt;a href=&#34;https://blog.crisp.se/2021/06/30/mikaelbrodd/why-professional-coaching-matters-to-an-agile-coach&#34;&gt;Why Professional Coaching Matters to an Agile Coach&lt;/a&gt;.
Mikael Brodd.
Crisp. 2021&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_references&#34;&gt;References&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;bibliography::[]&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Architectural Decision Records ADR</title>
      <link>https://blog.tangly.net/blog/2018/architectural-decision-records-adr/</link>
      <pubDate>Thu, 05 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2018/architectural-decision-records-adr/</guid>
      <description>
        
        
        &lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2018-07-01-head.jpg&#34; alt=&#34;2018 07 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Architecture Decision Record ADR is compact and traceable documents of all important decisions taken during the realization of a product.
Use &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; or &lt;a href=&#34;https://en.wikipedia.org/wiki/Markdown&#34;&gt;Markdown&lt;/a&gt; and Git to have agile and lean documentation of your major decisions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The huge advantage of Architecture Design Record &lt;em&gt;ADR&lt;/em&gt; is the timeline of the decisions.
It tremendously helps to understand the technical changes during the product lifecycle.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Please try architecture design records to document your key decisions when developing your software product.
Feel free to identify better approaches&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_definition&#34;&gt;Definition&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;An Architectural Decision (AD) is a software design choice that addresses a functional or non-functional requirement that is architecturally significant.
A decision can be documented in an architecture design record (ADR).&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In each ADR file, write these sections:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Title&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;short present tense imperative phrase, less than 50 characters, like a git commit message.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Status&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;proposed, accepted, rejected, deprecated, superseded&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Context&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;what is the issue that we’re seeing that is motivating this decision or change.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Decision&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;what is the change that we’re actually proposing or doing.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Consequences&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;what becomes easier or more difficult to do because of this change.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I use &lt;a href=&#34;https://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; format to write all our architecture design records.
You can add to the same git repository as the product, visualize differences and if desired, generate a nice looking document.
And my IDE IntelliJ IDEA has a nice plugin for this format.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Before using ADR, I documented the decision changes as footnote in a Microsoft Word document.
The ADR approach is way more legible and easier to trace with the help of git repositories.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_title&#34;&gt;Title&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These documents have names that are short noun phrases.
For example, &amp;#34;ADR 1: Deployment on Ruby on Rails 3.0.10&amp;#34; or &amp;#34;ADR 9: LDAP for Multiple tenant Integration&amp;#34;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_context&#34;&gt;Context&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This section describes the forces at play, including technological, political, social, and product local.
These forces are probably in tension, and should be called out as such.
The language in this section is value-neutral.
It is simply describing facts.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_decision&#34;&gt;Decision&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This section describes our response to these forces.
It is stated in full sentences, with active voice.
&amp;#34;We will …​&amp;#34;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status&#34;&gt;Status&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A decision may be &amp;#34;proposed&amp;#34; if the product stakeholders haven’t agreed with it yet, or &amp;#34;accepted&amp;#34; once it is agreed.
If a later ADR changes or reverses a decision, it may be marked as &amp;#34;deprecated&amp;#34; or &amp;#34;superseded&amp;#34; with a reference to its replacement(s).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The status and the graph of related decisions can be tracked and visualized using tools.
You can also track your decisions without any tools, a regular product has often less than a hundred decisions.
And you can always write a small parse utility to extract your dependency graph.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_consequences&#34;&gt;Consequences&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This section describes the resulting context, after applying the decision.
All consequences should be listed here, not just the &amp;#34;positive&amp;#34; ones.
A particular decision may have positive, negative, and neutral consequences, but all of them affect the team and product in the future.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_tips_and_tricks&#34;&gt;Tips and Tricks&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The whole document describing an ADR should be one or two pages long.
We will write each ADR as if it is a conversation with a future developer.
This requires good writing style, with full sentences organized into paragraphs.
Bullets are acceptable only for visual style, not as an excuse for writing sentence fragments (Bullets kill people, even PowerPoint bullets).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The cost of undocumented decisions is hard to measure, but the effects usually include duplicated efforts.
Other engineers try to solve the same problems or competing solutions (two third-party libraries that do the same thing).&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The approach is very similar to how you would document a software pattern.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Believe and respect is the prime directive.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Regardless of what we discover, we understand and truly believe that everyone did the best job they could, given what they knew at the time, their skills and abilities, the resources available, and the situation at hand.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Norman Kerth
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: How to Reach the Software Quality Graal?</title>
      <link>https://blog.tangly.net/blog/2018/how-to-reach-the-software-quality-graal/</link>
      <pubDate>Tue, 19 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2018/how-to-reach-the-software-quality-graal/</guid>
      <description>
        
        
        &lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2018-06-01-head.jpg&#34; alt=&#34;2018 06 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Lately I was asked how many bugs and smells detected through SonarQube were acceptable for a software product.
And a Scrum master inquired which organizational changes are necessary to empower software developers to write good code.
Speechless and dumbfounded, I was unable to answer these questions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;After some time, I realized these people believe tools can measure the quality of software.
But tools can only measure &lt;em&gt;non-quality&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;They tell you when you are doing it wrong, only your heart can tell you when you are doing it right.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But first that does it mean to have a quality software product?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A high-quality software product has no catastrophic failures, and seldom bad behavior.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It is maintainable and extendable with new technologies and new features.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The first part is called extrinsic quality and is why customers buy your product.
The second part is called intrinsic quality and is why customers buy your product again and recommend it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Criteria such as test code coverage, static analyzers, coding guidelines are just tools to detect missing quality.
They help your team produce higher quality and nothing else.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I encounter organizations stating that zero defects as measured with SonarQube is the ultimate goal.
And they find normal to have thousands of smells.
Time for a reality check.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Tools such as SonarQube, unit test coverage are just instruments to support your teams to detect &lt;em&gt;known non-quality&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_how_to_find_the_quality_graal&#34;&gt;How to find the Quality Graal?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Below, I provide a set of established, old techniques to eliminate non-quality.
Most of them are around for at least twenty years.
I encourage you to extend your practices with additional procedures based on your measurements and findings.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_extrinsic_quality_product_quality&#34;&gt;Extrinsic Quality - Product Quality&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;Is why you buy a specific car&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Acceptance criteria and behavior test-driven development ATDD – You ensure through automatic tests that the feature behaves how your customer requested.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Defect driven development – You ensure through automatic tests your customer will never encounter this exact error again.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fast release and deployment cycle.&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You give your customer a way to detect bad behavior early and have an opportunity to ask for improvement.
By fast, we mean daily or perhaps weekly.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_intrinsic_quality_technical_quality&#34;&gt;Intrinsic Quality – Technical Quality&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;Is why you can daily drive your car and not have to weekly repair it.
And, later be able to add a charger for your mobile phone without spending a fortune.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Static code analysis - Known weaknesses are removed from your source code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Test driven development TDD – You can change the code without changing the behavior or outputs, see also ATDD.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clean code – You guarantee the source code is maintainable cite:[clean-code,clean-coder].&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clean architecture and domain driven development - You guarantee the product is extendable cite:[clean-architecture,domain-driven-design,implementing-domain-driven-design].&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_accountability&#34;&gt;Accountability&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Scrum Team - Development Team, Product Owner and Scrum Master - are responsible and accountable for the intrinsic and extrinsic quality of the delivered products cite:[clean-agile,succeeding-with-agile].
Insufficient quality is always a collective failure.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Truly, if the intrinsic quality of the source code is low, it is undeniably a failure.
A failure of the development team and of each software developer writing the code; and a failure of the Scrum master holding and teaching agile and Scrum values.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When there is high pressure on delivery, people have a tendency to pay less attention to processes and standards.
That is one of the reasons why in Scrum we have the role of Scrum master responsible for understanding and enacting agile practices and rules.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And no physician will ever cut corners just because he is in a stressful situation.
So please be a professional and read again the principles of the &lt;a href=&#34;http://agilemanifesto.org/principles.html&#34;&gt;agile manifesto&lt;/a&gt; such as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Continuous attention to technical excellence and good design enhances agility.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Agile Manifesto
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Developers please read the seminal book &lt;em&gt;Clean Coder&lt;/em&gt; from Robert Martin cite:[clean-coder].
As a professional, you are responsible and accountable for the quality of the software you produce.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I find it intolerable to hear software professionals stating they are not in charge of the intrinsic quality of the product they write.
They cowardly try to push the responsibility to the internal quality assurance department or to the whole organization.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The above ideas are keys to &lt;a href=&#34;https://tangly-blog.blogspot.com/2018/04/pragmatic-craftsmanship-professional.html&#34;&gt;Software Craftsmanship&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_kaizen_small_steps_bring_first_successes&#34;&gt;Kaizen - Small Steps bring First Successes&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The first steps to improve your product are quite simple are around for at least twenty years cite:[pragmatic-programmer-2nd].&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Eliminate all compiler errors and warnings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use static checkers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Activate the checkers of the IDE you are working with.
For example, I am using IntelliJ IDEA.
They have extensive checkers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If using &lt;a href=&#34;https://www.sonarqube.org/&#34;&gt;SonarQube&lt;/a&gt;, download link:../../2018/blog-2018-05-01]SonarLint plugin and simply use it.
This tool is best of breed, do not argument and just use it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Write tests with JUnit5, Mockito, AssertJ, Cucumber.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I am &lt;em&gt;ashamed&lt;/em&gt; to see software developers not implementing the above measures on a daily basis.
I &lt;em&gt;despair&lt;/em&gt; of encountering Scrum masters who tolerate the situation.
These techniques cost nothing, &lt;em&gt;are installed in a few minutes and support incremental improvement of your source code&lt;/em&gt;.
See also
&lt;a href=&#34;https://www.leadingagile.com/2018/09/software-developers-dont-need-permission-or-forgiveness/&#34;&gt;Why software developers do not need to ask for permission or forgiveness&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Your goal is simply zero warnings at the end of the spring.
Later tighten it to zero warnings in the trunk of your &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; repository.
Just do it – and stop arguing about the merits and costs -!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And if you do not agree with one of the warnings, just disable the rule and document the reason for an architecture design record ADR.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Agile and Scrum are all about learning and continuous improvement.
Please stop talking about quality.
Just start improving it!
I do not want to hear any lame excuses why a software developer is not continuously doing the above activities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;I acknowledge I am emotionally involved and not fully objective.
Lately, I saw a Java code of three different commercial products.
I am still recovering from the missing quality.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_references&#34;&gt;References&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;bibliography::[]&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Agile Trends Switzerland 2018</title>
      <link>https://blog.tangly.net/blog/2018/agile-trends-switzerland-2018/</link>
      <pubDate>Sun, 20 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2018/agile-trends-switzerland-2018/</guid>
      <description>
        
        
        &lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2018-05-02-head.jpg&#34; alt=&#34;2018 05 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What are the main hurdles to introducing agile approaches in Swiss companies?
The Swiss agile trends report was published for the last ten years and learn us the difficulties and successes of agile transformations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;SwissQ has published a &amp;#34;SwissQ Software Development Switzerland 2018&amp;#34;, the tenth version of this report.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Introducing agile company-wide was and is a cultural change process.
Such a change takes time and sometimes hurts.
Too often, organizations stop the process and revert to all command and control approaches with Waterfall product management.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Without the commitment of senior management, the initiative will fail.
In other words, &lt;em&gt;Walk the talk&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You must teach, coach, and support your collaborators through the transition.
You need to believe in them and provide an environment where they can safely learn and experiment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In the end, collaborator purpose, customer satisfaction, and business value matter.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The study can be downloaded as PDF from their website.
See previous blogs for the results of years 2016, 2013 and 2012.
Below some findings of the study.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_slower_adoption_of_agile_approaches&#34;&gt;Slower Adoption of Agile Approaches&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The adoption of agile frameworks has markedly slowed down in Switzerland.
And hybrid methods based on Waterfall methodology are often used.
It is fascinating to see companies trying to merge a linear approach with highly iterative and incremental approaches.
It shall be clear that success will only be elusive.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The data of the study reflect this fact through the abysmal collaborator satisfaction with these hybrid approaches (see chapter 13).
Less than 25% of employees are satisfied with the development process of their company.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_major_hurdles_when_introducing_agile_approaches&#34;&gt;Major Hurdles When Introducing Agile Approaches&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The list of hurdles for a successful introduction of agile approaches was updated.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;69%&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Culture change and you need senior management support&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;54%&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Non-adapted overall processes because local optimizations have a limited effect&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;42%&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Missing product overview because a company sells products&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;42%&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Focus on business value because a company shall earn money&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;25%&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Missing agile know-how of collaborators, and you shall train your collaborators&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We reached a major threshold.
The majority of interviewed companies have more than 500 IT collaborators.
These big companies are struggling to introduce agile approaches company-wide.
Interestingly, 75% of all companies plan to increase investment in the agile introduction and transition projects.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One interesting consequence is the company compiling the report is actively poaching potential agile candidates from these big laggard companies!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The majority of teams use Scrum or Kanban.
The associated events and tools are used.
Deeper values are often missing.,
Observable examples are test driven development, acceptance test driven development, clean code or refactoring.
The key is:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph text-center&#34;&gt;
&lt;p&gt;&lt;em&gt;To be agile, not to do agile&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We wrote in previous blogs that introducing Scrum in the development department or in the whole company is a change process.
The coaches should be trained in change management and have experiences with resistance to changes.
Our experience shows senior management is often not ready to move along the cultural change path.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Sonar Lint for the Impatient</title>
      <link>https://blog.tangly.net/blog/2018/sonar-lint-for-the-impatient/</link>
      <pubDate>Wed, 16 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2018/sonar-lint-for-the-impatient/</guid>
      <description>
        
        
        &lt;div class=&#34;openblock float-group&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2018-05-01-head.png&#34; alt=&#34;2018 05 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Remove issues before they reach customer sites.
No quality problems shall reach your Git master branch.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.sonarqube.org/&#34;&gt;SonarQube&lt;/a&gt; is a central server that processes full analyses (triggered by the various SonarQube Scanners).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Its purpose is to give a 360° vision about the quality of your code base.
For this, it analyzes all the source lines of your product on a regular basis.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It should be added that SonarQube also performs scans with well-known third party analyzers (&lt;a href=&#34;https://spotbugs.github.io/&#34;&gt;SpotBugs&lt;/a&gt; - previously FindBugs -,
&lt;a href=&#34;http://checkstyle.sourceforge.net/&#34;&gt;Checkstyle&lt;/a&gt;, &lt;a href=&#34;https://pmd.github.io/&#34;&gt;PMD&lt;/a&gt;) whereas SonarLint does not include those.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I think the reason is a prioritization on performance and findBugs relying on java byte-code.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_what_is_sonarlint&#34;&gt;What is SonarLint?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;SonarLint lives only in your IDE (IntelliJ, Eclipse, or Visual Studio).
Its purpose is to give instantaneous feedback as you type your code.
For this, it concentrates on what code you are adding or updating.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Findings are displayed in the source code with information such as rule violation, rating of the rule and explanation.
You have a window where all findings are displayed to provide an overview and navigation support.
You are free to analyze a single file, a package, or the whole product; you can also exclude files or packages from the analysis.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Connect SonarLint to your preferred code quality application.
It then uses the same code analyzers, rules and settings locally that are used on the server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Issues marked as Won’t Fix or False Positive in SonarQube or SonarCloud disappear from your IDE.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Both SonarLint and SonarQube rely on the same static source code analyzers – most of them being written using SonarSource technology.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_how_to_use_it&#34;&gt;How to use It?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;the SonarLint in your favorite IDE&lt;/p&gt;
&lt;div class=&#34;olist loweralpha&#34;&gt;
&lt;ol class=&#34;loweralpha&#34; type=&#34;a&#34;&gt;
&lt;li&gt;
&lt;p&gt;configure the SonarCube instance to synchronize the rule set used in your product.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure the plugin to access your SonarCube instance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run it.&lt;/p&gt;
&lt;div class=&#34;olist loweralpha&#34;&gt;
&lt;ol class=&#34;loweralpha&#34; type=&#34;a&#34;&gt;
&lt;li&gt;
&lt;p&gt;See the messages in the next few seconds.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jump to the source and correct the problem.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Iterate until all issues are solved.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run your unit tests and acceptance tests – TDD and ATDD -.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Commit your changes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This approach guarantees you always release source code with less SonarCube issues, therefore SonarCube always show no findings for new code and for refactored
code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And you have made a step to the journey to become a professional software developer and achieve
&lt;a href=&#34;../../2018/pragmatic-craftsmanship-professional-software-developer/&#34;&gt;craftsmanship&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Agile Introduction Success Criteria through the LeSS Lens</title>
      <link>https://blog.tangly.net/blog/2018/agile-introduction-success-criteria-through-the-less-lens/</link>
      <pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2018/agile-introduction-success-criteria-through-the-less-lens/</guid>
      <description>
        
        
        &lt;div class=&#34;openblock float-group&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2018-04-02-head.jpg&#34; alt=&#34;2018 04 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;An agile organization is able to deliver or change her direction at any time without additional cost.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;More companies want to become truly agile and book an expensive journey to the holy land of agility.
Often travelers never reach their true destination.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;https://less.works/&#34;&gt;LeSS&lt;/a&gt; people have a clear set of conditions to increase the odds.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All my experiences confirm these conditions are essential for success.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_less_criteria&#34;&gt;LeSS Criteria&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Use these criteria as a checklist to evaluate your current agile transformation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Educate everyone&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Train all involved collaborators extensively, train them multiple times.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Let them apply the learnt to their daily activities.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select an experienced coach understanding organization, team, and technical excellence.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Plan for a long-term engagement of the coach.
 The journey will take years.
*Define your “product”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You need an elevator pitch describing your product family and why the customers are buying.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Identify your vision, your roadmap for the next three years, your releases for the next 12 months, and product backlog and boundaries of your product.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Define “done” with a written and published &lt;strong&gt;Definition of Done&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Definition of done tells when your work is completed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A strong definition of done supports organizational changes, see the &lt;a href=&#34;https://less.works/&#34;&gt;LeSS&lt;/a&gt; metaphor of the &lt;em&gt;Undone Department&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check the team can implement the current definition of done or expand cross-functionality and training.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Have appropriately structured teams&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A team is stable, &lt;strong&gt;long-lived, collocated, cross-functional&lt;/strong&gt; and implement end to end features for the solution.
Avoid component teams specialized for the database, user interface or communication layer.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Team members are dedicated to the team.
They do not work in other projects and do not report to a matrix structure.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Only the Product Owner provides work for the teams.&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The team is dedicated to implementing the best solutions as defined by the product owner.
No side activities are tolerated.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Keep product managers away from the teams.&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Project managers are not needed in an agile organization.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We realize and sell products, projects are irrelevant.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nurture good managers to sustain the transformation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Further Reading Read the &lt;a href=&#34;https://less.works/less/rules/index.html&#34;&gt;LeSS Rules&lt;/a&gt; for ideas and wisdom about how to improve your approach to agile product development.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As you found out now, I am convinced that &lt;a href=&#34;https://less.works/&#34;&gt;LeSS&lt;/a&gt; approach is one of the best ways to truly transform into an agile organization.
And less truly and deeply advocate technical excellence for all collaborators.
You need an agile mindset and technical excellence to develop awesome products.
See &lt;a href=&#34;../../2018/pragmatic-craftsmanship-professional-software-developer/&#34;&gt;Software Craftsmanship&lt;/a&gt; blog.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A huge advantage of &lt;a href=&#34;https://less.works&#34;&gt;LeSS&lt;/a&gt; is that it is &lt;a href=&#34;https://www.scrumguides.org/&#34;&gt;Scrum&lt;/a&gt;.
You do not need to learn new methodologies, terminology or processes.
Just apply all your hard-earned learnings from your Scrum transformation.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Pragmatic Craftsmanship - Professional Software Developer</title>
      <link>https://blog.tangly.net/blog/2018/pragmatic-craftsmanship-professional-software-developer/</link>
      <pubDate>Thu, 12 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2018/pragmatic-craftsmanship-professional-software-developer/</guid>
      <description>
        
        
        &lt;div class=&#34;openblock float-group&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2018-04-01-head.png&#34; alt=&#34;2018 04 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The last months I was often confronted with software products having insufficient quality.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Insufficient means late delivery, and few new features.
The effort to correct errors in the field eats &lt;strong&gt;30% to 50%&lt;/strong&gt; away from the development budget.
How can such a dreadful situation occur?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One root cause is the low quality of the source code and ignorance of basic coding design approaches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We are not talking about complex design activities or complex patterns; we are discussing basic approaches how to write correct and maintainable code.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_master_your_technology_stack&#34;&gt;Master Your Technology Stack&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Most of the programmers have no formal training in the technology stack they are using daily.
Their best friend is the Internet.
And as a consequence, many agile projects steadily and iteratively produce mediocre software.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You shall be a proud software craftsman cite:[software-craftsman].
You shall work as a professional and deliver professional results.
I recommend any Java developer:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Have formal training in the Java language and library cite:[java-puzzlers].
For example, you should consider a Java Programmer certification for the current JDK you are working daily with.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn the new features in Java e.g. Streams, Lambdas, Reactive Programming, LocalDate, Modules, packaging with jlink.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Read and understand &lt;em&gt;Effective Java&lt;/em&gt; cite:[effective-java-2nd] from Joshua Bloch.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Read and understand the clean series cite:[clean-code, clean-coder, clean-architecture,clean-agile, clean-craftsmanship].&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Read and understand &lt;em&gt;Refactoring&lt;/em&gt; from Martin Fowler cite:[refactoring-2nd].&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And read &lt;a href=&#34;https://ronjeffries.com/xprog/articles/refactoring-not-on-the-backlog/&#34;&gt;Refactoring not in the backlog&lt;/a&gt; article from Ron Jeffries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn modern practices such as logging with &lt;a href=&#34;https://www.slf4j.org/&#34;&gt;slf4j&lt;/a&gt;, TDD with &lt;a href=&#34;https://junit.org/junit5/&#34;&gt;JUnit5&lt;/a&gt;, &lt;a href=&#34;https://site.mockito.org/&#34;&gt;Mockito&lt;/a&gt; and &lt;a href=&#34;http://joel-costigliola.github.io/assertj/&#34;&gt;AssertJ&lt;/a&gt;, ATDD with &lt;a href=&#34;https://cucumber.io/&#34;&gt;Cucumber&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lean DevOps, continuous integration, continuous delivery, continuous deployment, monitoring.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be aware of famous Java libraries such as &lt;a href=&#34;https://github.com/google/guava&#34;&gt;Guava&lt;/a&gt;, &lt;a href=&#34;https://commons.apache.org/&#34;&gt;Apache Commons&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;a href=&#34;https://www.sonarqube.org/&#34;&gt;SonarQube&lt;/a&gt; and the &lt;a href=&#34;https://www.sonarlint.org/&#34;&gt;SonarLint&lt;/a&gt; plugin for your preferred IDE to catch well-known weaknesses in your source code and improve your coding skills.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A software developer not knowing the above items is almost certainly not a professional person, just a more or less talented amateur cite:[clean-code,clean-coder].
For a similar point of view, see the blog of Mike Cohn
&lt;a href=&#34;https://www.mountaingoatsoftware.com/blog/the-difference-between-a-professional-and-an-amateur&#34;&gt;the difference between a professional and an amateur&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_improve_continuously_you_shall_strive_for_mastery&#34;&gt;Improve Continuously You shall strive for mastery.&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The feeling having reached a certain mastery level is truly awesome.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Read a technical book each quarter.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lean a new language or framework every two years.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Read books such as The pragmatic Programmer cite:[pragmatic-programmer-2nd].&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know approaches such &lt;a href=&#34;http://www.extremeprogramming.org/&#34;&gt;eXtreme Programming&lt;/a&gt;, and read the book cite:[extreme-programming-explained].&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Work with &lt;a href=&#34;https://www.scrumguides.org/&#34;&gt;Scrum&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Kanban&#34;&gt;Kanban&lt;/a&gt;, &lt;a href=&#34;https://less.works/&#34;&gt;LeSS&lt;/a&gt;.
Agile approaches are definitively state of the industry techniques.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Master container approaches with &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; - containers are here to stay and will replace virtual machines -.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You shall write good enough software without errors and using the best practices of the industry.
If not, consider changing your profession.
See my blog post about technical debt discussing the consequences of missing mastery.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_software_craftsmanship&#34;&gt;Software Craftsmanship&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Software_craftsmanship&#34;&gt;Software craftsmanship&lt;/a&gt; is an initiative to improve the professionalism of software developers.
You do not have to agree with them, look what they are doing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For a detailed discussion, read the book The Software Craftsman: Professionalism, Pragmatism, Pride by Sandro Mancuso.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Don’t discuss practices, discuss value&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Their manifesto is&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Craftsmanship is not enough to guarantee the success of a product, but the lack of it can be the main cause of its failure.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Agile and Craftsmanship complement each other and both are necessary cite:[clean-agile, clean-craftsmanship].&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Agile processes assume technical excellence and a professional attitude&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Software craftsmanship takes technical excellence and professionalism to a whole new level cite:[pragmatic-programmer-1st,pragmatic-programmer-2nd].&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Take everything you read with a grain of salt.
Software craftsmanship is&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Not a church, trying to convert all developers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;About leading by example and showing how we can be better.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;About well-written and designed code and the customer stays in the center.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;About continuously delivering value not writing crap code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Your goal shall to become a professional developer and reach mastery.
How you do it is up to you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;An extensive list of books can be found under &lt;a href=&#34;../../../ideas/learnings/books/&#34;&gt;Books&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_references&#34;&gt;References&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;bibliography::[]&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Why Do You Need Metrics and KPI in Agile Product Development?</title>
      <link>https://blog.tangly.net/blog/2018/why-do-you-need-metrics-and-kpi-in-agile-product-development/</link>
      <pubDate>Wed, 14 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2018/why-do-you-need-metrics-and-kpi-in-agile-product-development/</guid>
      <description>
        
        
        &lt;div class=&#34;openblock float-group&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2018-03-03-head.jpg&#34; alt=&#34;2018 03 03 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Why do we define metrics and KPI?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;First, we want to find out how good the build-in quality of our software artifacts is.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Second, we want to improve the build-in quality through experiments and use the metrics to judge the success of these experiments.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And the Key Performance Indicators &lt;em&gt;KPI&lt;/em&gt; provide plausibility checks by qualifying the intrinsic quality of software artifacts against quantifiable strategic objectives.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Measurements shall be cheap to gather and as much as possible generated automatically through the tooling landscape.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We provide two sets of measurements to find out how supportive the development process is for quality and how to evaluate the quality of the artifacts.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_definitions&#34;&gt;Definitions&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A metric is a measure or a combination of measures for quantitatively assessing or improving a product, a process or a team.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A &lt;em&gt;key performance indicator&lt;/em&gt; is a metric that&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Is tied to a strategic objective.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Has at least one defined time-bound target value such as a number, a trend, a variation, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Therefore, you must define your strategic objectives before you can use KPIs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Lean approaches have an imperative to reduce cycle-time, eliminate waste and tend to zero-defect products.
The last one is a corollary because defects are waste.
Please use this imperative to define your agile and lean KPIs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If your tooling landscape does not support automatic gathering of a specific metric, you shall make it optional until you have solved your tooling weaknesses.
Accurate and real-time automated measurements are of tremendous importance for acceptance and lasting success.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_process_aspects&#34;&gt;Process Aspects&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The optimal lean software development process has a batch size of one, almost no waiting time, no superfluous stock and no quality issues.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Cycle Time of defects&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;It shows the effectivity to resolve non-quality in product development,&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Cumulative Flow Diagram for defects and for stories/Backlog Items&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;It shows how effectively resources are allocated,&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Sprint and PI burndown planned stories and effort&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;versus completed stories and effective effort trends show the stability and adaptability of the development process,&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Planned velocity and effective velocity trends&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;It is an indicator for the maturity of the agile product organization.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This metrics shall be automatically provided through the issue and product backlog system.
For example, the “best of breed” JIRA tool has build-in reports for all the above metrics, so the tools you use should also have them.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_technical_quality&#34;&gt;Technical quality&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A high-quality software artifact has no code smell issues, no compiler warnings, always compile, and all tests are successfully processed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Code quality&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Method length distribution,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Class size distribution,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cyclomatic complexity distribution,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Code Smells,&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Product quality&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Continuous integration successful build trends,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Test coverage trends for unit tests, integration tests and -ility tests.
This metric implies the development team uses unit testing, TDD, ATDD, and automatic -ility testing.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Architecture&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Separation of API and implementation can only be inferred on modern technology stacks.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Work techniques&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Refactoring trends sometimes need to be evaluated manually in some projects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Emergent Architecture documentation trends probably need to be evaluated manually in most projects.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These metrics shall be automatically provided through your quality tracking and continuous integration systems.
For example, the &amp;#34;best of breed&amp;#34; tools SonarQube and Jenkins have build-in reports for these metrics, so the tools you use should also have them.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_remainder&#34;&gt;Remainder&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The above metrics are tools to discover discrepancies and weaknesses in your product development process and generated artifacts.
The inferred results shall be used to identify and implement corrective measures.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Agile emphasizes transparency.
The above metrics and KPIs shall be visible anytime to all involved participants through dashboards.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Agile GIS Open Data Initiative</title>
      <link>https://blog.tangly.net/blog/2018/agile-gis-open-data-initiative/</link>
      <pubDate>Mon, 12 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2018/agile-gis-open-data-initiative/</guid>
      <description>
        
        
        &lt;div class=&#34;openblock float-group&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2018-03-02-head.jpg&#34; alt=&#34;2018 03 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;How can agile approaches be applied to deliver solutions in a government environment?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here is an example of a GIS open data portal successfully developed using agile approaches such as Kanban, lean product and technical excellence.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_gis_open_data_initiative&#34;&gt;GIS Open Data Initiative&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Swiss government has initiated an open government data strategy to provide data at federal and state level to all citizens and interested parties.
The aims are&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Release of official data&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The Confederation will make data which are suitable for OGD available to the public in machine-readable and open formats to be freely reused.
The individual administrative units must review and, where necessary, adapt the legal, organizational, financial and technical framework of data production to make this possible.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Coordinated publication and provision of official data&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;With the help of a central infrastructure (OGD portal), the Confederation will make its data sets easily locatable for the public and will make the data available for free use.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Establishing an open-data culture&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The Confederation will support the use of data through free, uniform and understandable terms of use and through additional information on the individual data sets.
It will also pursue a continuous dialogue with the public.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can find more details under
&lt;a href=&#34;https://www.egovernment.ch/en/umsetzung/e-government-schweiz-2008-2015/open-government-data-schweiz&#34;&gt;Open Government Data Switzerland&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The solution is a GIS open data portal supporting self-service.
It provides over a hundred theme maps with GIS data in multiple formats, resolutions and geographical sizes available through a self-service portal.
It was realized using agile approaches.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_agile_approach&#34;&gt;Agile Approach&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The solution was implemented during the year 2017 and released to the public end of the year.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We identified these key elements to explain the success of the whole product development.
The whole organization and all involved managers shall&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;trust the team will solve adequately and pragmatically the customer needs.
Trust your team and create a work environment to support them.
For example, you should&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Promote technical excellence.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Provide approaches for face 2 face communication.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Publish Kanban board to increase transparency.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Act as an agile leader&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Encourage accountability and self-management.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Delegate and truly support technical autonomy.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be a gatekeeper to support and protect your team.&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Reduce tension with IT, legal and management systems and build bridges to these departments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set reasonable and achievable goals.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The delivered solution was&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Integrated in the existing GIS portal of Zürich state to minimize barriers to interested parties.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Self-service approach to minimize running costs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Private cloud approach due to regulatory aspects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;REST service to provide human-readable and machine-readable maps in various formats.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Build on existing approaches to generate GIS data to minimize risks and respect ambitious timeline
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The REST API is described
&lt;a href=&#34;https://are.zh.ch/internet/baudirektion/are/de/geoinformation/geodaten_uebersicht/Open_Data_Kanton_Zuerich/Datenshop-Dienst/_jcr_content/contentPar/downloadlist/downloaditems/schnittstelle_datens.spooler.download.1513149023584.pdf/d-OGD+ZH+-+REST+interface+v1.1.1.pdf&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_learnings&#34;&gt;Learnings&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Pragmatic approaches to become agile were very successful in this setup.
These governmental organizations were willing and eager to try them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Senior management was supportive.
After initial doubts, the team embraced the approach.
They enjoyed the whole process and the successful deployment of the solution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The enablers were * Senior management committed to the approach and supported it.
* Team was open to new ways of working.
* Team members were competent.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. A description of the technical solution in German is no more available from &lt;a href=&#34;https://www.inser.ch&#34;&gt;inser&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Java 10 aka 18.3 Changes</title>
      <link>https://blog.tangly.net/blog/2018/java-10-aka-18.3-changes/</link>
      <pubDate>Fri, 09 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2018/java-10-aka-18.3-changes/</guid>
      <description>
        
        
        &lt;div class=&#34;openblock float-group&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2018-03-01-head.png&#34; alt=&#34;2018 03 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Oracle has decided to release a new JDK two times a year.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The next release of Java 10 aka 18.3 will be available in March 2018.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;JDK 11 aka 18.9 will be released in September 2018.
Java 11 will also be a long-term support &lt;em&gt;LTS&lt;/em&gt; release.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For Java to remain competitive, it must not just continue to move forward — it must move forward faster.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Mark Reinhold
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_the_visible_change&#34;&gt;The Visible Change&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The visible change is the dawn of the keyword &lt;strong&gt;var&lt;/strong&gt;.
Now instead of typing the type declaration of a local variable - local to a method, a block or an instruction - you can just use the keyword var.
The constraint is that the variable is initialized at declaration.
Stay tune for more support in JDK 11.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When the type declaration is a complex generic type definition, the var shortcut is a boon.
The code is less verbose and the legibility is at least as good.
When the type is a class name, I got the impression. the benefit is less clear.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As an exercise, I updated the source code of open source libraries which I have written and the associated tests as in&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color: #953800&#34;&gt;Event&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;Events&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;event&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Event&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;Events&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;AA_AB&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #cf222e&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;event&lt;/span&gt; &lt;span style=&#34;color: #0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #cf222e&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #953800&#34;&gt;Event&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span style=&#34;color: #953800&#34;&gt;Events&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #116329&#34;&gt;AA_AB&lt;/span&gt;&lt;span style=&#34;color: #0550ae&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The first impression is that the new construct sometimes simplifies the code of the library and very often improves the test cases.
Perhaps it takes time until I am accustomed to the new way of writing Java code.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_under_the_hood_changes&#34;&gt;Under the Hood Changes&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The source code of the JDK is consolidated into one repository.
It makes development work more efficient.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The garbage collector shall have a clear and documented API.
Developing and adding new garbage collectors is easier.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Various updates such as the Unicode newest version.
The extensions are used in library classes to better support locales.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Open JDK and Oracle JDK are slowly merging.
For example, CA certificates will be provided to OpenJDK by Oracle.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_outlook&#34;&gt;Outlook&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The rhythm of releases is staggering higher.
Starting Spring 2018, we will have * The new rule as blogged by Mark Reinhold &lt;a href=&#34;https://mreinhold.org/blog/forward-faster&#34;&gt;Moving Java Forward Faster&lt;/a&gt;.
* You will get a new JDK every six months * You will get security updates every three months * You will get a long-term support release every three years.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This means that you shall update your JDK in development environment six times a year if you want to install the new JDK and the security releases.
We recommend automating the process in your environment.
And you shall deliver your applications in Docker containers to support the whole ecosystem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The tool landscape is still struggling to adapt to the new rhythm.
I am working with IntelliJ IDE and I had to wait for the EAP 2018.3 before being able to write JDK 10 code in the IDE.
I use Gradle as a building tool and also to wait until JDK 10 was at least partially supported.
And I am still waiting for the update of the code coverage plugin.
Before that, I was back to stone age, writing software with a text editor and compiling it with the command line.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The library landscape is often behind. They are regularly incompatible with the newest version of the JDK.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;JavaFX will be removed from the regular JDK distribution in Fall 2018.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The cloud landscape does not support the latest JDK as SAAS.
You must provide your custom docker images with the expected JDK or JRE.
So we are back to IAAS.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Six Levers for better Agile Product Development</title>
      <link>https://blog.tangly.net/blog/2018/six-levers-for-better-agile-product-development/</link>
      <pubDate>Wed, 21 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2018/six-levers-for-better-agile-product-development/</guid>
      <description>
        
        
        &lt;div class=&#34;openblock float-group&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2018-02-02-head.jpg&#34; alt=&#34;2018 02 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;How can you create better products and services?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;How can you delight your customers, your collaborators, and your stakeholders?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We identified six levers to multiply the effectivity of your agile development teams and empower them to create great services and products.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Please add these tools to your toolbox and create great products.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_design_thinking_and_customer_experience&#34;&gt;Design Thinking and Customer Experience&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You solve customer problems through intuitive services and products.
Customer expectations should fit with their experience with your products.
That is why they should be involved in the whole definition and realization process.
At the beginning, to understand the need and to test first ideas.
During the implementation, they are directly asked for feedback, which then flows into further development steps.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Go out with your &lt;em&gt;incomplete&lt;/em&gt; product as soon as possible.
Each iteration should deliver an upgraded version of the product.
The pressure to deliver is huge. A design thinking iteration has a duration of at most one week.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_lean_startup_and_lean_ux&#34;&gt;Lean Startup and Lean UX&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Minimum viable products &lt;em&gt;MVP&lt;/em&gt; are first developed as minimally functional products.
Within 60 days, a physical prototype will be created that customers can test during this time.
The software component shall be delivered after the first or second iteration, which means in less than one month.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;New technologies such as 3D printing, cheap hardware and IoT boards, continuous delivery, and simulation enable your teams to deliver on time.
These are not pure mockups but executable applications.
If it appeals to the customer, the MVP will evolve gradually to a minimum marketable product &lt;em&gt;MMP&lt;/em&gt;.
The focus is always on adding customer value.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_beyond_budgeting_approaches&#34;&gt;Beyond Budgeting Approaches&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There is no long-term budget plan for products and projects.
After each cycle of customer feedback, the goals and budget are evaluated again.
The value streams have agile teams that work like small companies.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Each team has a Product Owner - PO - who has overall responsibility for their respective product.
Realizations are further funded, modified or canceled on the basis of initial results, meaning after customer and technical tests.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The product financing is following a start-up approach and not based on the yearly budget as usual in larger companies.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_co_location_and_team_ownership&#34;&gt;Co-location and Team ownership&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Work is done across departments, in cross-functional teams.
All those who can contribute to the success of the product, e.g. company organization, IT, market management, or sales, sit in one room.
They form the agile team.
Co-location ensures lean coordination processes as well as speed and quality.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Co-location also means: You are moving.
The teams move into a room and work focused together on their product.
There are no phones, no other projects, and no outside distractions.
They use collaboration tools such as chats, wikis, and Scrum boards.
Scrum teams are wholly focused on their product.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;People check three times a day their emails; otherwise the email client is closed and inactive.
All phones have voicemail.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_agile_methods_and_craftsmanship&#34;&gt;Agile Methods and Craftsmanship&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Employee training is essential.
In the value streams, we provide staff with experienced coaches to build knowledge in agile methods and software craftsmanship.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Work is done according to proven agile methods.
Software development relies on modern and agile techniques such as pair programming, refactoring, test-driven development, continuous integration, and Scrum.
For bigger product development we use &lt;a href=&#34;https://less.works/&#34;&gt;LeSS&lt;/a&gt; approach.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Read this &lt;a href=&#34;../../2018/one-way-to-improve-your-scrum-approach/&#34;&gt;One Way to Improve Your Scrum Approach&lt;/a&gt;
for a description of modern agile development procedures.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_elastic_infrastructure&#34;&gt;Elastic Infrastructure&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We shall use the state of industry technology.
This enables test-driven development - ATDD, TDD -, meaning predefined automated software tests that run in real-time.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Cloud infrastructure provides unlimited processing capabilities for development, test, and deployment of software artifacts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Developers have fast notebooks, fast SSD, plenty of RAM, and 4K external screens.
In addition, the technical infrastructure enables software to be scaled and adjustments made immediately - CI, CD, DevOps -.
The goal is to deliver a software release in production every few hours if needed.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_learnt_lessons&#34;&gt;Learnt Lessons&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;The power of co-location is tremendous.
The work atmosphere is focused, friendly and productive.
Team members are continuously working on the solution without spurious task switches in their team room.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Establish stable and long living teams.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Realize the importance of training and coaching.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Embed your teams and processes in the organization.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Change processes for beyond budgeting approaches and lean enterprise.
The organization has to stop requiring exact budgets and detailed yearly planning.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reflect on the impact on the whole organization.
See also my blog discussing what agile companies are.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Scrum Guide 2017: What changed?</title>
      <link>https://blog.tangly.net/blog/2018/scrum-guide-2017-what-changed/</link>
      <pubDate>Fri, 09 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2018/scrum-guide-2017-what-changed/</guid>
      <description>
        
        
        &lt;div class=&#34;openblock float-group&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2018-02-01-head.jpg&#34; alt=&#34;2018 02 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Scrum guide was revised in 2016 and got clarification concerning the core values.
I was thrilled.
Talking about values and mental models, you must have to successfully introduce and be agile is awesome.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A new revision was published at the end of year 2017, just a year after the addition of values.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What has changed?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What has the community learnt and committed to the new version of the guide?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_scrum_is_not_only_for_software&#34;&gt;Scrum is not only for Software&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Scrum was initially developed for managing and developing products.
Starting in the early 1990s, Scrum has been used extensively, worldwide, to:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Research and identify viable markets, technologies, and product capabilities.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Develop products and enhancements.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Release products and enhancements as frequently as many times per day.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Develop and sustain Cloud (online, secure, on-demand) and other operational environments for application use.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sustain and renew products.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The essence of Scrum is a small team of people.
The individual team is highly flexible and adaptive.
These strengths continue operating in single, several, and networks of teams.
They develop, release, operate and sustain the work and work products for thousands of people.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;They collaborate and interoperate through sophisticated development architectures and target release environments.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph text-center&#34;&gt;
&lt;p&gt;&lt;em&gt;Scrum is a tool to solve complex problems, any kind of complex problem.
It is already the industry standard for software projects.
It is becoming a major standard for all complex products.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_what_does_a_scrum_master&#34;&gt;What does a Scrum Master?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Changed wording in The Scrum Master section to provide better clarity to the role.
The text now reads:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Scrum Master is responsible for &lt;em&gt;promoting and supporting Scrum&lt;/em&gt; as defined in the Scrum Guide.
Scrum Masters do this by helping everyone understand Scrum theory, practices, rules, and values.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Scrum Master is a &lt;em&gt;servant-leader&lt;/em&gt; for the Scrum Team.
The Scrum Master helps those outside the Scrum Team understand which of their interactions with the Scrum Team are helpful and which are not.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Scrum Master helps everyone change these interactions to maximize the value created by the Scrum Team.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Added to the section Scrum Master Service to the Product Owner&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Ensuring that &lt;em&gt;goals, scope, and product domain&lt;/em&gt; are understood by everyone on the Scrum Team as well as possible.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Scrum master is a servant leader and promotes Scrum and agile approaches.&lt;/strong&gt;
&lt;strong&gt;The whole team works on a product.&lt;/strong&gt;
&lt;strong&gt;They understand the vision, goals, scope, and have extensive domain knowledge.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;This means the whole team talks with stakeholders and users.&lt;/strong&gt;
&lt;strong&gt;The team members have a genuine interest in learning more about the product domain.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_scrum_events&#34;&gt;Scrum Events&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Updated the first paragraph of the Daily Scrum section to read&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The Daily Scrum is a 15-minute time-boxed event for the Development Team.
The Daily Scrum is held every day of the Sprint.
At it, the Development Team plans work for the next 24 hours.
This optimizes team collaboration and performance by inspecting the work since the last Daily Scrum and f&lt;em&gt;orecasting upcoming Sprint work&lt;/em&gt;.
The Daily Scrum is held at the same time and place each day to reduce complexity.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Updated the Daily Scrum section to provide clarity on the goals of the Daily Scrum including this text&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The structure of the meeting is set by the Development Team and can be conducted in different ways if it focuses on progress toward the Sprint Goal.
Some Development Teams will use questions, some will be more discussion based.
Here is an example of what might be used:&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;What did I do yesterday that helped the Development Team meet the Sprint Goal?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What will I do today to help the Development Team meet the Sprint Goal?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do I see any impediment that prevents me or the Development Team from meeting the Sprint Goal?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Added clarity around time-boxes&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Using the words “at most” to remove any questions that the time-box for Events means maximum length, but could be shorter.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;The guide clarifies the daily Scrum event.
It establishes a daily feedback loop for improvement.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;For slow learners, time-box means maximum duration.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_scrum_artifacts&#34;&gt;Scrum Artifacts&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Added to the Sprint Backlog section&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;To ensure continuous improvement, it includes at least one high priority way in which the team works, identified in the previous Retrospective meeting.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Added clarity to the Increment section&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;An increment is a body of inspectable, &amp;#34;Done&amp;#34; work that supports empiricism at the end of the Sprint.
The increment is a step toward a vision or goal.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;The guide emphasizes the learning and improvement process.
One root of the agile manifesto is lean thinking.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;For slow learners, you inspect the result of the increment and put at least one improvement measure in the next sprint backlog.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_previous_changes&#34;&gt;Previous Changes&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The biggest change for the daily work was introduced in the previous revision.
Read previous blog &amp;lt;&amp;lt;[scrum-guide-2011&amp;gt;&amp;gt;.
The word &lt;em&gt;commitment&lt;/em&gt; is no more used in the description of the planning event.
The team now provides a &lt;strong&gt;forecast&lt;/strong&gt; which stories shall be realized until the end of the sprint.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This change was necessary because people - especially command and control responsible - did not read the official definition of commitment - Oxford Dictionary -.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph text-center&#34;&gt;
&lt;p&gt;&lt;em&gt;The state or quality of being dedicated to a cause, an activity.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The second big innovation was the introduction of five Scrum values: Commitment, Focus, Openness, Respect, and Courage.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I welcome the focus on values, principles and core behaviors over detailed checklists and rules.
Please also read again the &lt;a href=&#34;http://agilemanifesto.org/principles.html&#34;&gt;twelve principles&lt;/a&gt; of the agile manifesto.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_links&#34;&gt;Links&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist bibliography&#34;&gt;
&lt;ul class=&#34;bibliography&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;scrum-guide-2011&#34;&gt;&lt;/a&gt;[1] &lt;a href=&#34;../../2016/the-version-of-the-scrum-guide-2011/&#34;&gt;Scrum Guide 2011&lt;/a&gt;.
Marcel Baumann. 2016.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id=&#34;what-does-scrum-master&#34;&gt;&lt;/a&gt;[2] &lt;a href=&#34;../../2017/what-does-a-scrum-master/&#34;&gt;What Does a Scrum Master?&lt;/a&gt;.
Marcel Baumann. 2017.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: One Way to Improve Your Scrum Approach</title>
      <link>https://blog.tangly.net/blog/2018/one-way-to-improve-your-scrum-approach/</link>
      <pubDate>Wed, 03 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2018/one-way-to-improve-your-scrum-approach/</guid>
      <description>
        
        
        &lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2018-01-02-head.jpg&#34; alt=&#34;2018 01 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You work using agile approaches.
Your collaborators are trained how to use agile approaches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Techniques such as &lt;a href=&#34;https://en.wikipedia.org/wiki/Test-driven_development&#34;&gt;test-driven development&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_integration&#34;&gt;continuous integration&lt;/a&gt;
or clean code are regularly practiced.
Your teams reduce their technical debt and deliver regularly stable product increments.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now you are looking for the next improvement.
How can your team improve product and increase customer value?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It is time for a fresh view.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Perform an agile assessment with an external expert from another company or department.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_effort&#34;&gt;Effort&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You want to take a fresh view on your process and practices.
The external person shall provide hints that she observed in your team and how other groups solved similar problems.
The assessment lasts approximately 2 days per team, including the finding workshop with the team members, Scrum Master, and Product Owner.
This workshop has around half a day duration.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_approach&#34;&gt;Approach&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Scrum Assessment speeds up your Scrum mastery and lets you collect low-hanging improvements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Do you already work with Scrum or Scrum/Kanban and want to know where you stand?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do you get the benefits that are possible with Scrum?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Where do you deviate from the Scrum theory and what are the consequences for you?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Are your structures and practices for coordinating dependent teams effective, meaning scale agile?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What potential for improvement do you have?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Which measures make sense, so you can benefit more from Scrum?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Could you introduce agile techniques to increase the quality and to enhance outcomes?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We work on these themes in the &lt;em&gt;Scrum Assessment&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We analyze your Scrum implementation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We collect feedback through questionnaires and observation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We assess a single team or the whole development organization.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We evaluate in comparison with other companies and make suggestions for improvement.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_action&#34;&gt;Action&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We typically proceed as follows for the analysis:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Record Scrum meetings – sprint planning, sprint review, sprint retrospective, daily scrum, if necessary backlog refinement –.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Observe how the team members work during the sprint, to better understand the dynamics in your team.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Analyse the vision, roadmap, release plan, product backlog, and impediment list together with the product owner.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Interview product owners, scrum masters, selected developers and selected stakeholders.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Review the structures, processes and practices, (e.g., Scrum of Scrums, Portfolio Kanban) used to coordinate dependent teams.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;After this analysis, we do a debriefing in a half-day workshop.
We present our observations, conclusions and recommendations.
The Scrum team uses our findings to calibrate and adapt their agile transformation journey.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Through the workshop approach, we tailor the recommendations together with the team members to specific needs.
We can clarify any ambiguities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Upon request, we will also prepare a written report.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Why is it so Cool to Develop with Java?</title>
      <link>https://blog.tangly.net/blog/2018/why-is-it-so-cool-to-develop-with-java/</link>
      <pubDate>Tue, 02 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2018/why-is-it-so-cool-to-develop-with-java/</guid>
      <description>
        
        
        &lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2018-01-01-head.jpg&#34; alt=&#34;2018 01 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Why is it so cool to develop software using Java, a modern IDE and agile tools?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Because the environment empowers you and incredibly speed-up your development outcomes.
In seconds, you know if the next code increment adds value to your product.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Test driven development and static quality tools are integrated in your IDE.
Each time you check some code into your Git repository, all configured checks shall be executed before allowing the commit.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Liberated your team works adding functions and no more spend unaccounted hours in setting up infrastructure.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This trend is propagating to other technology stacks such as Python or C#, but less for PHP or Javascript/NodeJS worlds.
I still experience higher maturity in the Java toolchain.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Below, our current set of techniques and tools to multiply our results and bring earlier products to your customers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_java_quality&#34;&gt;Java Quality&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_solution_quality&#34;&gt;Solution Quality&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The most efficient approaches to improving the intrinsic quality of your software solution are&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Use Pair Programming&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Write regularly together source code.
Decide that all complex code parts shall always be developed through pair programming.
If you feel adventurous, give a try to mob programming.
Pair Programmers learn:&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To perform a form of continuous review.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To provide a measurable increase of quality.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To evaluate more options than solo programmers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To smooth the low points of your partner and level-up the high points.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To produce simpler solutions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Use Refactoring&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Before pushing your code to the Git repository, always take a look and refactor your code.
You are a craftsman and shall be proud of your result,&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Use Java 8 Lambdas and Streams&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Actual Java code builds on lambda expressions and stream constructs.
Your for loops are replaced by stream pipeline, your algorithms extensively use lambdas.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Use Java 9 Modules&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;It is finally possible to clearly define public interfaces of a whole software component.
Configure the dependencies to other libraries and identify specific modules as privileged participants.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Do not write Java code as it was done last millennium.
Use the actual constructs to write solid and resilient code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Pairs complete a task in 60% of time taken by a solo programmer.
So two people are almost but not quite twice as fast.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Programmers working in pairs produce higher-quality output.
Teams with high scores in stability and throughput spend 44% more time on new work.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;No better way to spread learning in a team!&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_code_quality&#34;&gt;Code Quality&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The most efficient tools to detect glitches or legacy constructs in your code are&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;SonarLint&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The plugin for your favorite IDE provides all the SonarCube checkers to apply on your source code.
Purify it before pushing it into the continuous build pipeline.
The plugin supports download of tailored rules from your company SonarCube instance.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;SpotBugs&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The successor of the wildly popular FindBugs tool can be integrated in your build pipeline to improve the odds of correctness.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;PMD&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Is another tool to automatically detect potential quality problems.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;IntelliJ IDEA build-in Checks&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;You are lazy and do not want to use additional tools.
Please use at least the build-in checkers of IntelliJ IDEA to improve your code.
It is very unprofessional to have equality problems or boolean condition errors in modern code.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_test_quality&#34;&gt;Test Quality&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_test_driven_development_tdd&#34;&gt;Test Driven Development - TDD&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are serious about development quality code.
So you are working with the test driven approach TDD and need to write unit tests.
Each time you write some code, you go through the loop &amp;#34;red - green - refactor - commit&amp;#34;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Junit 5&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;is the standard and best unit test framework for Java solutions.
The newest version supports lambdas is a pleasure to use.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;AssertJ&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;enables the writing of legible assert statements in your unit tests.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Mockito&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Tests must be lightning fast, thousands of unit tests shall run in a few seconds.
Remove all dependencies to external components from your source code, mock these elements with Mockito.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Hamcrest&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Your test conditions are complex.
You want to have a legible code, start using hamcrest to write clear assertions in your tests.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Please never access a database or a file system when running unit tests.
If you low-level tests with files, use an
&lt;a href=&#34;https://github.com/google/jimfs&#34;&gt;in-memory file system mock&lt;/a&gt;.
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Each time an error is found in productive code, write first a test to reproduce it, then correct the error.
This approach guarantees the same error will never again occur.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_acceptance_test_driven_development_atdd&#34;&gt;Acceptance Test Driven Development - ATDD&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are serious about delivering the functions your customer needs.
Each story you implement has acceptance criteria.
These acceptance criteria define your requirements.
See &lt;a href=&#34;https://en.wikipedia.org/wiki/Specification_by_example&#34;&gt;specification by example&lt;/a&gt;.
Your acceptance tests document and validate these requirements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Cucumber&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Write your acceptance criteria and document your requirements in one step.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Remember stories are not requirements, they are work items.
Requirements are coded and documented in your acceptance tests.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_continuous_integration&#34;&gt;Continuous Integration&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Agile means reacting to all changes.
Lean means build-in quality.
Your continuous pipeline certifies after each change that your solution is correct and has the correct behavior.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Gradle&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Is the new standard for building your artifacts.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Jenkins&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Is the regular tool for a local build pipeline.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you have a choice, use cloud continuous integration for team activities.
Decide if you prefer the cloud approach – e.g., with TravisCI or Bitbucket Pipelines – or Jenkins within Docker for your local integration activities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A smooth running CI pipeline is a boost for team morale and motivation.
To know that your application compiles and runs through all your automated tests anytime is such a good feeling.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_continuous_delivery_and_deployment&#34;&gt;Continuous Delivery and Deployment&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Agile means to react fast the changes.
You need to deliver and deploy your new solution to your customers in minutes or hours.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Docker&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Virtual machines were a powerful construct, but they are slow and require a lot of resources.
Docker is the answer.
Start a testing instance in 300 milliseconds.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Tomcat and TomEE&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Embedded servers deployed in docker image in a matter of seconds.
Actual versions of Tomcat or TomEE support it.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;hsqldb&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;In memory database are lighting fast for integration and test staging areas.
Later move to a file-based database for the production area.
The database shall be a configuration of the delivery and not require a new compilation.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Google Cloud AppEngine&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;To deploy various integration environments&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_design_quality&#34;&gt;Design Quality&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Important decisions and overall structure shall be documented for new team members.
Architecture Decision Record: A lightweight approach to document architecture decisions using Markdown documents and traceability through the decision history.
UML: Sometimes I would like to draw some UML diagrams to explain a design solution.
I am currently using a textual tool to define such diagrams.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_development_quality&#34;&gt;Development Quality&lt;/h3&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Analog Board&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Nothing beats a big analog board in the team room as the ideal information radiator.
If you want your collocated to work effectively and solve problems as a team, you shall provide an analog board.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Trello, Stride, BitBucket, Hipchat and others Atlassian tools for distributed teams&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The first advice is to have a collocated team.
The productivity and performance gains are unachievable in a distributed environment.
We have splendid experience with Atlassian and Google App solutions to mitigate the drawback of distributed teams and establish a team work atmosphere.
But a collocated team still rocks.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;IntelliJ IDEA&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;This IDE is the choice for refactoring, powerful context suggestions, and efficient programming.
If you use Eclipse or Netbeans, try a friendly refactoring competition with an IDEA convert.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Git&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Stop using Subversion, CVS, TFS or other geriatric tools.
Agile development, efficient integration in delivery pipelines, and extensive refactoring require Git.
Migrate now to &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; and leave dreaded message &lt;em&gt;Tree conflict detected, please solve manually&lt;/em&gt; behind you.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These tools shall be used in the agile way.
You do not have long-lived branches in your source code management tool.
Either you have only short-lived local branches or better, you work against the trunk.
Complex branching strategies are just a waste for a lean practitioner.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I decided to collect all these hints in the same long post.
They belong together.
Every day you design a solution, you code it, test it, improve it and guarantee its quality.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These activities are tangled together to producing a product you are proud of.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And yes, I know about GitHub, Gitlab, Slack, Ant, Maven, Jetty, Amazon Cloud, AssertJ, Subversion, Eclipse, Netbeans and other good tools.
But I still prefer the ones above; I am convinced to be more productive with them.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. After years of neglect, a Jimfs 1.2 was released in January 2021 and published on maven central.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
  </channel>
</rss>
