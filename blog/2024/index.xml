<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2024 on tangly Components</title>
    <link>https://blog.tangly.net/blog/2024/</link>
    <description>Recent content in 2024 on tangly Components</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 20 May 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.tangly.net/blog/2024/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>I Love My Nerdy Job</title>
      <link>https://blog.tangly.net/blog/2024/i-love-my-nerdy-job/</link>
      <pubDate>Mon, 20 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/i-love-my-nerdy-job/</guid>
      <description>I am a computer science engineer. I love to solve problems and provide cool solutions to users [1].&#xA;I love my software development job. I am already sixty years old. I started programming before I was 20.&#xA;And I still tremendously love developing digital products and writing software applications.&#xA;My passion is tinkering with source code to have a maintainable and efficient solution. I love to work with other developers and to coach them to become better software engineers.</description>
    </item>
    <item>
      <title>Actor Model</title>
      <link>https://blog.tangly.net/blog/2024/actor-model/</link>
      <pubDate>Fri, 10 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/actor-model/</guid>
      <description>Concurrent programming has always been tricky. Accessing a shared state from multiple threads is a central problem, where hard-to-catch errors may easily appear.&#xA;Protected access to identified shared variables is easy to realize. Mechanisms to avoid deadlocks or starvation are cumbersome to implement and almost impossible to validate.&#xA;The need for concurrent programming has increased tremendously with the fact that all modern processors and many microcontrollers have multiple cores.</description>
    </item>
    <item>
      <title>How to Document Your Software Architecture</title>
      <link>https://blog.tangly.net/blog/2024/how-to-document-your-software-architecture/</link>
      <pubDate>Wed, 01 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/how-to-document-your-software-architecture/</guid>
      <description>You are creating the next digital software masterpiece.&#xA;How can you document your software architecture in a way that is useful for your team and stakeholders?&#xA;A software architecture document SAD is a document that describes the structure of a software solution.&#xA;It includes the architecture of its components, the relationships between those components, and the principles that guide its design.&#xA;The solution architecture document is typically used as a reference for designing, building, and maintaining a software system.</description>
    </item>
    <item>
      <title>Modern Java Rant</title>
      <link>https://blog.tangly.net/blog/2024/modern-java-rant/</link>
      <pubDate>Sat, 20 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/modern-java-rant/</guid>
      <description>The Java community releases a new version every six months. This is a good thing, it means that the language is evolving at a steady pace.&#xA;New language features are added in each release. Much effort is put into improving the performance of the JVM and solving small issues.&#xA;The community provides beta releases for developers to test and provide feedback during the six months before the next release. You have the possibility and time to migrate and test your code before the official release.</description>
    </item>
    <item>
      <title>Structure Your Concurrency</title>
      <link>https://blog.tangly.net/blog/2024/structure-your-concurrency/</link>
      <pubDate>Mon, 01 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/structure-your-concurrency/</guid>
      <description>Writing concurrent software is one of the greatest challenges for software developers [1, 2].&#xA;A professional software developer must understand the principles of concurrent programming and the tools available to write concurrent software.&#xA;Only concurrent applications can access all cores of modern multicore processors and provide the best performance.&#xA;Java thread model makes it a strong contender among concurrent languages, but multithreading has always been inherently tricky.&#xA;The introduction of virtual threads empowered Java to provide a unique and highly-optimized threading system that is also easy to understand.</description>
    </item>
    <item>
      <title>Asciidoc and Hugo Website Improvements</title>
      <link>https://blog.tangly.net/blog/2024/asciidoc-and-hugo-website-improvements/</link>
      <pubDate>Fri, 15 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/asciidoc-and-hugo-website-improvements/</guid>
      <description>The static website build tool Hugo is awesome.&#xA;The extensive built-in feature set of Hugo and the feature-rich typesetting that Asciidoc offers provide a blogging experience composed of easy content management and fun writing experience.&#xA;Source code highlighting and diagrams are extensively supported.&#xA;Hugo supports natively Asciidoc syntax. Asciidoc files are automatically compiled with Asciidoctor, so we do not need to configure anything. Have it installed and you are ready to go.</description>
    </item>
    <item>
      <title>Nice Statechart Diagrams</title>
      <link>https://blog.tangly.net/blog/2024/nice-statechart-diagrams/</link>
      <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/nice-statechart-diagrams/</guid>
      <description>What are statecharts, also called hierarchical state machines?&#xA;Put simply, a statechart is a beefed-up state machine [1] [2]. The syntax is formally defined in the UML standard.&#xA;The beefing up solves a lot of the problems that state machines have, especially state explosion that happens as state machines grow.&#xA;We explain below what statecharts are and how they are useful.&#xA;Statecharts offer a surprising array of benefits:&#xA;It is easier to understand a statechart than many other forms of code.</description>
    </item>
    <item>
      <title>Java Modules</title>
      <link>https://blog.tangly.net/blog/2024/java-modules/</link>
      <pubDate>Fri, 01 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/java-modules/</guid>
      <description>Java 9 introduces a new level of abstraction above packages, known as the Java Platform Module System JPMS, or Modules for short [1].&#xA;Modules emphasize at compilation time modern software engineering principles such as encapsulation, and modularity [2, 3, 4].&#xA;Java 9 was released in September 2017.&#xA;Most Java developers are still not using this powerful and elegant construct to modularize their applications.&#xA;Modules A module is a group of closely related Java packages and resources along with a new module descriptor file.</description>
    </item>
    <item>
      <title>How To Improve</title>
      <link>https://blog.tangly.net/blog/2024/how-to-improve/</link>
      <pubDate>Tue, 20 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/how-to-improve/</guid>
      <description>You attended a famous or a local technical school. You are the proud owner of a bachelor or a master degree in science.&#xA;You are a certified engineer.&#xA;You are now a full-time software developer. You write daily productive code with your colleagues in your current company.&#xA;Hopefully you studied software engineering at least as a minor.&#xA;How can you continuously improve in your profession?&#xA;How can you become proficient in the new features and possibilities of the technologies you use daily?</description>
    </item>
    <item>
      <title>The Quest for an Agile Company: Eight Years tangly llc</title>
      <link>https://blog.tangly.net/blog/2024/the-quest-for-an-agile-company-eight-years-tangly-llc/</link>
      <pubDate>Thu, 15 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/the-quest-for-an-agile-company-eight-years-tangly-llc/</guid>
      <description>We are an agile and software technology boutique.&#xA;We often work as Scrum masters, product owners and technical agile coaches. Regularly we are involved in the architecture and development of software products.&#xA;Our collaborators love to coaching, mentoring, and training.&#xA;We regularly work at the customer site. We also more and more often work online with our international customers.&#xA;How do you organize such a company?&#xA;How do collaborators work together?</description>
    </item>
    <item>
      <title>Advanced Streams</title>
      <link>https://blog.tangly.net/blog/2024/advanced-streams/</link>
      <pubDate>Sat, 10 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/advanced-streams/</guid>
      <description>The Java Stream API is a powerful and simple to understand set of tools for processing sequences of elements. The standard collections were retrofitted with the stream() method, which allows us to convert any collection to a stream.&#xA;Modern Java code has almost no loops and conditional statements. It relies on the Stream API and the functional programming style to implement algorithms.&#xA;When used properly, it allows us to reduce a huge amount of boilerplate code, create more readable programs, and improve productivity [1, 2].</description>
    </item>
    <item>
      <title>EclipseStore</title>
      <link>https://blog.tangly.net/blog/2024/eclipsestore/</link>
      <pubDate>Thu, 25 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/eclipsestore/</guid>
      <description>Eclipse Store [1] is a Java-native persistence layer built for cloud-native microservices and serverless systems. EclipseStore is the only data storage solution that uses the native Java object model instead of database-specific structure or format.&#xA;It enables storing any Java object graph of any size and complexity transaction-safe into any binary data storage such as plain files, persistent volumes, or cloud object storage.&#xA;Snapshots of the object graph differences are regularly saved to the storage.</description>
    </item>
    <item>
      <title>Data Classes, Sealed Types and Pattern Matching</title>
      <link>https://blog.tangly.net/blog/2024/data-classes-sealed-types-and-pattern-matching/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/blog/2024/data-classes-sealed-types-and-pattern-matching/</guid>
      <description>Records, sealed types, enumerations are the key language features for Algebraic Data Types.&#xA;The features have been available since Java 17.&#xA;Latter JDK releases provide additional capabilities and syntactic sugar.&#xA;Based on the features of JDK 22, we are still missing with constructors for records and primitive support for pattern matching [1].&#xA;Pattern matching capabilities empower the developer to implement complex algorithms in a compact and legible way.&#xA;Patterns such as visitor pattern are obsolete.</description>
    </item>
  </channel>
</rss>
