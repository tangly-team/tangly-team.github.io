<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tangly Components – 2016</title>
    <link>https://blog.tangly.net/blog/2016/</link>
    <description>Recent content in 2016 on tangly Components</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 02 Dec 2016 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://blog.tangly.net/blog/2016/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Blog: What you do NOT need to do in Scrum!</title>
      <link>https://blog.tangly.net/blog/2016/what-you-do-not-need-to-do-in-scrum/</link>
      <pubDate>Fri, 02 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2016/what-you-do-not-need-to-do-in-scrum/</guid>
      <description>
        
        
        &lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2016-12-01-head.jpg&#34; alt=&#34;2016 12 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I often hear discussions asking who is performing the &lt;em&gt;traditional&lt;/em&gt; product leader tasks in Scrum.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is in general an excuse to state that &lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt; alone cannot work and classical product leaders are still needed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I encourage you to classify these so-called regular product manager activities.
Often these jobs are plain reporting progress to various boards and micromanaging the development team.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I truly acknowledge the importance and value of a line manager caring for his collaborators and nurturing the success of the products they develop.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But to be honest, these activities are implemented by good people and technical leaders and almost never by some product managers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Below a list of tasks you do &lt;strong&gt;NOT&lt;/strong&gt; need anymore to do in &lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Make commitments on behalf of the team about how much they can get done by a certain date or estimate effort for the team.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Coerce the team that the commitments made on their behalf are attainable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Coerce the team to change their estimates.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Give a direction to the team on how to implement the work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Monitor the team’s progress to make sure they stay on schedule.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Step in and determine the solution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Conduct weekly status update and face to face meetings with the team to surface issues and provide a direction.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Provide motivation and push the team to work harder than they might want to use carrots and sticks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Decide task assignments among the team members and follow up on tasks to verify completion.
Force them to work during weekends.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be responsible for the team doing the right thing at the right time in the right way.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update Gantt charts for the iteration and release planning.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finding out those requirements means to explain to team members what they should implement.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Review the documents and code to guaranty quality.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Explain upper management why the product is late and why you need additional resources.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Explain upper management why you cannot transfer a team member to another product.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Attend weekly progress and escalation meetings to explain in detail the status of your product.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Define the priority of the next activities.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock center&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2016-12-01-scrum-anti-patterns.jpg&#34; alt=&#34;2016 12 01 scrum anti patterns&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The above Scrum anti-patterns picture shows more common misunderstandings about the Scrum framework.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As a Scrum practitioner, you should regularly read material, attend formal training, and seek advanced certifications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You as Scrum master or agile product manager have to perform important and useful tasks:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Help to remove impediments to increase the velocity of a team.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Coach the team to implement Scrum and reflect on their activities.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/PDCA&#34;&gt;Plan-Do-Check-Adapt&lt;/a&gt; &lt;em&gt;Plan Do Check Act&lt;/em&gt; principle is built into Scrum with retrospectives and sprint reviews.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Coach product owner to deliver a groomed and refined backlog.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inform and support all product’s stakeholders.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you reflect on these two lists, it becomes obvious that the first list describes malfunctions and the second one describes mechanisms how to improve continuously - lean principles -.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Jeff_Sutherland&#34;&gt;Jeff Sutherland&lt;/a&gt; gives some interesting insights about the Scrum master&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The Scrum master enforces Scrum practices &lt;em&gt;Coaching rather than command and control&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Scrum master effort is&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Few problems: for a small team 10%, for a large team, 50% of your working time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Many problems: for a small team 50%, for a large team, 100% of your working time until the team reaches flow status&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Scrum master is a change agent and supports the organization to become more agile.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I experimented with the Scrum master being part of the team, or Scrum master working for multiple teams.
Experience has shown us that the full-time Scrum master is more effective.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And the &lt;a href=&#34;https://less.works/&#34;&gt;LeSS&lt;/a&gt; framework has a clear rule about product managers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph text-center&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://less.works/less/adoption/getting-started.html&#34;&gt;Keep product managers away from the teams!&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_remarks&#34;&gt;Remarks&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For all &lt;a href=&#34;https://www.pmi.org/&#34;&gt;Project Management Institute&lt;/a&gt; &lt;em&gt;PMI&lt;/em&gt; fans, the institute acquired &lt;em&gt;Disciplined Agile Delivery&lt;/em&gt; &lt;em&gt;DAD&lt;/em&gt; in 2019.
The PMI-ACP is working on integrating agile approaches in the official PMI approach.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;An official definition of Scrum and the responsibilities of the team, product owner and Scrum master are documented in &lt;a href=&#34;https://www.scrumguides.org/&#34;&gt;Scrum Guide&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The agile alliance provides a &lt;a href=&#34;https://www.agilealliance.org/agile101/agile-glossary/&#34;&gt;glossary of agile terms&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Found a Limited Liability Company in Switzerland</title>
      <link>https://blog.tangly.net/blog/2016/found-a-limited-liability-company-in-switzerland/</link>
      <pubDate>Tue, 15 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2016/found-a-limited-liability-company-in-switzerland/</guid>
      <description>
        
        
        &lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2016-11-02-head.jpg&#34; alt=&#34;2016 11 02 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I left the company I founded 20 years ago and needed a new home to work and have access to social insurance.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The best legal construct in Switzerland and in Europe is to establish a limited liability company.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You need such a construct in Switzerland to work as a software specialist.
The legal Swiss institutions, such as taxes, social insurances, and accident insurances are challenging and almost unfair with freelancers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I had to found a limited liability company with a capital of CHF 20&amp;#39;000.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here are the steps for the impatient.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_foundation&#34;&gt;Foundation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.swissregistration.ch/&#34;&gt;Swissregistration&lt;/a&gt; wrote the statutes for the company and performed the foundation with certifying notary for CHF 780.
Six hours after the first phone call, they sent me the electronic documents.
The next day, the documents were delivered in paper form.
It was really impressive.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Before you can find a company, you must deposit the capital into a special account.
I choose &lt;a href=&#34;https://www.postfinance.ch/&#34;&gt;Postfinance&lt;/a&gt;.
It is a well-known Swiss institute and their fee is only CHF 145.
They insisted I met one of their collaborators to fill their forms.
They probably never heard about web forms.
I had bad luck.
They needed three weeks to create the account and send payment confirmation.
They were aware of the problem and very helpful, but it still took three weeks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upon reception of the payment confirmation, I sent all signed documents to &lt;a href=&#34;https://www.swissregistration.ch/&#34;&gt;Swissregistration&lt;/a&gt;.
The next day the company was founded, and I received the official paper documents a few hours later.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I went to &lt;a href=&#34;https://www.zg.ch/behoerden/volkswirtschaftsdirektion/handelsregisteramt&#34;&gt;Handelsregisteramt Zug&lt;/a&gt; to register the company.
They were very nice but told me they had a lot of work.
Two weeks later, they finally registered the company and sent me the papers and an invoice for CHF 780.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A few phone calls later &lt;a href=&#34;https://www.postfinance.ch/&#34;&gt;Postfinance&lt;/a&gt; converted the account into a regular account.
They give me access to the founding capital minus their fee&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;During the waiting time, I started to organise for the mandatory insurances you need in Switzerland&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;BVG – the best offer was from &lt;a href=&#34;https://www.axa.ch/&#34;&gt;Axa&lt;/a&gt;
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.
They also help me because the company CRIF AG wrongly classified the activities of the new company.
They never contacted me and their NOGA classification has a huge impact on my costs.
They are arrogant morons.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BU/NBU – the best offer was from &lt;a href=&#34;https://www.baloise.ch/&#34;&gt;Basler Versicherung&lt;/a&gt;
When starting a software startup I suggest not concluding any other insurances&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The government-controlled social insurance contracts can only be initiated once the company is registered in the Swiss company registry.
The AHV center needed more than two weeks to confirm my registration.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_lessons_learnt&#34;&gt;Lessons Learnt&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The costs of founding my limited company in Switzerland are CHF 1&amp;#39;705 or 8.5% of the company’s capital.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The state-owned companies and state services are very slow; in my case, 20 times slower than the private ones.
On the bright side, their collaborators are very supportive.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Public or big private companies, such as insurance firms, are incapable of sending documents or invoices electronically.
They only use paper mail.
Upon inquiry, their collaborators told me their processes are incapable of handling modern communication ways.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upon foundation, you get pseudo-official letters from various companies to sell dubious services.
Just throw them away.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The industry development office of Kanton Zug has no clues about start-up companies; the ones in Zürich and Lucerne seem better.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph text-center&#34;&gt;
&lt;p&gt;&lt;em&gt;Now we are ready to create great products with our customers&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Please leave a comment if you know a better or less expensive way to found a Swiss liability company.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;(the &lt;a href=&#34;https://www.linkedin.com/pulse/found-limited-liability-company-switzerland-marcel-baumann&#34;&gt;post&lt;/a&gt; was also published on LinkedIn)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. The company was called Axa Winthertur.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: What is an Agile Company?</title>
      <link>https://blog.tangly.net/blog/2016/what-is-an-agile-company/</link>
      <pubDate>Sun, 13 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2016/what-is-an-agile-company/</guid>
      <description>
        
        
        &lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2016-11-01-head.jpg&#34; alt=&#34;2016 11 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Lately, people often ask me what is an agile company.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;They have an understanding of agile software development techniques such as &lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Lean_software_development&#34;&gt;Lean Software Development&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Kanban&#34;&gt;Kanban&lt;/a&gt;, &lt;a href=&#34;http://www.extremeprogramming.org/&#34;&gt;eXtreme Programming&lt;/a&gt; but no clue how a company could be agile.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What does it mean to be an agile organization?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One way to approach this theme is to implement concepts of the above-mentioned agile approaches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These are the pillars for iterative incremental improvements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_scrum_pillars&#34;&gt;Scrum Pillars&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Transparency&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;You trust all collaborators to provide their best when working on the product.
They need full access to all relevant information: quality, progress, budget, people and financial data.
They use the data to select the best alternatives to reach the company’s goals.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Inspection&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;You cherish a failure culture because inspections will find weak points.
You need a culture where people are never blamed.
One consequence is that you eliminate management of objectives and bonuses in your company.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Adaptation&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;You are ready to learn better approaches and truly believe there is a better solution.
Processes change regularly bottom-up, company’s budget can only be a rolling indicative budget, and planning has to be &lt;em&gt;continuously&lt;/em&gt; updated.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can also pursue desirable attitudes or values of agile persons.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_scrum_values&#34;&gt;Scrum Values&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Commitment&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;As an employee you want to win, you are engaged.
Every manager truly believes you work best to achieve the goals.
If not, this manager made a mistake by hiring or keeping you.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Courage&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;You are ready to say “I am wrong” because being wrong opens the door for improvement.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Focus&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;You daily optimise the customers’ value and thrive for excellence.
As a developer, you do not work on projects, you work on excellent products.
You provide value to your customers.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Openness&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;You seek better ideas and ways of doing.
Openness requires transparency and respect.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Respect&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;You truly respect customers, team members, collaborators, and people.
In your team, I will not hear any disrespectful comments about people.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_modern_agile&#34;&gt;Modern Agile&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;https://modernagile.org/&#34;&gt;modern agile movement&lt;/a&gt; defines guiding principles.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Make people awesome&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Dedicated collaborators want to give their best.
Give them a purpose, a goal, empower them and let them climb the mountain.
Thriving people need purpose, excellence and autonomy.
They are happier, healthier and more productive.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Deliver value continuously&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Maintain sustainable pace and stability, all divisions of the organisation should focus on customer value.
At the end of the day, successful products are the only reason you get your paycheck.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Make safety a prerequisite&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;People do their best in their daily work, you believe in McGregor Y theory.
Trust them and support them to become excellent.
You shall develop self-awareness to increase safety.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Experiment and learn rapidly&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;You make mistakes, you learn and increase continuously the delivered value.
You have a learning culture, you inspect and adapt.
You can react to new opportunities faster than competitors.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_self_assessment&#34;&gt;Self Assessment&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2016-10-01-transformation-values.jpg&#34; alt=&#34;2016 10 01 transformation values&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The above concepts are comprehensible.
How do you know if you are moving in the right direction?
A few concrete tests help you find out if you are an agile department or company.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Be agile&lt;/em&gt; instead of &lt;em&gt;do agile&lt;/em&gt;.
Practice the above attitudes and do not just follow a checklist&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nobody micromanages in your company&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Feel accountable&lt;/em&gt; instead of &lt;em&gt;being accountable&lt;/em&gt;.
You want to improve, and your company as a natural part of the daily work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Compliment every collaborator&lt;/em&gt; you are working with at least once a week instead of &lt;em&gt;evaluating weaknesses and criticising people&lt;/em&gt;.
Do you lead by example?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No management by objectives - MBO - or bonuses are established in your company&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Every collaborator has access to all company data, every collaborator can request process and tool changes.
We favour &lt;em&gt;Individuals and interactions over tools and processes&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You want to be excellent in your work.
You have a purpose and autonomy in your daily work&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Team members take the decision to hire or to fire collaborators, not the department responsible or the human resources group.
Think about collaborators selecting their leaders, about managers being servants, about information available to all collaborators&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Can you say these essential sentences at least three times a week?&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;the most important one word, &lt;em&gt;Sorry.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;the most important two words, &lt;em&gt;Thank you.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;the most important three words, &lt;em&gt;I was wrong.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;and the most important four words, &lt;em&gt;Can I help you?&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I truly believe that we all want a fulfilling job which improves our world.
I cannot understand other reasons to spend 40 hours and more per week for something less valuable.
Take the above principles and apply them to your daily work.
There are universal values to establish a working atmosphere you are proud of.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;I agree with all of you to desire a fulfilling job is only true if you earn enough money to pay your monthly bills.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_food_for_thoughts&#34;&gt;Food for Thoughts&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These ideas are not new.
You can delve in empirical evidence and discussions in books written by business management professors, CEO, and passionate agile advocates.
Below a list of mind openers (available as Amazon ebooks):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;hdlist&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Reinventing organisations
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;A guide to creating organisations inspired by the next stage of human consciousness by Frederic Laloux,&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Accelerate
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;Building strategy agility for a fast moving world by John P. Kotter.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Beyond budgeting
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;How managers can break free from the annual performance trap;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
The Leader’s Dilemma
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;How to build an empowered and adaptive organisation without losing control; both books by Jeremy Hope,&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Holacracy
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;the new management system for a rapidly changing world by Brian J. Robertson,&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Deliver Happiness
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;A path to profits, passion and purpose by Tony Hsieh.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
The Lean Startup
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;How today’s entrepreneurs use continuous innovation to create radically successful businesses by Eric Ries,&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Lean Novels
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;The Lean Manager&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;A novel of lean transformation;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Lead with Respect&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;A novel of lean practice;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;The Gold Mine&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;A novel of lean turnaround; all three books by Freddy Balle,&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
The Lean Mindset
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;Ask the right questions by Mary Poppendieck,&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Social Intelligence
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;The new science of human relationships, by Daniel Goleman&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Management 3.0
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;Leading agile developers, developing agile leaders by Jurgen Appelo,&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
The Fifth Discipline
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;The art and practice of the learning organisation by Peter M. Senge,&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Fearless Change
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;Patterns for introducing new ideas; More Fearless Change: Strategies for making your ideas happen; both books by Linda Rising,&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Excellence Novels
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Build to Last&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Successful habits of visionary companies;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;Good to Great&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Why some companies make the leap and others don’t;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;How the Mighty Fall&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;And why some companies never give in; all three books by Jim Collins,&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;hdlist1&#34;&gt;
Google re:work
&lt;/td&gt;
&lt;td class=&#34;hdlist2&#34;&gt;
&lt;p&gt;Google blog about work environment and work techniques&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;(this &lt;a href=&#34;https://www.linkedin.com/pulse/what-agile-company-marcel-baumann&#34;&gt;post&lt;/a&gt; was also published on LinkedIn)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Agile Trends Switzerland 2013</title>
      <link>https://blog.tangly.net/blog/2016/agile-trends-switzerland-2013/</link>
      <pubDate>Wed, 12 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2016/agile-trends-switzerland-2013/</guid>
      <description>
        
        
        &lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2016-10-01-head.jpg&#34; alt=&#34;2016 10 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What are the main hurdles to introducing agile approaches in Swiss companies?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Introducing agile company-wide is a cultural change process.
Such a change takes time and sometimes hurts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Without the commitment of senior management, the initiative will fail.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Doubt that lean or agile works for big projects, doubt you can convince your collaborators and middle management, doubt your customers agree with lean,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the end, what matters are collaborator purpose, customer satisfaction, business value.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://swissq.it/en/&#34;&gt;SwissQ&lt;/a&gt; has published a &amp;#34;SwissQ Agile Trends &amp;amp; Benchmarks Switzerland 2013&amp;#34;.
The study can be downloaded as PDF from their website.
See &lt;a href=&#34;../../2016/agile-trends-switzerland-2012&#34;&gt;Agile Trends in Switzerland 2012&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Below some findings of the study.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_major_hurdles_when_introducing_agile_approaches&#34;&gt;Major Hurdles When Introducing Agile Approaches&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The number left is the value for 2013.
The number in parentheses is the value found in the study for year 2012.
Bold items are new in the 2013 study and have no 2012 values.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;72% (95%): Capabilities to handle organizational changes and the culture&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;53% (-%): Difficulty how to handle the loss of control seen from a management perspective&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;28% (37%): Availability of skilled collaborators in the area of agile approaches&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;25% (34%): Projects are too big or too complex&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;23% (39%): Overall resistance against changes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;21% (-%): Scalability&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;21% (28%): Missing support of senior management&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;14% (25%): Company wide introduction of agile methods, doubts agile approaches scale&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;14% (31%): Resistance for the internal or external customer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;11% (23%): No resources or time for sustainable changes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;4% ( 9%): Costs reasons&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The trend is a clear move toward agile approaches.
Companies seem less reluctant to introduce agile approaches.
Major opponents such as senior managers or internal and external customers more and more acknowledge the success of agile approaches.
The two first identified hurdles still reflect the difficulty of changes at company level.
They are also the main reasons why a Scrum introduction fails in Swiss companies for my experience.
Too often, companies revert to some Waterfall/Hermes process or worst to a so-called internal adhoc method.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We wrote in previous blogs that introducing Scrum in the development department or in the whole company is a
&lt;a href=&#34;http://en.wikipedia.org/wiki/Change_management&#34;&gt;change process&lt;/a&gt;.
The coaches should be trained in change management and have experiences with resistance to changes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Scrum Master is of tremendous importance.
You need a skilled and enthusiastic Scrum Master; avoid Scrum Administrator.
Ken and Jeff have a clear idea who is in charge of this.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Scrum Master serves the organization in several ways, including:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Leading&lt;/strong&gt; and &lt;strong&gt;coaching&lt;/strong&gt; the organization in its Scrum adoption;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Planning&lt;/strong&gt; Scrum implementations within the organization;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Helping employees and stakeholders understand and enact Scrum and empirical product development;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Causing change that increases the productivity of the Scrum Team; and,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Working&lt;/strong&gt; with other Scrum Masters to increase the effectiveness of how to apply Scrum in the organization.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Scrum Master is a main driver for the introduction of Scrum in all departments and levels in the company.
He indeed needs senior management support, but the Scrum Master daily job is to spread Scrum in the company.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_swiss_it_cio_agenda_2013&#34;&gt;Swiss IT CIO Agenda 2013&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Computerworld Switzerland has published an article about the main reasons why projects are late or cancelled in Switzerland in the April 2013 &lt;em&gt;CIO Agenda&lt;/em&gt; edition.
The study uses data from Computerworld and Experteer.
As an excerpt, I gave you the four major identified failure reasons.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Changes during the product (62% Computer, 48% Experteer) &lt;em&gt;Agile and Scrum welcome changes in the product.
It is one of the four mantras of the Agile Manifesto.
All agile processes are optimised to support changes.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unclear product definition forms the business stakeholders (50% Computer, 43% Experteer) &lt;em&gt;Scrum requests a clearly stated vision, roadmap and story map of the product.&lt;/em&gt; &lt;em&gt;The Scrum board is a radiator to communicate the product vision, goals, and motivations to all interested parties.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Insufficient product management and controlling (40 % of Computer, 4847 Experteer) &lt;em&gt;Scrum team, product owner, and Scrum master have clear responsibilities for product management.&lt;/em&gt; &lt;em&gt;At the end of each sprint, we have an objective and explicit control point.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Insufficient communication between involved persons (36% Computer, 45% Experteer) &lt;em&gt;Scrum framework enforces clear, transparent and regular communication within the team and with all stakeholders.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In one sentence, be agile, use &lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt; and &lt;a href=&#34;http://www.extremeprogramming.org/&#34;&gt;eXtreme Programming&lt;/a&gt; and the major four above problems are handled in a professional and consistent way.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Agile Trends Switzerland 2012</title>
      <link>https://blog.tangly.net/blog/2016/agile-trends-switzerland-2012/</link>
      <pubDate>Wed, 07 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2016/agile-trends-switzerland-2012/</guid>
      <description>
        
        
        &lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2016-09-01-head.jpg&#34; alt=&#34;2016 09 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What are the main hurdles to introducing agile approaches in Swiss companies?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Introducing agile company-wide is a cultural change process.Such a change takes time and sometimes hurts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Without the commitment of senior management, the initiative will fail.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Doubt that lean or agile works, doubt you can find agile experts, doubt that your projects can be realised with agile approaches.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the end, what matters are collaborator purpose, customer satisfaction, business value.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://swissq.it/en/&#34;&gt;SwissQ&lt;/a&gt; has published a &lt;em&gt;SwissQ Agile Trends &amp;amp; Benchmark Switzerland 2012&lt;/em&gt;.
The study can be downloaded as PDF from their website.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Below some findings of the study.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_major_hurdles_when_introducing_agile_approaches&#34;&gt;Major Hurdles When Introducing Agile Approaches&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;95%: Capabilities to handle organizational changes and the culture&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;39%: Overall resistance against changes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;37%: Availability of skilled collaborators in the area of agile approaches&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;34%: Projects are too big or too complex&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;31%: Resistance for the internal or external customer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;28%: Missing support of senior management&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;25%: Doubts that agile approaches do scale&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;23%: No resources or time for sustainable changes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;9%: Costs reasons&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We wrote on blogs that introducing Scrum in the development department or in the whole company is a
&lt;a href=&#34;http://en.wikipedia.org/wiki/Change_management&#34;&gt;change process&lt;/a&gt;.
The coaches should be trained in change management and have experiences with resistance to changes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The above points in italics are all related to changing processes.
You can handle two thirds of the hurdles with adequate change management training and a clear change product definition.
Do not try to introduce Scrum at company level without such an approach.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_the_main_reasons_why_agile_projects_are_cancelled&#34;&gt;The main Reasons Why Agile Projects are Cancelled&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;52%: Missing experience with agile approaches&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;45%: Company culture clashes with agile principles&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;41%: External pressure to use traditional approaches (Agile 51%, Waterfall 40%, Iterative 22%, RUP 16%, and HERMES 12%)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The used agile approaches are:&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt; 84.5%,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Kanban&#34;&gt;Kanban&lt;/a&gt; 16.9%,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Own Approach 15.5%,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.extremeprogramming.org/&#34;&gt;eXtreme Programming&lt;/a&gt; 14.1%,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Agile_Unified_Process&#34;&gt;Agile Unified Process&lt;/a&gt; 11.3%,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Others 9.9%,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Scrumban&#34;&gt;Scrumban&lt;/a&gt; 8.5%,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Feature-driven_development&#34;&gt;Feature Driven Development&lt;/a&gt; FDD 0%&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;38%: Missing support from senior management&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;37%: Missing or insufficient training and coaching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;35%: Missing communication between departments&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;23%: Team does not want to learn a new approach&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We wrote in previous &lt;a href=&#34;../../2016/scrum-master-is-a-full-time-role&#34;&gt;Scrum master is a full time job&lt;/a&gt; that the Scrum Master is of tremendous importance.
You need a skilled and enthusiastic Scrum Master; avoid Scrum Administrator.
The new version of the Scrum guide clearly stated who is responsible for the introduction of the Scrum approach in the company?
Often people state that the management should spread Scrum in the company. Ken and Jeff have a clear idea who is in charge of this.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Scrum Master serves the organization in several ways, including:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Leading&lt;/strong&gt; and &lt;strong&gt;coaching&lt;/strong&gt; the organization in its Scrum adoption;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Planning&lt;/strong&gt; Scrum implementations within the organization;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Helping employees and stakeholders understand and enact Scrum and empirical product development;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Causing change that increases the productivity of the Scrum Team; and,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Working&lt;/strong&gt; with other Scrum Masters to increase the effectiveness of how you apply Scrum in the organization.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So the Scrum Master is a main driver for the introduction of Scrum in all departments and levels in the company.
He needs senior management support, but the Scrum Master’s daily job is to spread Scrum in the company.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Git Branches for the Impatient</title>
      <link>https://blog.tangly.net/blog/2016/git-branches-for-the-impatient/</link>
      <pubDate>Thu, 21 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2016/git-branches-for-the-impatient/</guid>
      <description>
        
        
        &lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2016-07-01-head.png&#34; alt=&#34;2016 07 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are working in a small mostly collocated development team.
Sometimes a team member works from a remote location.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You have one git repository accessible to all team members.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This repository is used to share source code and documentation artifacts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You use the actual industrial standard for version control systems is &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You decided to use branches to implement new features or fix errors instead of using &lt;a href=&#34;https://trunkbaseddevelopment.com/&#34;&gt;Trunk-Based Development&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here the cookbook to create, edit, merge and delete local and remote branches in &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; (version 2.x).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Git branches have two important qualities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A branch is like an idea.
Once you implemented the idea, feature or fix, you just merge back to trunk and delete the branch.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multiple branches coexist in a repository.
Ideally branches should be short-lived to avoid waste.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The history of the branch commits is still visible upon deletion of the branch.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In an agile working setup, a branch should be merged before the end of the sprint.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All stories should be completed inside a sprint time slot.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;You should use meaningful names for your branch name and associated commit messages.&lt;/em&gt;
&lt;em&gt;Put the ticket number into the branch name and messages for future searches.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A lot of servers support keywords such as &lt;em&gt;fix #42&lt;/em&gt; to automatically close ticket 42.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The described approach is optimal for small teams.
The approach is compatible with pull requests if you introduce such a workflow later.
You do not need to pull requests when you are working collocated.
I prefer pair programming and pair check-in sessions against the trunk.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For a short introduction to how to start using Git in software projects, see the blog
&lt;a href=&#34;../../2017/git-local-repositories-for-the-impatient/&#34;&gt;Git Local Repositories for the Impatient&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_create_the_branch&#34;&gt;Create the Branch&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You get a list of branches with:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git branch                                      &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
git fetch                                       &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;List of all branches in the local repository.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Retrieve all changes from the remote repository including new branches and store them in the local repository.
Your working directory is not modified.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Create new branch feat-#42 locally.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git checkout -b feat-#&lt;/span&gt;42                        &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git checkout feat-#&lt;/span&gt;42                           &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Create a new local branch.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Select an existing branch.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Create the remote branch with the same name and initiate tracking, assuming your remote uses the standard default name origin.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git push -u origin feat-#&lt;/span&gt;42&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock caution&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-caution&#34; title=&#34;Caution&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Publish files on branch when you are ready to share your changes.
Once files are available on remote repository, you should avoid rebasing your branch.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_work_on_the_branch&#34;&gt;Work on the Branch&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Add your changes and commit them regularly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git commit -a -m “commit message describing activities for feat-#&lt;/span&gt;42“&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As long as you are working alone on the branch, regularly synchronize it with the main trunk using rebase operations.
I suggest performing the synchronization at least daily.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once you share your branch, synchronize using merge operations.
Doing a rebase will confuse other developers by providing an alternate version of the same change.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This housekeeping avoids stress when you finally merge your branch back to trunk.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Upon running the unit tests locally, push the changes to the repository.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git push&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;Now you can test the branch from the central repository and deploy it to your continuous integration pipeline environment.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When working in a team, you can request a review of your branch before closing it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; calls such a request a &lt;em&gt;pull request&lt;/em&gt;.
You can open a request through the platform.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://gitlab.com/&#34;&gt;GitLab&lt;/a&gt; calls such a request a &lt;em&gt;merge request&lt;/em&gt;.
You can open a request through the platform.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These platforms provide tools to identify open requests you are requested to provide feedback.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Major IDEs provide some support to create and edit a merge request.
Often &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; is better supported than &lt;a href=&#34;https://gitlab.com/&#34;&gt;GitLab&lt;/a&gt; or &lt;a href=&#34;https://bitbucket.org/&#34;&gt;Bitbucket&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_merge_the_branch&#34;&gt;Merge the Branch&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Switch to main and synchronize with your remote repository, the &lt;em&gt;-p&lt;/em&gt; parameter means &lt;em&gt;--prune&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git checkout main       &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
git fetch --all -p
git pull&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The default branch is often called main, master, or trunk.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Merge to main.
The option --no-ff will always keep branch information.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git merge --no-ff feat-#&lt;/span&gt;42&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Or if you want a single commit to the complete branch.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git merge —squash —no-ff feat-#&lt;/span&gt;42       &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;You can perform complex squashing of selected commits using &lt;em&gt;git rebase -i HEAD-X&lt;/em&gt;.
X the number of commits in the past you want to manipulate.
Please consult a tutorial or an expert before trying it.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The strategy using squash when merging is often used when a Pull Request is closed.
Code hosting platforms like &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;, &lt;a href=&#34;https://gitlab.com/&#34;&gt;GitLab&lt;/a&gt;, or &lt;a href=&#34;https://bitbucket.org/&#34;&gt;Bitbucket&lt;/a&gt; support this as an option when merging a pull request.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Push the changes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git push&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For advanced users, you can first rebase your branch and squash superfluous commits before merging the branch back to trunk.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_delete_the_branch&#34;&gt;Delete the Branch&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Delete the remote branch (also &lt;em&gt;git branch -dr origin/feat-#42&lt;/em&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git push origin --delete feat-#&lt;/span&gt;42&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Delete the local branch.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git branch -d feat-#&lt;/span&gt;42&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You are done.
Now you are ready to implement the next feature.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_view_local_and_remote_branches&#34;&gt;View Local and Remote Branches&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want to view branches, use the following commands for the local branches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git branch
git branch --no-merged&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want to view remote branches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git branch -r
git branch -r --no-merged&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_checkout_remote_branch&#34;&gt;Checkout Remote Branch.&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The -p parameter means --prune&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;&lt;code data-lang=&#34;console&#34;&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git fetch --all -p
&lt;/span&gt;&lt;span style=&#34;color: #24292f;background-color: #f6f8fa&#34;&gt;git checkout #&lt;/span&gt;feat_42&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_thoughts&#34;&gt;Thoughts&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can find a lot of information on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/git&#34;&gt;Stack Overflow&lt;/a&gt;.
Beware when reading the answers on Stack Overflow that Git commands have changed over time.
Select new posts to find the best answers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The nifty-gritty details can be found in the official &lt;a href=&#34;https://git-scm.com/book/en/v2&#34;&gt;Git documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;em&gt;Pro Git&lt;/em&gt; book can be downloaded from &lt;a href=&#34;https://git-scm.com&#34;&gt;Git SCM&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock warning&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-warning&#34; title=&#34;Warning&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Beware that &lt;a href=&#34;https://gitolite.com/&#34;&gt;gitolite&lt;/a&gt; does not support special characters such as # in branch names.
Use them only in the commit messages.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These same characters work in &lt;a href=&#34;https://bitbucket.org/&#34;&gt;bitbucket&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_links&#34;&gt;Links&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2016/git-branches-for-the-impatient/&#34;&gt;Git Branches for the Impatient&lt;/a&gt;
Marcel Baumann. 2016.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2017/git-local-repositories-for-the-impatient/&#34;&gt;Git Local Repositories for the Impatient&lt;/a&gt;
Marcel Baumann. 2017.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2023/git-rebase-and-merge-for-the-impatient/&#34;&gt;Git Rebase and Merge for the Impatient&lt;/a&gt;
Marcel Baumann. 2023.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2023//git-tag-for-the-impatient/&#34;&gt;Git Tag for the Impatient&lt;/a&gt;
Marcel Baumann. 2023.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../../2023/semantic-commits-for-the-impatient/&#34;&gt;Semantic Commits for the Impatient&lt;/a&gt;
Marcel Baumann. 2023.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: The Version of the Scrum Guide 2011</title>
      <link>https://blog.tangly.net/blog/2016/the-version-of-the-scrum-guide-2011/</link>
      <pubDate>Wed, 22 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2016/the-version-of-the-scrum-guide-2011/</guid>
      <description>
        
        
        &lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2016-06-01-head.jpg&#34; alt=&#34;2016 06 01 head&#34; width=&#34;320&#34; height=&#34;320&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The new version of the Scrum Guide written by &lt;a href=&#34;https://en.wikipedia.org/wiki/Ken_Schwaber&#34;&gt;Ken Schwaber&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Jeff_Sutherland&#34;&gt;Jeff Sutherland&lt;/a&gt; has been available since July 2011.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You should regularly read the Scrum guide to reflect how your teams are applying agile principles and ideas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You should also consult the seminal &lt;a href=&#34;https://agilemanifesto.org/&#34;&gt;Agile Manifesto&lt;/a&gt; and the &lt;a href=&#34;https://agilemanifesto.org/principles.html&#34;&gt;12 Agile Manifesto Principles&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The older version was published in May 2009.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I found quite interesting the precision of the Scrum Master’s responsibility.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I have discussions with the customers and companies I coach about the responsibility of the Scrum Master.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Below key statements I find useful for Scrum masters and agile enthusiasts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_who_is_responsible_for_the_introduction_of_scrum&#34;&gt;Who is responsible for the introduction of Scrum?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;People often state that management should spread Scrum in the company.
Ken and Jeff have a clear idea who is in charge of this.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Scrum Master serves the organization in several ways, including:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Leading&lt;/em&gt; and &lt;em&gt;coaching&lt;/em&gt; the organization in its Scrum adoption;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Planning&lt;/em&gt; Scrum implementations within the organization;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Helping employees and stakeholders understand and enact Scrum and empirical product development;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Causing change that increases the productivity of the Scrum Team; and,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Working&lt;/em&gt; with other Scrum Masters to increase the effectiveness of how Scrum is applied in the organization.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Scrum Master is a main driver for the introduction of Scrum in all departments and levels in the company.
He needs senior management support, but the Scrum Master daily job is to spread Scrum in the company.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_who_should_coach_the_product_owner&#34;&gt;Who should coach the product owner?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Scrum Master serves the Product Owner in several ways, including:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Finding&lt;/em&gt; techniques for effective Product Backlog management.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Clearly, communicating vision&lt;/em&gt;, goals, and Product Backlog items to the Development Team.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Teaching the Development Team to create clear and concise Product Backlog items.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Understanding long-term product planning&lt;/em&gt; in an empirical environment.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Understanding and practicing agility.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Facilitating&lt;/em&gt; Scrum events as requested or needed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Scrum Master should also coach the product owner and support him in the long term planning, the communication of the vision and backlog management.
The vision and goals of the product should always contain an overall planning frame.
During product development, empirical evidence will trigger revision of the milestones and product planning.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_what_is_a_potentially_shippable_product&#34;&gt;What is a potentially shippable product?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When the Product Backlog item or an Increment is described as &lt;em&gt;Done&lt;/em&gt;, everyone must understand what “Done” means.
Although this varies significantly per Scrum Team, members must have a shared understanding of what it means for work to be complete, to ensure transparency.
This is the &lt;em&gt;Definition of Done&lt;/em&gt; for the Scrum Team and is used to assess when work is complete on the product Increment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Development Teams deliver an Increment of product functionality every Sprint.
This Increment is a working product, so a Product Owner may choose to immediately release it.
Each Increment is additive to all prior Increments and thoroughly tested, ensuring that all Increments work together.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As Scrum Teams mature, it is expected that their &lt;em&gt;Definition of Done&lt;/em&gt; will expand to include more stringent criteria for higher quality.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Increment is the sum of all the Product Backlog items completed during a Sprint and all previous Sprints.
At the end of a Sprint, the new Increment must be ““Done””, which means it must be in usable condition and meet the Scrum Team’s &lt;em&gt;Definition of Done&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;It must be in usable condition regardless of whether the Product Owner decides to actually release it.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So at the end of the sprint, all stories realized since the start of the product must be correct.
Therefore, you need automated acceptance tests to guaranty their correctness.
The Scrum team must guaranty that at the end of each sprint all functions of the product work as specified and accepted by the product owner in the current and previous sprint reviews.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Higher quality is reached through extreme programming approach: test driven development, clean code, pair programming, pair check-in, coding dojo, static analysis tools.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_does_scrum_consider_long_term_planning&#34;&gt;Does Scrum consider long-term planning?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Yes, it is a major activity performed by the Scrum Master and Product Owner.
See the above point about the Scrum Master coaching the Product Owner.
See if anyone states that long-term planning is not part of the Scrum theory, you should challenge them and give them the Scrum Guide to read.
What can be changed during a Sprint?
Often customers have heated discussions that can be changed during a sprint Here a clear statement.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;During the Sprint:
* No changes are made that would affect the Sprint Goal; * Development Team composition and quality goals remain constant; and, * Scope may be clarified and re-negotiated between the Product Owner and Development Team as more is learned.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_what_is_measured_in_a_burn_down_chart&#34;&gt;What is measured in a burn-down chart?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Scrum does not consider the time spent working on Sprint Backlog Items.
The work remaining and date are the only variables of interest.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The only relevant information is the amount of work still open and when this work will be completed.
This is true for sprint, release and whole backlog burn-down chart.
I am glad that these precisions were added to the new version of the Scrum guide.
I simplify my daily work.
I can now simply refer the official Scrum Guide to convince people how aspects of Scrum should be understood.
The older version of the Scrum Guide is still relevant because it contains hints and best practices no more part of the new version.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Scrum Master is a full-time Role</title>
      <link>https://blog.tangly.net/blog/2016/scrum-master-is-a-full-time-role/</link>
      <pubDate>Thu, 19 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2016/scrum-master-is-a-full-time-role/</guid>
      <description>
        
        
        &lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2016-05-01-head.jpg&#34; alt=&#34;2016 05 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I am very happy we discuss in depth the role, responsibilities and activities of a good Scrum Master.
I fully agree with Scrum advocates that Scrum Master is a dedicated full-time job.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I am also convinced a Scrum Master can support multiple experienced Scrum teams.
The Large Scale Scrum framework &lt;a href=&#34;https://less.works/&#34;&gt;LeSS&lt;/a&gt; states a full-time Scrum Master supports 1 to 3 teams.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I worked with quite a few Scrum Masters, Product Owners, and Scrum teams.
My experience shows it is more productive and effective when the Scrum Master works full-time as (see
&lt;a href=&#34;https://shop.theliberators.com/products/the-8-stances-of-a-scrum-master&#34;&gt;white paper of Barry Overeem&lt;/a&gt;)
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;A servant leader&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A coach&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A facilitator&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A teacher&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A mentor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An impediment remover&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A change agent&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A manager (please restrain yourself)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;He should not implement stories.
A Scrum Master is under huge stress being a development team member and having to balance their Scrum Master responsibilities against the commitment of the sprint goals.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So you shall have full-time Scrum Masters.
More important is that you have real Scrum Masters, and not only Scrum administrators who organize meetings and manage the Scrum board and burn-down charts.
&lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt; has always been a hands-on approach to be successful in this you need to have a passion for getting your hands dirty.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Find out if you are a real professional Scrum master.
Do you perform each sprint the top things a Scrum Master usually forgets to focus on?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Do Gemba. Redefine career paths, incentives, organization to be more Scrum focused.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Identify with the product owner and the development team missing product backlog items.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;State team issues are not being discussed because they are too uncomfortable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find out an appropriate balance between end-to-end system tests and unit tests.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Play back the team’s progress against the proposed release plan.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Integrate all tests into continuous integration, delivery and deployment.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Coach your team members to understand the benefits of refactoring, removing waste and focus on quality.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Teach Kaizen. Coach team to peer review and continuously improve towards perfection.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Teach pair programming on a daily basis.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Expand with the team and the organization the definition of done. Beware it can trigger an organizational change.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I hope the discussion what a successful Scrum master does stay active.
Avoid agile coaches not being Scrum masters, they are not doing &lt;a href=&#34;https://en.wikipedia.org/wiki/Gemba&#34;&gt;Gemba&lt;/a&gt; and lose contact with the knowledge workers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Read our &lt;a href=&#34;../../2016/what-you-do-not-need-to-do-in-scrum&#34;&gt;what you do not need to do&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It is a huge gain for the Agile community that people and organizations understand that a Scrum master is a professional coach, teacher, mentor, and change catalyst.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. The liberators have changed their website structure. Search under &lt;a href=&#34;https://shop.theliberators.com/&#34;&gt;The Liberators Shop&lt;/a&gt; to find information.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Books for Persons interested in Agile Approaches</title>
      <link>https://blog.tangly.net/blog/2016/books-for-persons-interested-in-agile-approaches/</link>
      <pubDate>Thu, 21 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2016/books-for-persons-interested-in-agile-approaches/</guid>
      <description>
        
        
        &lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2016-04-01-head.jpg&#34; alt=&#34;2016 04 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I am often told that it is difficult to use Agile/Scrum approaches for brown field projects or for big projects or for distributed projects or for in other situations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Interestingly, these people also state that the same problems exist with traditional approaches such as &lt;a href=&#34;https://en.wikipedia.org/wiki/OpenUP&#34;&gt;RUP/OpenUP&lt;/a&gt;,
&lt;a href=&#34;https://en.wikipedia.org/wiki/Waterfall_model&#34;&gt;Waterfall Model&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/V-Model_(software_development)&#34;&gt;V Model&lt;/a&gt; defined as a formal standard in Germany
&lt;a href=&#34;https://de.wikipedia.org/wiki/V-Modell_(Entwicklungsstandard)&#34;&gt;V-Modell Entwicklungsstandard&lt;/a&gt;, and the Swiss variant called &lt;a href=&#34;https://www.hermes.admin.ch/en/&#34;&gt;HERMES&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Agile approaches are currently the standard for new projects and are thought in technical universities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Scrum is the main agile method and state of the industry approach for the implementation of software projects.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To open the discussion and bring the discussion back to objective arguments, I often recommend the following books&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_big_projects_and_distributed_projects&#34;&gt;Big Projects and Distributed Projects&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Scaling Lean and Agile Development: Thinking and Organizational Tools for Large-Scale Scrum, Craig Larman and Bas Vodde, Addison-Wesley 2009.
This book and the one below are a very extensive presentation about the challenges and trade-offs of big distributed agile projects using &lt;a href=&#34;https://less.works/&#34;&gt;LeSS&lt;/a&gt;.
Don’t expect pre-cocked solutions but a tool set how to lead successfully such projects.
Not always an easy reading but worth the effort&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Practices for Scaling Lean and Agile Development: Large, Multi-side, and Offshore Product Development with Large-Scale Scrum, Craig Larman and Bas Vodde, Addison-Wesley 2010 See above for a review of the book&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agile Testing: A Practical Guide for Testers and Agile Teams, Lisa Crispin and Janet Gregory, Addison-Wesley 2009 The seminal reference book how to blend testing with agile projects.
Lisa Crispin and Janet Gregory provide insights and a proven track how to guaranty agile quality assurance and agile testing.
A must-read book for everyone seriously developing agile projects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agile Estimating and Planning, Mike Cohn, Prentice-Hall, 2006 The seminal reference to estimating agile projects.
The experienced readers will understand why Mike Cohn used the words estimating and planning instead of estimates and plan.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Enterprise and Scrum, Ken Schwaber, Microsoft Press, 2007 The work of one of the Scrum founders how a company can adopt Scrum.
You should read the standard works of Scrum to understand the concepts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agile Project Management with Scrum, Ken Schwaber, Microsoft Press 2003 The work of one of the Scrum founders how Scrum influences product organization and management.
You should read the standard works of Scrum to understand the concepts.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_brown_field_projects&#34;&gt;Brown-Field Projects&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Refactoring Improving the Design of Existing Code, Martin Fowler, Addison-Wesley 1999, How to implement continuous improvement on the code level.
If you are not refactoring, you are not agile.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Working Effectively with Legacy Code, Michael C. Feathers, Prentice-Hall 2005, the Majority of developers work on existing code bases.
Based on the above statement, you have to find a way to unit test and refactor legacy code if you want to be agile.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_extreme_programming&#34;&gt;Extreme Programming&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Test Driven Development by Example, Ken Beck, Addison-Wesley 2003 How can a programmer be sure his code is working before and after refactoring&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clean Code: A Handbook of Agile Software Craftsmanship, Robert C. Martin, Prentice Hall 2009 We are professional developers and uncle Bob shows how we should work&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Clean Coder: A Code of Conduct for Professional Programmers, Robert C. Martin, Prentice Hall 2011 Uncle Bob defines what a professional developer is.
I know quite a few developers shocked by his requirements&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_agile_and_lean_concepts&#34;&gt;Agile and Lean Concepts&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Lean Software Development, An Agile Toolkit, Mary &amp;amp; Tom Poppendieck, Addison-Wesley 2003 Classical work what lean development means&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Implementing Lean Software Development: From Concept to Cash, Mary &amp;amp; Tom Poppendieck, Addison-Wesley 2007 The hand-ons how to implement lean approaches&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agile Product Management with Scrum: Creating Products that Customers Love, Roman Pichler, Addison-Wesley 2010 Requirement engineering done the agile way&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Scrum and XP from the trenches: How we do Scrum, Henrik Knieberg, InfoQ 2007 is a short book how to implement Scrum and XP in projects&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_change_management&#34;&gt;Change Management&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Fearless Change: Patterns for Introducing New Ideas.
Mary Lynn Manns &amp;amp; Linda . Addison-Wesley 2005.&lt;br/&gt;
The introduction of Scrum and agile principles means change in the organization and the teams.
Linda Rising shows how changes are introduced with success in existing organizations.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_books_everybody_should_have_read&#34;&gt;Books everybody should have read&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Peopleware: Productive Projects and Teams, Tom DeMarco &amp;amp; Timothy Lister, Dorset House 1987 How to grow teams and lead successful projects&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Mythical Man-Month 2nd Edition, Frederick P. Brooks, Addison-Wesley 1995 [&lt;a href=&#34;#mythical-man-month&#34;&gt;1&lt;/a&gt;].
The first version was published in 1975. The rules postulated by Brooks are still actual.
Sad is that a lot of product leaders have no clue of these rules.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Becoming a Technical Leader: An organic Problem-Solving Approach, Gerald M. Weingartner, Dorset House 1986 How a gifted technical engineer can become a manager.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Slack: Getting past burnout, busywork, and the myth of total efficiency, Tom DeMarco, Broadway Books 2001 In one sentence, the tremendous difference between efficiency and effectivity.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Dilbert Principle, Scott Adams, Harper Collins 1996 An entertainment presentation of all the mistakes companies are doing and still thinking they are smart&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Death March: The complete Software Developer’s Guide to Surviving &amp;#34;Mission Impossible&amp;#34; Projects, Prentice Hall 1997 In my current coaching activities I still encounter departments where burnouts are common.
Either these managers are criminals or so plain stupid that they cannot be held responsible.
I am still unsure&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I am curious about books you recommend for agile or other approaches.
You find a more complete book list under &lt;a href=&#34;../../../ideas/learnings/books&#34;&gt;Books&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Just drop me an email or leave a comment.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: PMI-ACP Certification</title>
      <link>https://blog.tangly.net/blog/2016/pmi-acp-certification/</link>
      <pubDate>Fri, 18 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2016/pmi-acp-certification/</guid>
      <description>
        
        
        Unknown reference: lean-agile-software-develpment
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2016-08-01-head.jpg&#34; alt=&#34;2016 08 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I learnt quite a few new acronyms and techniques when studying for the PMI-ACP certification program.
In this post, I collected these acronyms, some definition and the bibliography you should know before attending the examination.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The main advantage of having it is that you no longer need to argue with PMI certified product managers if agile is applicable to software projects.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The main interest of PMI-ACP certification is their collection of concepts taken from Agile, eXtreme Programming, Scrum and Lean.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It could be worth your money to buy the book &amp;#34;The PMI-ACP Exam: How to pass on Your First Try&amp;#34;, Andy Crowe, First Edition 2012.
The book itself is not rocket science, but it contains two hundred questions which are similar to the ones you will encounter during the examination.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To get your 21 PDUs necessary for the examination you must attend a training course.
I booked an online course at Simplilearn for a reasonable price.
The content was reasonable.
The test questions were good.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The renewal of the certification again requires PDUs.
I took online training in interesting areas such as coaching techniques, how to manage effective and efficient meetings or how to write good protocols.
Some online videos of &lt;a href=&#34;https://www.mountaingoatsoftware.com/blog&#34;&gt;Mike Cohn&lt;/a&gt; also count for PDUs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_chapter_list&#34;&gt;Chapter List&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.pmi.org/certifications/agile-acp&#34;&gt;PMI ACP&lt;/a&gt; eligibility, examination content&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Agile_software_development&#34;&gt;Agile product management&lt;/a&gt; &lt;em&gt;APM &lt;/em&gt;Framework, agile product lifecycle&lt;/p&gt;
&lt;div class=&#34;olist loweralpha&#34;&gt;
&lt;ol class=&#34;loweralpha&#34; type=&#34;a&#34;&gt;
&lt;li&gt;
&lt;p&gt;Envision&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Speculate (During the speculate phase, the product stories are delivered.
This phase involves planning and delivering tested stories in a short iteration, constantly seeking to reduce the risk and uncertainty of the product).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Explore,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adapt,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Close.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Scope, Costs, Time&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://jimhighsmith.com/&#34;&gt;Blog&lt;/a&gt;: Value (releasable product), Quality (reliable, adaptable product), Constraints (cost, schedule, scope)
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;People, Products and Processes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The five identified core risk areas for a product are: Intrinsic schedule flaw, Specification breakdown, Scope creep, Personnel loss and Productivity variation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Planning, monitoring, adapting&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Estimation in agile projects&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Communication on agile projects&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Analysis and design on agile projects&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agile quality&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Soft skills for agile product leaders and negotiation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Value based prioritization of requirements&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Managing risk on agile projects&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Metrics and charts on agile projects&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agile value stream analysis&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Knowledge and skills&lt;/p&gt;
&lt;div class=&#34;olist loweralpha&#34;&gt;
&lt;ol class=&#34;loweralpha&#34; type=&#34;a&#34;&gt;
&lt;li&gt;
&lt;p&gt;Agile team members should be flexible and adaptable.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_bibliography&#34;&gt;Bibliography&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The examination reference list of PMI ACP is (the titles in italics are also part of the CAT reference list)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;E. Derby, D. Larsen, and K. Schwaber, &lt;em&gt;Agile Retrospectives&lt;/em&gt;. Pragmatic Bookshelf, 2006 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0977616649&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0977616649&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A. Cockburn, &lt;em&gt;Agile Software Development&lt;/em&gt;, Second. Addison-Wesley Professional, 2006 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0321482751&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0321482751&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;M. Sliger, &lt;em&gt;The software project manager’s bridge to agility&lt;/em&gt;. Addison-Wesley, 2008 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B004YW6M5C&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B004YW6M5C&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;L. Adkins, &lt;em&gt;Coaching agile teams&lt;/em&gt;. Addison-Wesley, 2010 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0321534468&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0321534468&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;J. A. Highsmith, &lt;em&gt;Agile project management&lt;/em&gt;. Addison Wesley Professional, 2010 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B002HMJYAG&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B002HMJYAG&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;G. Smith and A. Sidky, &lt;em&gt;Becoming Agile&lt;/em&gt;. Manning Publications, 2008 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B09782BTD4&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B09782BTD4&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;M. Cohn, &lt;em&gt;Agile estimating and planning&lt;/em&gt;. Prentice Hall Professional Technical Reference, 2005 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0131479415&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0131479415&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;J. Shore and S. Warden, &lt;em&gt;The Art of Agile Development&lt;/em&gt;, First. O’Reilly Media, Incorporated, 2007 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B09JL2JW4V&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B09JL2JW4V&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;M. Cohn, &lt;em&gt;User Stories Applied&lt;/em&gt;. Addison-Wesley Professional, 2004 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0321205685&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0321205685&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;K. Schwaber, &lt;em&gt;Agile Project Management with Scrum&lt;/em&gt;. Microsoft Press, 2004 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B00JDMPOZW&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B00JDMPOZW&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;lean-agile-software-develpment&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It is interesting to compare the above list with the reference list of the Certified Agile Tester CAT&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;L. Crispin, &lt;em&gt;Agile testing&lt;/em&gt;. Addison-Wesley, 2009 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0321534468&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0321534468&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;M. Cohn, &lt;em&gt;Succeeding with agile&lt;/em&gt;. Addison-Wesley, 2010 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0321579364&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0321579364&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C. Larman, &lt;em&gt;Agile and Iterative Development&lt;/em&gt;. Addison-Wesley Professional, 2003 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0131111558&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0131111558&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;K. Schwaber, &lt;em&gt;Agile Project Management with Scrum&lt;/em&gt;. Microsoft Press, 2004 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B00JDMPOZW&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B00JDMPOZW&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;E. Derby, D. Larsen, and K. Schwaber, &lt;em&gt;Agile Retrospectives&lt;/em&gt;. Pragmatic Bookshelf, 2006 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0977616649&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0977616649&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;M. Cohn, &lt;em&gt;User Stories Applied&lt;/em&gt;. Addison-Wesley Professional, 2004 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0321205685&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0321205685&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;T. DeMarco, &lt;em&gt;The Deadline&lt;/em&gt;. Dorset House Publishing Company, Incorporated, 2011 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B006MN4RAS&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B006MN4RAS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;T. DeMarco, &lt;em&gt;Peopleware productive projects and teams&lt;/em&gt;, Third. 2013 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B00DY5A8X2&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B00DY5A8X2&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;K. Beck and C. Andres, &lt;em&gt;Extreme Programming Explained&lt;/em&gt;, Second. Addison-Wesley Professional, 2004 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/0321278658&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/0321278658&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;H. Kniberg, &lt;em&gt;Lean from the Trenches&lt;/em&gt;. Pragmatic Bookshelf, 2011 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B00N4HZ6PK&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B00N4HZ6PK&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;D. J. Anderson, &lt;em&gt;Kanban&lt;/em&gt;. Blue hole press, 2010. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_terminology_and_acronyms&#34;&gt;Terminology and Acronyms&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The more terms and acronyms you know, the easier the examination will be.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image right&#34;&gt;&lt;img src=&#34;../pics/2016-08-01-active-listening.png&#34; alt=&#34;2016 08 01 active listening&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Active_listening&#34;&gt;Active Listening&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ARCSThe &lt;em&gt;Attention Relevance Confidence Satisfaction&lt;/em&gt; is relevant for motivational theory and process for systematic motivational design&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Affinity Estimation - e.g., story points or tee-shirt sizes -.
The Affinity Estimating exercise is best conducted on Product Backlogs larger than 20 items.
It is best when you have at least 40 items which allow for groupings to easily become apparent.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ATDD Acceptance Test Driven Development - Discuss, Distill, Develop, and Demo - see also &lt;a href=&#34;http://en.wikipedia.org/wiki/Behavior_Driven_Development&#34;&gt;Behaviour Driven Development&lt;/a&gt; &lt;em&gt;BDD&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Continuous Deployment &lt;em&gt;CD&lt;/em&gt;. The Continuous Delivery &lt;em&gt;CD&lt;/em&gt; is not part of the examination.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Cumulative_flow_diagram&#34;&gt;Cumulative Flow Diagrams&lt;/a&gt; &lt;em&gt;CFD&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Continuous Integration &lt;em&gt;CI&lt;/em&gt;: multistage integration is running additional tests for performance, load or stability&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Collaboration versus Coordination: Work Together versus Share Information&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cycle Time = Flow Time&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The acronym &lt;em&gt;DEEP&lt;/em&gt; Detailed Appropriately, Estimable, Emergent, Prioritised. Split story into smaller stories.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DRY Do not Repeat Yourself&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;EI Emotional Intelligence&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;EISA Emotional Intelligence Skills Assessment &lt;em&gt;Perceiving, Managing, Decision Making, Achieving, Influencing&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;EQ Emotional Intelligence Quotient&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Error-feedback ratio: is the number of new defects injected when fixing existing defects.
Several years ago, Jerry Weinberg conducted studies on the error-feedback ratio and found that a 20% difference in the feedback ratio leads to an 88% difference in completion time (bad enough), but the next 10% increase leads to a 112% increase.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Earned_value_management&#34;&gt;Earned Value Management&lt;/a&gt; &lt;em&gt;EVM&lt;/em&gt; - this is standard PMI theory -&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;PV (Planned Value) = BAC (Budget At Completion) \* Planned Percentage Completed Budget Cost of Work Scheduled&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AC (Actual Cost) - Budget Cost of Work Performed&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;EV (Earned Value) = BAC (Budget At Completion) \* Actual Percentage Completed - Sum (PV[Completed]) from start until current&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CPI (Cost Performance Index) = EV / AC (Actual Cost) indicates if we are under or other budget&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SPI (Schedule Performance Index) = PV / AC indicates if we are early or late&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ETC (Cost Required) = (BAC - EV) / CPI - This metric is the forecast amount to complete the remaining work -&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;EAC (Forecast Cost for the total planned work) = BAC / CPI = AC + ETC&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Five Levels of Conflicts&lt;/p&gt;
&lt;div class=&#34;olist loweralpha&#34;&gt;
&lt;ol class=&#34;loweralpha&#34; type=&#34;a&#34;&gt;
&lt;li&gt;
&lt;p&gt;Problem to Solve (Good Teams) → Collaboration, consensus Collaboration and Seeking a win-win situation.
Consensus-Learning where every team member’s head is with regard to the issue and, in time, arriving at a decision everyone can back.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disagreement → Negotiate, support&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Contest → Accommodate&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Crusade → Shuttle between parties&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;World War → Protect to avoid injuries&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JBGE Just Barely Good Enough&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/INVEST_(mnemonic)&#34;&gt;INVEST&lt;/a&gt; Independent Negotiable Valuable Estimable Small (Sized appropriately) Testable&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Internal_rate_of_return&#34;&gt;Internal Rate of Return&lt;/a&gt; &lt;em&gt;IRR&lt;/em&gt;, the higher, the better.
The internal Rate of Return (IRR) is used to express the return on product in % terms when comparing two different cash flow streams.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JIT Just In Time&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Kano_model&#34;&gt;Kano Model&lt;/a&gt;: Must have, Linear feature, Delight&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Threshold or basic attributes must have attributes, otherwise the product is incomplete.
Threshold features are those that must be present in the product for it to be successful.
They are often referred to as must-have features.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Performance attributes are linear, the more, the better&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Excitement attributes are delights&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MMF Minimally Marketable Feature&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/MoSCoW_Method&#34;&gt;MoSCoW&lt;/a&gt; Must, Should, Could, Would&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Net_present_value&#34;&gt;Net Present Value&lt;/a&gt; &lt;em&gt;NPV&lt;/em&gt; → FV = PV * (1+i)^n, FV is future value, PV is the present value.
It is the number of periods/years; you can interpret as the higher, the better&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Payback Period, you can interpret as the lower, the better&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PESTLE Political, Environmental, Societal, Technological, Legal, Economical&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.pmi.org/certifications/agile-acp&#34;&gt;PMI-ACP&lt;/a&gt; Project Management Institute Agile Certified Practitioner&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Product Owner: Committed, Responsible, Authorized, Collaborative, and Knowledgeable&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Project_management&#34;&gt;Project management methods&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Relative Weighting Method&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Retrospective: Set the stage, Gather data, Generate insights, Decide what to do, Close the retrospective&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Risk&#34;&gt;Risk&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Risk Board&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Risk Exposure (Risk Sensus) → Risk Probability * Risk Cost = Risk Exposure&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Risk Management Process: Identify, Assess, Respond, Review of risks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Strategies: Avoid, Mitigate, Transfer, Accept&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ROI Return On Investment (Benefits - Costs) / Costs in percent.
The higher, the better&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/60-second-agility-roti&#34;&gt;ROTI&lt;/a&gt; Return On Time Invested (done in 60 seconds)&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;0 = &amp;#34;I would have been better off making a Starbucks run.
Complete waste of time&amp;#34; or Lost Principle: No Benefit Received for Time Invested Break-Even&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1 = &amp;#34;You really should have let me stay at my desk and code&amp;#34;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2 = &amp;#34;This was an OK meeting.
About as valuable as if I haave been coding&amp;#34; or Received Benefit Equal to Time Invested High Return on Investment&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;3 = &amp;#34;Surprisingly, this was more valuable than if I have been writing code&amp;#34;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;4 = &amp;#34;Wow, this meeting saved me tons of time.
Thank goodness I did not skip it to code&amp;#34; or Received Benefit Greater than Time Invested&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Rational_Unified_Process&#34;&gt;RUP&lt;/a&gt; Rational Unified Process: Inception, Elaboration, Construction, Transition phases&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Staging: The process of defining and prioritizing the nonfunctional requirements for scaling is called staging.
Staging occurs prior to the start of the first sprint and takes just one day.
During this day, the nonfunctional scaling requirements for this particular product are determined and placed in the Product Backlog.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Shuhari&#34;&gt;Shu Ha Ri&lt;/a&gt;: can be considered as concentric circles, with Shu within Ha, and both Shu and Ha within Ri.
The fundamental techniques and knowledge do not change.&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&amp;#34;protect&amp;#34;, &amp;#34;obey&amp;#34; — traditional wisdom — learning fundamentals, techniques, heuristics, proverbs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;#34;detach&amp;#34;, &amp;#34;digress&amp;#34; — breaking with tradition — detachment from the illusions of self&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;#34;leave&amp;#34;, &amp;#34;separate&amp;#34; — transcendence — there are no techniques or proverbs.
All moves are natural.
Becoming one with spirit alone without clinging to forms; transcending the physical&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;pillars: Transparency, Inspection, Adaptation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Scrum of Scrums = Meta Scrum&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SDLC System Development Lifecycle&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Servant_leadership&#34;&gt;Servant Leadership&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SIP Software In Progress&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SMART - Specific Measurable Attainable Relevant Time-bound -&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TFD Test First Development&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/TDD&#34;&gt;Test Driven Development&lt;/a&gt; &lt;em&gt;TDD&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Extreme_programming&#34;&gt;Extreme Programming&lt;/a&gt; &lt;em&gt;XP&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Wideband_delphi&#34;&gt;Wideband Delphi&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wave: Wave is the Product Planning structure with a Medium-range time frame (3 months) with story level capability and capability commitment.
Waves, or milestones, are intermediate points, usually from one month to three months apart.
Waves can have both a product management and a technical function.
From a product management perspective, they provide a chance to review progress and make adjustments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Work_breakdown_structure&#34;&gt;Work Breakdown Structure&lt;/a&gt; &lt;em&gt;WBS&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Below some additional definitions&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Regardless of what we discover, we understand and truly believe that everyone did the best job they could, given what they knew at the time, their skills and abilities, the resources available, and the situation at hand.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Norm Kerth&amp;#39;s Prime Directive (should be used in review and retrospective)
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Story Points versus Ideal Days - and Elapsed Days -&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Crystal Clear requires&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;the following properties:&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Frequent delivery of usable code to users&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reflective improvement&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Osmotic &lt;a href=&#34;http://en.wikipedia.org/wiki/Communication&#34;&gt;communication&lt;/a&gt; preferably by being co-located&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Crystal Clear additionally includes these optional properties:&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Personal safety&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Focus&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Easy access to expert users&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Automated tests, configuration management, and frequent integration&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agile Coach Failure Modes: Spy, Seagull, Opinionated, Admin, Hub, Butterfly, Expert&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Root-causing a defect or testing the feasibility of an algorithm or a third party solution is an example of a spike&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Measure: ascertain the size, amount, or degree of (something) by using an instrument or device marked in standard units or by comparing it with an object of known size&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dysfunctional teams pyramid: absence of trust, fear of conflict, lack of commitment, avoidance of accountability, inattention to results&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;According to DeMarco, Fragmented knowledge workers may look busy, but a lot of their business is just thrashing.
The minimum cost penalty is 15%&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The declaration milestone is a verbal notice from one person to another, or to multiple people, that a milestone was reached.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The three coach styles are Teaching, Coaching, and Advising.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The quantity of function is scope, measured in terms of user stories, use cases, requirements, or features (depending on a particular situation).
In software, these may be measured ultimately as objects, modules, classes, or lines of code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_questions&#34;&gt;Questions&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Which of the following correctly defines the team members themselves managing assignment of the day-to-day tasks required to deliver stories at the end of each iteration? &lt;em&gt;Workload Management&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Which of the following techniques can be used to apply to bring down the Lost Opportunity Cost within your team? &lt;em&gt;Team Collocation&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When should the Product Owner provide feedback on the work results? &lt;em&gt;Just in time reviews&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Who is the most appropriate person to monitor all the risks in an Agile product? &lt;em&gt;The product manager&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Which of the following is false about Velocity? &lt;em&gt;Velocity cannot correct Estimation errors&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Which of the following is NOT the skill for Agile coaches for facilitating change? &lt;em&gt;Reaching agreement&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Which tool combines the estimation techniques of expert opinion, disaggregation and analogy?
&lt;em&gt;Planning poker combines expert opinion, analogy, and disaggregation into an enjoyable approach to estimating that results in quick but reliable estimates.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Which of the following metrics can be BEST standardized across teams?
&lt;em&gt;Business case realization -The PMO can help the teams to enable timely decision making by standardizing the metrics.-&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Which is the communication technique where you repeat back a summary of what the other person just said to you to confirm understanding?
&lt;em&gt;Reflective Listening is a communication technique where you repeat back a summary of what the other person just said to you to confirm understanding.&lt;/em&gt;
&lt;em&gt;Another benefit in this situation is that having a person hear their own ideas in another person’s voice/words may make it easier for them to be objective.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adaptation depends upon understanding a wide range of information, including an assessment of the product’s progress, technical risks, the requirements evolution, and ongoing competitive market analysis.
Which are the areas where every team needs to constantly evaluate and make appropriate adaptations?
&lt;em&gt;Product Value, Product quality, Product status, Team performance -Every team needs to constantly evaluate and make appropriate adaptations in the following four areas - Product Value, Product quality, Product status, Team performance-&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A standard for measuring or evaluating something. &lt;em&gt;Metric - A metric is a standard for measuring or evaluating something.-&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What BEST describes the characteristics of a Learner at Level 3 or in the Fluent stage of learning?
Learners in the Fluent stage are experts -The Stage 3 Learner is at the stage of mastery.
He is able to figure out the end effect of any procedure and to make his way to that end.-&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Scrum uses the sashimi technique to require that every slice of functionality created by the developers be complete.
All the requirements gathering and analysis, design work, coding, testing, and documentation that constitute a complete product are required to be completed in every Sprint and demonstrated in the Sprint increment of functionality.
Sprints are kept short enough that the stakeholders don’t lose interest in the product before the Sprints are completed.
And stakeholders can see that they have an opportunity to redirect the product at the start of every Sprint to optimize the value they derive from the product.
At the end of every Sprint, stakeholders see new functionality.
Models, requirements, and internal artefacts might be of use to the developers, but they are never shown to the stakeholders.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Feature X has a value of 12 and the total value of all features is 35. If the feature is estimated to cost 56%, what is the priority of this feature using relative weighting?
&lt;em&gt;Correct Answer is B. The priority of the feature is determined by dividing the relative value by the cost %.
Hence the answer = (12/35)/(0.56) = 0.61.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The 100-Point Method was originally developed by Dean Leffingwell and Don Widrig for use cases and is used for prioritization as well.
It is a voting scheme where each stakeholder is given 100 points that he or she can use for voting in favour of the most important requirements.
How they distribute the 100 points is up to them: 20 here, 10 there or even all 100 on a single requirement if that is their sole priority.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When a team member approaches the Coach with a complaint about another team member, what conflict resolution technique should the Coach use?
&lt;em&gt;Three-step intervention path&lt;/em&gt;
Every team needs to constantly evaluate and make appropriate adaptations in the following four areas: Product value, Product quality, Team performance, Project status.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Normative methodologies are based on solutions or sequences of steps known to work for the discipline.
Electrical and other building codes in house wiring are examples.
In software development, one would include state diagram verification in this category.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Iterative development means that we build a partial version of a product and then expand that version through successive short time periods of development followed by reviews and adaptations.
Feature-based delivery means that the engineering team builds features of the final product or, particularly with industrial products.
At least a close representation of the final product (such as a simulation model).
Iterations are constrained to produce a result within a certain period of time—a time box (as short as 1–4 weeks for software).
Time boxes force closure; they force us to make something concrete, often before we are quite ready.
Incremental development means that we build these products such that they could be deployed at the end of one or more of the iterations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Forecasting the financial value of a theme is the responsibility of the product owner, but it is a responsibility shared with all other team members—programmers, testers, analysts, product managers, and so on.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Decision Framing focuses majorly on,
&lt;em&gt;Decision framing focuses on who gets involved in the decision process.&lt;/em&gt;
&lt;em&gt;Managers who make decisions without input from subordinates and peers make poor decisions.&lt;/em&gt;
&lt;em&gt;Engineers who make decisions without input from managers and peers make poor decisions.&lt;/em&gt;
&lt;em&gt;Who makes the decision is less important than getting the right people involved in the decision process.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Which of the following charts shows the total number of story points completed through the end of each iteration? &lt;em&gt;Cumulative story point burn-down chart&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;During critical problem-solving, you can ask probing questions, use active and reflective listening, Lead to an answer, but one should avoid injecting their own ideas.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I wish you success for your certification.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. Jim Highsmith removed all blogs. Try to find the blog &lt;em&gt;beyond scope schedule and cost: the agile triangle&lt;/em&gt;.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Why I use a MacBookPro and OS X</title>
      <link>https://blog.tangly.net/blog/2016/why-i-use-a-macbookpro-and-os-x/</link>
      <pubDate>Wed, 16 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2016/why-i-use-a-macbookpro-and-os-x/</guid>
      <description>
        
        
        &lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2016-03-01-head.jpg&#34; alt=&#34;2016 03 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I loved Linux as a young developer.
I compiled new kernels during evening sessions.
I worked hard to install and configure drivers to support the hardware I had bought.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I explored forums and talked with technical support specialists to activate hardware or support the resolution of my display.
I struggled days to have the correct drivers for the graphic card and communication components of my notebook.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I grew older and decided to enjoy my evenings and weekends with my family and friends.
Surely I would prefer to have no virus, trojan and other evils in my workstation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So I went to macOS and Apple notebooks without regrets.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_gains&#34;&gt;Gains&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The major gains upon migrating to OS X are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;No virus scanners are necessary, the speed-up during complex programming and development activities is tremendous.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No trouble when updating the operating system, updates are automatic, and often no new start is required.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unix Command Line and Tools are available in the console.
&lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; or &lt;a href=&#34;https://www.macports.org/&#34;&gt;MacPorts&lt;/a&gt; projects provide all known and less-known utilities and programs available under Linux
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A long-lived notebook is still working and looking nice after five years of daily usage.
The performance is more than adequate for software development with Java 8/9/10/11 stack and C++.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The last notebooks I had all lasted between six and nine years.
These computers were used daily the first five years.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_daily_development&#34;&gt;Daily Development&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The tools I really enjoy and use on a daily basis for software development as I mainly developed in Java - are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;IntelliJ IDEA&lt;/a&gt; IDE,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Atlassian Cloud applications - BitBucket, HipChat, CI pipeline -,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; as package manager for utilities,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Docker as container manager,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VirtualBox when I need a full-fledged virtual machine,
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_2&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_2&#34; title=&#34;View footnote.&#34;&gt;2&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_daily_work&#34;&gt;Daily Work&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The tools I use to perform administrative work are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.libreoffice.org/&#34;&gt;LibreOffice&lt;/a&gt;,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Google Business for team work in the cloud using collaborative tools,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Apple Mail Client with &lt;a href=&#34;https://gpgtools.org/&#34;&gt;GPG&lt;/a&gt; plugin for PGP and S/MIME secure email,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A local Swiss application &lt;a href=&#34;https://www.banana.ch&#34;&gt;Banana&lt;/a&gt; for accounting and VAT reports for the federal government.
I bought it as soon as the company stopped requesting higher prices for OS X than for the other platforms.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;LibreOffice completely replaced Microsoft Office suite.
I stopped using OpenOffice after the strange behavior of Oracle with the application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I never really regretted leaving Linux or &lt;a href=&#34;https://ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt; behind me.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. I use currently Homebrew. The available packages and the handling are excellent.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_2&#34;&gt;
&lt;a href=&#34;#_footnoteref_2&#34;&gt;2&lt;/a&gt;. The need of virtual machines for daily work is fading away.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Do Agile Methods - Scrum - Motivate your Team?</title>
      <link>https://blog.tangly.net/blog/2016/do-agile-methods-scrum-motivate-your-team/</link>
      <pubDate>Wed, 24 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2016/do-agile-methods-scrum-motivate-your-team/</guid>
      <description>
        
        
        &lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2016-02-01-head.jpg&#34; alt=&#34;2016 02 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Decision makers and waterfall aficionados loudly ask if agile approaches are worth the hype.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Does the approach really promote team work?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Well, my current experience is that the answer is a sounding &lt;strong&gt;YES&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Developers love to develop software products using &lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt;.
The motivation and positive energy just explode.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;People talk together, build as a team better products and enjoy the daily activities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Stakeholders and customers or users embrace the advantages they get.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A whisper can still be heard:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph text-center&#34;&gt;
&lt;p&gt;&lt;em&gt;Yes, it is not without consequences for the organization&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Say your team is developing software products with &lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt;.
We have the following roles:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The stakeholders&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The developers (Development Team)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Scrum master (SM)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The product owner (PO)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Scrum Team is the composition of the development team, Scrum master, and the product owner.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_stakeholders&#34;&gt;Stakeholders&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Stakeholders love Scrum.
Every two weeks they have a new application version they can use, test, and get feedback from all users.
This is the dream of every key account manager.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Because a new release is available every two weeks, the stakeholders should also provide feedback every two weeks.
They sometimes hate the pressure of agile and Scrum.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock caution&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-caution&#34; title=&#34;Caution&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Some organizations struggle with high-delivery rhythm.
Explain to your stakeholders a new release is available every two weeks.
The stakeholders decide how often the solution is deployed into production.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_developers_team&#34;&gt;Developers Team&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Agile methods, such as &lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt;, &lt;a href=&#34;http://www.extremeprogramming.org/&#34;&gt;eXtreme Programming&lt;/a&gt;, or &lt;a href=&#34;https://less.works/&#34;&gt;LeSS&lt;/a&gt;, are fun for all developers.
Suddenly, everyone can see your code, so at the beginning you as a developer must cope with different views how good code should be written.
Suddenly, you must master Test Driven Development TDD, mocking, unit test, legible documents.
But once you have it, you start to experience the &amp;#34;flow&amp;#34; and enjoy the atmosphere and to deliver at the end of each sprint a new software artifact.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You realize later that Scrum says the team is responsible.
You must acknowledge that product success is also your success.
ROI considerations now also drive each design decision.
If you master these responsibilities, you suddenly discover the world of engineering.
It is creating great products with an optimal balance of external quality and costs without ever jeopardizing the quality of the core.
You can never again deny that you as a developer are in charge.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_scrum_master&#34;&gt;Scrum Master&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Scrum master [&lt;a href=&#34;#mastering-professional-scrum&#34;&gt;1&lt;/a&gt;] is cool with a team enjoying Scrum and the flow of success.
You just have to realize you are not a master.
You are the enabler for a team of talented engineers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So you need to discover your &lt;em&gt;the lonely cowboy riding in the sun&lt;/em&gt; song why this job is so rewarding.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_product_owner&#34;&gt;Product Owner&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As a product owner [&lt;a href=&#34;#professional-product-owner&#34;&gt;2&lt;/a&gt;], you control the budget of the product, the priorities.
At the end of each iteration, you can change all priorities and goals.
Cool isn’t it.
But wait as a product owner, I am responsible for the budget and product success, and each time a member of the team asks me something I must have an answer ready.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Scrum is cool and we enjoy it.
And Scrum makes everything transparent and fast.
Every two weeks, a new version is delivered.
This version must be evaluated, accepted or a list of improvements must be provided in the next few days.
This rhythm is fast, really fast.
Once you are up to this speed, you will enjoy the flow.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_lessons_learnt&#34;&gt;Lessons Learnt&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Middle management often struggles with the agile approach at the beginning.
See, for example, the discussion about &lt;a href=&#34;https://less.works/less/management/index.html&#34;&gt;manager role in an agile environment&lt;/a&gt; in the &lt;a href=&#34;https://less.works/&#34;&gt;LeSS&lt;/a&gt; approach.
Be assured the results are worth the effort.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Reading an experience report or digging in the findings of Kotter, you realize success or failure goes through how you handle middle management.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_references&#34;&gt;References&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;mastering-professional-scrum&#34;&gt;&lt;/a&gt;[1] S. Ockerman and S. Reindl, &lt;em&gt;Mastering Professional Scrum&lt;/em&gt;. Addison Wesley, 2019 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B07XTLNPTC&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B07XTLNPTC&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;professional-product-owner&#34;&gt;&lt;/a&gt;[2] D. McGreal and R. Jocham, &lt;em&gt;The Professional Product Owner&lt;/em&gt;. Addison-Wesley Professional [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B07D5ZPJBY&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B07D5ZPJBY&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Minimizing Undone Work when Working with Regulatory Departments</title>
      <link>https://blog.tangly.net/blog/2016/minimizing-undone-work-when-working-with-regulatory-departments/</link>
      <pubDate>Thu, 21 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tangly.net/blog/2016/minimizing-undone-work-when-working-with-regulatory-departments/</guid>
      <description>
        
        
        &lt;div class=&#34;openblock float-group&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;imageblock left&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;../pics/2016-01-01-head.jpg&#34; alt=&#34;2016 01 01 head&#34; width=&#34;420&#34; height=&#34;360&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt; and agile mantra is to have a &lt;em&gt;ready-to-ship&lt;/em&gt; product each time a sprint is completed.
You must avoid any incomplete activities at any price.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Incomplete activities are also called &lt;em&gt;Undone Work&lt;/em&gt;.
They are technical debts in your software, hindering its delivery to users.
They are expended money you cannot invoice to your customers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Regulatory and traditional quality insurance departments request all kinds of documents, such as review, test results, risk analysis matrix.
They want insurance that their view of quality is fulfilled.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Scrum sees the importance of quality like the lean production approach [&lt;a href=&#34;#scrum-pocket-guide-3rd&#34;&gt;1&lt;/a&gt;].&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Quality is built into the product.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You do not need any documents proving you have fulfilled this goal.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Your sole goal is to optimize the process to produce the best products, not to repair them after production.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It is the sole responsibility of the Scrum team to guaranty the quality of their product [&lt;a href=&#34;#mastering-professional-scrum&#34;&gt;2&lt;/a&gt;].
Scrum teams also learnt you cannot win against big corporations.
So you have to define solutions satisfying the QA departments with minimal overhead and almost no undone work.
We have experience working with quality insurance and &lt;a href=&#34;https://en.wikipedia.org/wiki/Technischer_%C3%9Cberwachungsverein&#34;&gt;TUV&lt;/a&gt; or &lt;a href=&#34;https://en.wikipedia.org/wiki/Food_and_Drug_Administration&#34;&gt;FDA&lt;/a&gt; regulatory departments.
We use the following approaches to handle the needs of the regulatory departments, seen as stakeholders in the Scrum terminology.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use static analysis tools such as &lt;a href=&#34;https://pmd.github.io/&#34;&gt;PMD&lt;/a&gt;, &lt;a href=&#34;https://checkstyle.sourceforge.io/&#34;&gt;Checkstyle&lt;/a&gt;, &lt;a href=&#34;http://findbugs.sourceforge.net/&#34;&gt;Findbugs&lt;/a&gt;
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt; to create quality gate reports for your QA department.
Thousands of checks and hundreds of pages of reports will satisfy any QA department.
Plugins exist for &lt;a href=&#34;https://www.eclipse.org/&#34;&gt;Eclipse&lt;/a&gt;
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_2&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_2&#34; title=&#34;View footnote.&#34;&gt;2&lt;/a&gt;]&lt;/sup&gt; and continuous integration servers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use review plugin such as Eclipse Jupiter to create these still mandatory review reports on the source code.
These reports are useless in an agile team working with techniques such as refactoring and pair programming.
But they are still mandatory for most of the traditional quality assurance &lt;em&gt;QA&lt;/em&gt; departments.
The plugin allows you to generate nice looking reports and to implement the findings at the same time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;a href=&#34;https://en.wikipedia.org/wiki/Test-driven_development&#34;&gt;Test Driven Development&lt;/a&gt; approach and create a lot of unit tests.
By slightly extending the logging features of JUnit and by using code coverage tools, you can create reports showing which source code was tested.
Add some annotations to your test cases, and you have full traceability to your stories and associated software requirements.
With a small amount of work, you can generate thousands of pages of information and provide the PDF documents to the regulatory department.
These documents are also &lt;a href=&#34;https://en.wikipedia.org/wiki/Technischer_%C3%9Cberwachungsverein&#34;&gt;TUV&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Food_and_Drug_Administration&#34;&gt;FDA&lt;/a&gt; compliant.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;a href=&#34;https://en.wikipedia.org/wiki/Behavior-driven_development&#34;&gt;Behavior Driven Development&lt;/a&gt; approach and create acceptance criteria for all your stories.
Using the reporting features of easyb footonote:[The website of easyb is no more available therefore no link can be provided.], you can create acceptance test reports for all your stories.
It generates hundreds of pages of information and provides the PDF documents to the regulatory department.
These documents are also &lt;a href=&#34;https://en.wikipedia.org/wiki/Technischer_%C3%9Cberwachungsverein&#34;&gt;TUV&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Food_and_Drug_Administration&#34;&gt;FDA&lt;/a&gt; compliant.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use continuous integration servers to run all the above measures and generate the documentation at the end of each sprint or release.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Link your version control system with your continuous server, issue tracking application and unit tests.
So you can generate release notes stating the list of closed issues with the associated source code and unit tests verifying the correctness of the change.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Similar tools are available in Python .NET, or C++ communities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can satisfy your QA and regulatory stakeholders with a lot of reports nobody will ever read.
A real &lt;a href=&#34;https://scrumguides.org/&#34;&gt;Scrum&lt;/a&gt; team corrects weaknesses during the development process and always deliver software of the highest quality.
The reports can only show the inherent quality of the software and are not worth the paper they are printed on.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But you satisfy powerful stakeholder groups and can more freely work on the most important goal.
Deliver on time and in budget the best software the customer wants to have.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_references&#34;&gt;References&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;scrum-pocket-guide-3rd&#34;&gt;&lt;/a&gt;[1] G. Verheyen, &lt;em&gt;Scrum - A Pocket Guide&lt;/em&gt;, Third. Van Haren Publishing, 2021 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B08XWQ7DG9&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B08XWQ7DG9&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a id=&#34;mastering-professional-scrum&#34;&gt;&lt;/a&gt;[2] S. Ockerman and S. Reindl, &lt;em&gt;Mastering Professional Scrum&lt;/em&gt;. Addison Wesley, 2019 [Online]. Available: &lt;a href=&#34;https://www.amazon.com/dp/B07XTLNPTC&#34; class=&#34;bare&#34;&gt;https://www.amazon.com/dp/B07XTLNPTC&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. The successor of FindBugs is &lt;a href=&#34;https://spotbugs.github.io/&#34;&gt;SpotBugs&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_2&#34;&gt;
&lt;a href=&#34;#_footnoteref_2&#34;&gt;2&lt;/a&gt;. A more popular IDE is &lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;IntelliJ IDEA&lt;/a&gt; with similar plugins.
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
  </channel>
</rss>
