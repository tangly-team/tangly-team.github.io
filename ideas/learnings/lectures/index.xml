<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lectures on tangly Components</title>
    <link>https://blog.tangly.net/ideas/learnings/lectures/</link>
    <description>Recent content in Lectures on tangly Components</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 01 May 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.tangly.net/ideas/learnings/lectures/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SWAT Lecture</title>
      <link>https://blog.tangly.net/ideas/learnings/lectures/swat-lecture/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/ideas/learnings/lectures/swat-lecture/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_swat_lecture&#34;&gt;SWAT Lecture&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;sect2&#34;&gt;&#xA;&lt;h3 id=&#34;_introduction&#34;&gt;Introduction&lt;/h3&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The software architecture and techniques &lt;em&gt;SWAT&lt;/em&gt; lecture conveys the basics of systematic agile design for a software architecture.&#xA;The approach is adequate for the problem of (agile architectural thinking) as well as methods of agile quality assurance.&#xA;Students apply the learnt principles of their semester or private software projects.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;It is particularly suitable for students who are working on a larger software project at the same time.&#xA;The course with 3 &lt;a href=&#34;https://en.wikipedia.org/wiki/European_Credit_Transfer_and_Accumulation_System&#34;&gt;ECTS&lt;/a&gt; was taught at Swiss technical universities during this and the last decade.&#xA;The themes are regularly updated to reflect actual trends and technical possibilities.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>PCP Lecture</title>
      <link>https://blog.tangly.net/ideas/learnings/lectures/pcp-lecture/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.tangly.net/ideas/learnings/lectures/pcp-lecture/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_pcp_lecture&#34;&gt;PCP Lecture&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;sect2&#34;&gt;&#xA;&lt;h3 id=&#34;_introduction&#34;&gt;Introduction&lt;/h3&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The programming concepts and paradigms &lt;em&gt;PCP&lt;/em&gt; convey the basic for functional programming and modern java programming.&#xA;The Clojure language &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#programming-clojure&#34;&gt;1&lt;/a&gt;]&lt;/span&gt; is used to teach functional programming approaches.&#xA;The focus is on immutability, functions as first-class citizens, and parallel programming.&#xA;We analyze later how far it is possible to use these techniques in the modern Java language.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Slides and reference literature are in English and published under &lt;a href=&#34;../#modern-java-and-selected-jvm-languages-lectures&#34;&gt;Slides and Literature&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
